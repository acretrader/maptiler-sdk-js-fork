import*as a from"maplibre-gl";import{config as T}from"@maptiler/client";import{LanguageGeocoding as Gt,ServiceError as jt,coordinates as Dt,data as zt,geocoding as Jt,geolocation as qt,staticMaps as Wt}from"@maptiler/client";const A={AUTO:"auto",LATIN:"latin",NON_LATIN:"nonlatin",LOCAL:"",ALBANIAN:"sq",AMHARIC:"am",ARABIC:"ar",ARMENIAN:"hy",AZERBAIJANI:"az",BASQUE:"eu",BELORUSSIAN:"be",BOSNIAN:"bs",BRETON:"br",BULGARIAN:"bg",CATALAN:"ca",CHINESE:"zh",CORSICAN:"co",CROATIAN:"hr",CZECH:"cs",DANISH:"da",DUTCH:"nl",ENGLISH:"en",ESPERANTO:"eo",ESTONIAN:"et",FINNISH:"fi",FRENCH:"fr",FRISIAN:"fy",GEORGIAN:"ka",GERMAN:"de",GREEK:"el",HEBREW:"he",HINDI:"hi",HUNGARIAN:"hu",ICELANDIC:"is",INDONESIAN:"id",IRISH:"ga",ITALIAN:"it",JAPANESE:"ja",JAPANESE_HIRAGANA:"ja-Hira",JAPANESE_KANA:"ja_kana",JAPANESE_LATIN:"ja_rm",JAPANESE_2018:"ja-Latn",KANNADA:"kn",KAZAKH:"kk",KOREAN:"ko",KOREAN_LATIN:"ko-Latn",KURDISH:"ku",ROMAN_LATIN:"la",LATVIAN:"lv",LITHUANIAN:"lt",LUXEMBOURGISH:"lb",MACEDONIAN:"mk",MALAYALAM:"ml",MALTESE:"mt",NORWEGIAN:"no",OCCITAN:"oc",POLISH:"pl",PORTUGUESE:"pt",ROMANIAN:"ro",ROMANSH:"rm",RUSSIAN:"ru",SCOTTISH_GAELIC:"gd",SERBIAN_CYRILLIC:"sr",SERBIAN_LATIN:"sr-Latn",SLOVAK:"sk",SLOVENE:"sl",SPANISH:"es",SWEDISH:"sv",TAMIL:"ta",TELUGU:"te",THAI:"th",TURKISH:"tr",UKRAINIAN:"uk",WELSH:"cy"},$=new Set(Object.values(A));function I(){if(typeof navigator>"u")return Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0];const t=Array.from(new Set(navigator.languages.map(e=>e.split("-")[0]))).filter(e=>$.has(e));return t.length?t[0]:A.LATIN}class b{constructor(){this.verbose=!1,this.primaryLanguage=A.AUTO,this.secondaryLanguage=null,this._apiKey="Not defined yet."}set apiKey(e){this._apiKey=e,T.apiKey=e}get apiKey(){return this._apiKey}set fetch(e){T.fetch=e}get fetch(){return T.fetch}}const h=new b;var H=8,B="f0e4ff8c-a9e4-414e-9f4d-7938762c948f",K="Satellite no label",G={satellite:{url:"https://api.maptiler.com/tiles/satellite-v2/tiles.json?key={key}",tileSize:512,type:"raster"},maptiler_attribution:{attribution:'<a href="https://www.maptiler.com/copyright/" target="_blank">&copy; MapTiler</a> <a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a>',type:"vector"}},j=[{id:"satellite",type:"raster",source:"satellite",minzoom:0,layout:{visibility:"visible"},paint:{"raster-opacity":1},filter:["all"]}],D={"maptiler:copyright":"This style was generated on MapTiler Cloud. Usage outside of MapTiler Cloud or MapTiler Server requires valid MapTiler Data package: https://www.maptiler.com/data/ -- please contact us."},z="https://api.maptiler.com/fonts/{fontstack}/{range}.pbf?key={key}",J=0,q=0,W=[-78.55323097748868,24.03141891413972],V=5.066147709178387,F={version:H,id:B,name:K,sources:G,layers:j,metadata:D,glyphs:z,bearing:J,pitch:q,center:W,zoom:V};const N={STREETS:"streets-v2",HYBRID:"hybrid",SATELLITE:"satellite",OUTDOOR:"outdoor",BASIC:"basic-v2",DARK:"streets-v2-dark",LIGHT:"streets-v2-light"},v={};v[N.SATELLITE]=F;function E(t){return t in v}function C(t,e){if(!E(t))return null;const r=JSON.stringify(v[t]).replace(/{key}/gi,e);return JSON.parse(r)}const c={mapStyle:N.STREETS,maptilerLogoURL:"https://api.maptiler.com/resources/logo.svg",maptilerURL:"https://www.maptiler.com/",maptilerApiURL:"https://api.maptiler.com/",rtlPluginURL:"https://cdn.maptiler.com/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.min.js",primaryLanguage:A.LATIN,secondaryLanguage:A.NON_LATIN,terrainSourceURL:"https://api.maptiler.com/tiles/terrain-rgb/tiles.json",terrainSourceId:"maptiler-terrain"};Object.freeze(c);class P extends a.LogoControl{constructor(e={}){var r,i;super(e),this.logoURL="",this.linkURL="",this.logoURL=(r=e.logoURL)!=null?r:c.maptilerLogoURL,this.linkURL=(i=e.linkURL)!=null?i:c.maptilerURL}onAdd(e){this._map=e,this._compact=this.options&&this.options.compact,this._container=window.document.createElement("div"),this._container.className="maplibregl-ctrl";const r=window.document.createElement("a");return r.style.backgroundRepeat="no-repeat",r.style.cursor="pointer",r.style.display="block",r.style.height="23px",r.style.margin="0 0 -4px -4px",r.style.overflow="hidden",r.style.width="88px",r.style.backgroundImage=`url(${this.logoURL})`,r.style.backgroundSize="100px 30px",r.style.width="100px",r.style.height="30px",r.target="_blank",r.rel="noopener nofollow",r.href=this.linkURL,r.setAttribute("aria-label",this._map._getUIString("LogoControl.Title")),r.setAttribute("rel","noopener nofollow"),this._container.appendChild(r),this._container.style.display="block",this._map.on("resize",this._updateCompact),this._updateCompact(),this._container}}function Z(...t){h.verbose&&console.log(...t)}function R(t){const e=/^maptiler:\/\/(.*)/;let r;const i=t.trim();let o;return i.startsWith("http://")||i.startsWith("https://")?o=i:(r=e.exec(i))!==null?o=`https://api.maptiler.com/maps/${r[1]}/style.json`:o=`https://api.maptiler.com/maps/${i}/style.json`,o.includes("key=")||(o=`${o}?key=${h.apiKey}`),o}function X(){const t=a;t.getRTLTextPluginStatus()==="unavailable"&&t.setRTLTextPlugin(c.rtlPluginURL,null,!0)}var Y=Object.defineProperty,Q=Object.defineProperties,tt=Object.getOwnPropertyDescriptors,_=Object.getOwnPropertySymbols,et=Object.prototype.hasOwnProperty,rt=Object.prototype.propertyIsEnumerable,w=(t,e,r)=>e in t?Y(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,O=(t,e)=>{for(var r in e||(e={}))et.call(e,r)&&w(t,r,e[r]);if(_)for(var r of _(e))rt.call(e,r)&&w(t,r,e[r]);return t},U=(t,e)=>Q(t,tt(e)),k=(t,e,r)=>new Promise((i,o)=>{var d=l=>{try{y(r.next(l))}catch(f){o(f)}},p=l=>{try{y(r.throw(l))}catch(f){o(f)}},y=l=>l.done?i(l.value):Promise.resolve(l.value).then(d,p);y((r=r.apply(t,e)).next())});class at extends a.Map{constructor(e){var r;let i;if("style"in e?typeof i=="string"&&E(i)?i=C(i,h.apiKey):typeof i=="string"?i=R(i):i=e.style:(i=R(c.mapStyle),Z(`Map style not provided, backing up to ${c.mapStyle}`)),super(U(O({},e),{style:i,maplibreLogo:!1})),this.languageShouldUpdate=!1,this.isStyleInitialized=!1,this.isTerrainEnabled=!1,this.terrainExaggeration=1,this.on("styledataloading",()=>{this.languageShouldUpdate=!!h.primaryLanguage||!!h.secondaryLanguage}),this.on("styledata",()=>{h.primaryLanguage&&(this.languageShouldUpdate||!this.isStyleInitialized)&&this.setPrimaryLanguage(h.primaryLanguage),h.secondaryLanguage&&(this.languageShouldUpdate||!this.isStyleInitialized)&&this.setSecondaryLanguage(h.secondaryLanguage),this.languageShouldUpdate=!1,this.isStyleInitialized=!0}),this.on("styledata",()=>{this.getTerrain()===null&&this.isTerrainEnabled&&this.enableTerrain(this.terrainExaggeration)}),this.once("load",()=>k(this,null,function*(){X()})),this.once("load",()=>k(this,null,function*(){let o=null;try{o=this.getSource("openmaptiles").url}catch{return}const d=yield(yield fetch(o)).json();if("logo"in d&&d.logo){const p=d.logo;this.addControl(new P({logoURL:p}),e.logoPosition),e.attributionControl===!1&&this.addControl(new a.AttributionControl(e))}else e.maptilerLogo&&this.addControl(new P,e.logoPosition)})),e.navigationControl!==!1){const o=e.navigationControl===!0||e.navigationControl===void 0?"top-right":e.navigationControl;this.addControl(new a.NavigationControl({showCompass:!0,showZoom:!0,visualizePitch:!0}),o)}e.enableTerrain&&this.enableTerrain((r=e.terrainExaggeration)!=null?r:1)}setStyle(e,r){let i=e;return typeof e=="string"&&E(e)?i=C(e,h.apiKey):typeof e=="string"&&(i=R(e)),super.setStyle(i,r)}setLanguage(e=c.primaryLanguage){if(e===A.AUTO)return this.setLanguage(I());this.setPrimaryLanguage(e)}setPrimaryLanguage(e=c.primaryLanguage){if(e===A.AUTO)return this.setPrimaryLanguage(I());h.primaryLanguage=e;const r=this.getStyle().layers,i=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,o=/^\s*name\s*(:\s*(\S*))?\s*$/,d=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/,p=/^(.*)({\s*name\s*(:\s*(\S*))?\s*})(.*)$/,y=e?`name:${e}`:"name",l=["case",["has",y],["get",y],["get","name:latin"]];for(let f=0;f<r.length;f+=1){const u=r[f],m=u.layout;if(!m||!m["text-field"])continue;const n=this.getLayoutProperty(u.id,"text-field");let g;if(Array.isArray(n)&&n.length>=2&&n[0].trim().toLowerCase()==="concat"){const s=n.slice();for(let L=0;L<n.length;L+=1){const S=n[L];if((typeof S=="string"||S instanceof String)&&i.exec(S.toString())){s[L]=l;break}else if(Array.isArray(S)&&S.length>=2&&S[0].trim().toLowerCase()==="get"&&o.exec(S[1].toString())){s[L]=l;break}else if(Array.isArray(S)&&S.length===4&&S[0].trim().toLowerCase()==="case"){s[L]=l;break}}this.setLayoutProperty(u.id,"text-field",s)}else if(Array.isArray(n)&&n.length>=2&&n[0].trim().toLowerCase()==="get"&&o.exec(n[1].toString())){const s=l;this.setLayoutProperty(u.id,"text-field",s)}else if((typeof n=="string"||n instanceof String)&&i.exec(n.toString())){const s=l;this.setLayoutProperty(u.id,"text-field",s)}else if(Array.isArray(n)&&n.length===4&&n[0].trim().toLowerCase()==="case"){const s=l;this.setLayoutProperty(u.id,"text-field",s)}else if((typeof n=="string"||n instanceof String)&&(g=d.exec(n.toString()))!==null){const s=`{${y}}${g[3]}{name${g[4]||""}}`;this.setLayoutProperty(u.id,"text-field",s)}else if((typeof n=="string"||n instanceof String)&&(g=p.exec(n.toString()))!==null){const s=`${g[1]}{${y}}${g[5]}`;this.setLayoutProperty(u.id,"text-field",s)}}}setSecondaryLanguage(e=c.secondaryLanguage){if(e===A.AUTO)return this.setSecondaryLanguage(I());h.secondaryLanguage=e;const r=this.getStyle().layers,i=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,o=/^\s*name\s*(:\s*(\S*))?\s*$/,d=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/;let p;for(let y=0;y<r.length;y+=1){const l=r[y],f=l.layout;if(!f||!f["text-field"])continue;const u=this.getLayoutProperty(l.id,"text-field");let m;if(Array.isArray(u)&&u.length>=2&&u[0].trim().toLowerCase()==="concat"){m=u.slice();let n=0;for(let g=0;g<u.length;g+=1){const s=u[g];if((typeof s=="string"||s instanceof String)&&i.exec(s.toString())){if(n===1){m[g]=`{name:${e}}`;break}n+=1}else if(Array.isArray(s)&&s.length>=2&&s[0].trim().toLowerCase()==="get"&&o.exec(s[1].toString())){if(n===1){m[g][1]=`name:${e}`;break}n+=1}else if(Array.isArray(s)&&s.length===4&&s[0].trim().toLowerCase()==="case"){if(n===1){m[g]=["get",`name:${e}`];break}n+=1}}this.setLayoutProperty(l.id,"text-field",m)}else if((typeof u=="string"||u instanceof String)&&(p=d.exec(u.toString()))!==null){const n=e?`name:${e}`:"name";m=`{name${p[1]||""}}${p[3]}{${n}}`,this.setLayoutProperty(l.id,"text-field",m)}}}enableTerrain(e=1){const r=this.getTerrain(),i=()=>{this.isTerrainEnabled=!0,this.terrainExaggeration=e,this.addSource(c.terrainSourceId,{type:"raster-dem",url:`${c.terrainSourceURL}?key=${h.apiKey}`}),this.setTerrain({source:c.terrainSourceId,exaggeration:e})};if(r){this.setTerrain(U(O({},r),{exaggeration:e}));return}this.loaded()||this.isTerrainEnabled?i():this.once("load",()=>{this.getTerrain()&&this.getSource(c.terrainSourceId)||i()})}disableTerrain(){this.isTerrainEnabled=!1,this.setTerrain(null),this.getSource(c.terrainSourceId)&&this.removeSource(c.terrainSourceId)}setTerrainExaggeration(e){this.enableTerrain(e)}}function x(t,e){this.x=t,this.y=e}x.prototype={clone:function(){return new x(this.x,this.y)},add:function(t){return this.clone()._add(t)},sub:function(t){return this.clone()._sub(t)},multByPoint:function(t){return this.clone()._multByPoint(t)},divByPoint:function(t){return this.clone()._divByPoint(t)},mult:function(t){return this.clone()._mult(t)},div:function(t){return this.clone()._div(t)},rotate:function(t){return this.clone()._rotate(t)},rotateAround:function(t,e){return this.clone()._rotateAround(t,e)},matMult:function(t){return this.clone()._matMult(t)},unit:function(){return this.clone()._unit()},perp:function(){return this.clone()._perp()},round:function(){return this.clone()._round()},mag:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},equals:function(t){return this.x===t.x&&this.y===t.y},dist:function(t){return Math.sqrt(this.distSqr(t))},distSqr:function(t){const e=t.x-this.x,r=t.y-this.y;return e*e+r*r},angle:function(){return Math.atan2(this.y,this.x)},angleTo:function(t){return Math.atan2(this.y-t.y,this.x-t.x)},angleWith:function(t){return this.angleWithSep(t.x,t.y)},angleWithSep:function(t,e){return Math.atan2(this.x*e-this.y*t,this.x*t+this.y*e)},_matMult:function(t){const e=t[0]*this.x+t[1]*this.y,r=t[2]*this.x+t[3]*this.y;return this.x=e,this.y=r,this},_add:function(t){return this.x+=t.x,this.y+=t.y,this},_sub:function(t){return this.x-=t.x,this.y-=t.y,this},_mult:function(t){return this.x*=t,this.y*=t,this},_div:function(t){return this.x/=t,this.y/=t,this},_multByPoint:function(t){return this.x*=t.x,this.y*=t.y,this},_divByPoint:function(t){return this.x/=t.x,this.y/=t.y,this},_unit:function(){return this._div(this.mag()),this},_perp:function(){const t=this.y;return this.y=this.x,this.x=-t,this},_rotate:function(t){const e=Math.cos(t),r=Math.sin(t),i=e*this.x-r*this.y,o=r*this.x+e*this.y;return this.x=i,this.y=o,this},_rotateAround:function(t,e){const r=Math.cos(t),i=Math.sin(t),o=e.x+r*(this.x-e.x)-i*(this.y-e.y),d=e.y+i*(this.x-e.x)+r*(this.y-e.y);return this.x=o,this.y=d,this},_round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},x.convert=function(t){return t instanceof x?t:Array.isArray(t)?new x(t[0],t[1]):t};var M=(t=>(t[t.METRIC=0]="METRIC",t[t.IMPERIAL=1]="IMPERIAL",t))(M||{});const it=a.default.supported,nt=a.default.setRTLTextPlugin,st=a.default.getRTLTextPluginStatus,ot=a.default.NavigationControl,lt=a.default.GeolocateControl,ut=a.default.AttributionControl,ct=a.default.LogoControl,ht=a.default.ScaleControl,gt=a.default.FullscreenControl,yt=a.default.TerrainControl,dt=a.default.Popup,pt=a.default.Marker,ft=a.default.Style,mt=a.default.LngLat,St=a.default.LngLatBounds,At=a.default.MercatorCoordinate,Lt=a.default.Evented,xt=a.default.AJAXError,Tt=a.default.CanvasSource,It=a.default.GeoJSONSource,Nt=a.default.ImageSource,vt=a.default.RasterDEMTileSource,Et=a.default.RasterTileSource,Rt=a.default.VectorTileSource,bt=a.default.VideoSource,Ct=a.default.prewarm,Pt=a.default.clearPrewarmedResources,_t=a.default.version,wt=a.default.workerCount,Ot=a.default.maxParallelImageRequests,Ut=a.default.clearStorage,kt=a.default.workerUrl,Mt=a.default.addProtocol,$t=a.default.removeProtocol;export{xt as AJAXError,ut as AttributionControl,Tt as CanvasSource,Lt as Evented,gt as FullscreenControl,It as GeoJSONSource,lt as GeolocateControl,Nt as ImageSource,A as Language,Gt as LanguageGeocoding,mt as LngLat,St as LngLatBounds,ct as LogoControl,at as Map,N as MaptilerStyle,pt as Marker,At as MercatorCoordinate,ot as NavigationControl,x as Point,dt as Popup,vt as RasterDEMTileSource,Et as RasterTileSource,ht as ScaleControl,b as SdkConfig,jt as ServiceError,ft as Style,yt as TerrainControl,M as Unit,Rt as VectorTileSource,bt as VideoSource,Mt as addProtocol,Pt as clearPrewarmedResources,Ut as clearStorage,h as config,Dt as coordinates,zt as data,Jt as geocoding,qt as geolocation,st as getRTLTextPluginStatus,Ot as maxParallelImageRequests,Ct as prewarm,$t as removeProtocol,nt as setRTLTextPlugin,Wt as staticMaps,it as supported,_t as version,wt as workerCount,kt as workerUrl};
