import L from"maplibre-gl";export*from"maplibre-gl";import{Base64 as G}from"js-base64";import{v4 as K}from"uuid";import j from"events";import{config as R,geolocation as x}from"@maptiler/client";import{LanguageGeocoding as oe,ServiceError as le,coordinates as ce,data as he,geocoding as ue,geolocation as ge,staticMaps as pe}from"@maptiler/client";const S={AUTO:"auto",LATIN:"latin",NON_LATIN:"nonlatin",LOCAL:"",ALBANIAN:"sq",AMHARIC:"am",ARABIC:"ar",ARMENIAN:"hy",AZERBAIJANI:"az",BASQUE:"eu",BELORUSSIAN:"be",BOSNIAN:"bs",BRETON:"br",BULGARIAN:"bg",CATALAN:"ca",CHINESE:"zh",CORSICAN:"co",CROATIAN:"hr",CZECH:"cs",DANISH:"da",DUTCH:"nl",ENGLISH:"en",ESPERANTO:"eo",ESTONIAN:"et",FINNISH:"fi",FRENCH:"fr",FRISIAN:"fy",GEORGIAN:"ka",GERMAN:"de",GREEK:"el",HEBREW:"he",HINDI:"hi",HUNGARIAN:"hu",ICELANDIC:"is",INDONESIAN:"id",IRISH:"ga",ITALIAN:"it",JAPANESE:"ja",JAPANESE_HIRAGANA:"ja-Hira",JAPANESE_KANA:"ja_kana",JAPANESE_LATIN:"ja_rm",JAPANESE_2018:"ja-Latn",KANNADA:"kn",KAZAKH:"kk",KOREAN:"ko",KOREAN_LATIN:"ko-Latn",KURDISH:"ku",ROMAN_LATIN:"la",LATVIAN:"lv",LITHUANIAN:"lt",LUXEMBOURGISH:"lb",MACEDONIAN:"mk",MALAYALAM:"ml",MALTESE:"mt",NORWEGIAN:"no",OCCITAN:"oc",POLISH:"pl",PORTUGUESE:"pt",ROMANIAN:"ro",ROMANSH:"rm",RUSSIAN:"ru",SCOTTISH_GAELIC:"gd",SERBIAN_CYRILLIC:"sr",SERBIAN_LATIN:"sr-Latn",SLOVAK:"sk",SLOVENE:"sl",SPANISH:"es",SWEDISH:"sv",TAMIL:"ta",TELUGU:"te",THAI:"th",TURKISH:"tr",UKRAINIAN:"uk",WELSH:"cy"},F=new Set(Object.values(S));function N(e){return F.has(e)}const z=new Set(Object.values(S));function C(){if(typeof navigator>"u")return Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0];const e=Array.from(new Set(navigator.languages.map(t=>t.split("-")[0]))).filter(t=>z.has(t));return e.length?e[0]:S.LATIN}class P extends j{constructor(){super(),this.primaryLanguage=S.AUTO,this.secondaryLanguage=null,this._unit="metric",this._apiKey=""}set unit(t){this._unit=t,this.emit("unit",t)}get unit(){return this._unit}set apiKey(t){this._apiKey=t,R.apiKey=t,this.emit("apiKey",t)}get apiKey(){return this._apiKey}set fetch(t){R.fetch=t}get fetch(){return R.fetch}}const g=new P,p={maptilerLogoURL:"https://api.maptiler.com/resources/logo.svg",maptilerURL:"https://www.maptiler.com/",maptilerApiHost:"api.maptiler.com",rtlPluginURL:"https://cdn.maptiler.com/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.min.js",primaryLanguage:S.LATIN,secondaryLanguage:S.NON_LATIN,terrainSourceURL:"https://api.maptiler.com/tiles/terrain-rgb/tiles.json",terrainSourceId:"maptiler-terrain"};Object.freeze(p);class w extends L.LogoControl{constructor(t={}){var i,r;super(t),this.logoURL="",this.linkURL="",this.logoURL=(i=t.logoURL)!=null?i:p.maptilerLogoURL,this.linkURL=(r=t.linkURL)!=null?r:p.maptilerURL}onAdd(t){this._map=t,this._compact=this.options&&this.options.compact,this._container=window.document.createElement("div"),this._container.className="maplibregl-ctrl";const i=window.document.createElement("a");return i.style.backgroundRepeat="no-repeat",i.style.cursor="pointer",i.style.display="block",i.style.height="23px",i.style.margin="0 0 -4px -4px",i.style.overflow="hidden",i.style.width="88px",i.style.backgroundImage=`url(${this.logoURL})`,i.style.backgroundSize="100px 30px",i.style.width="100px",i.style.height="30px",i.target="_blank",i.rel="noopener nofollow",i.href=this.linkURL,i.setAttribute("aria-label",this._map._getUIString("LogoControl.Title")),i.setAttribute("rel","noopener nofollow"),this._container.appendChild(i),this._container.style.display="block",this._map.on("resize",this._updateCompact),this._updateCompact(),this._container}}function q(){L.getRTLTextPluginStatus()==="unavailable"&&L.setRTLTextPlugin(p.rtlPluginURL,null,!0)}function W(e,t){e.forEach(i=>{!t[i]||(t[i]=t[i].bind(t))})}function U(e,t,i){const r=window.document.createElement(e);return t!==void 0&&(r.className=t),i&&i.appendChild(r),r}function J(e){e.parentNode&&e.parentNode.removeChild(e)}var Y=8,Z="f0e4ff8c-a9e4-414e-9f4d-7938762c948f",X="Satellite no label",Q={satellite:{url:"https://api.maptiler.com/tiles/satellite-v2/tiles.json",tileSize:512,type:"raster"},maptiler_attribution:{attribution:'<a href="https://www.maptiler.com/copyright/" target="_blank">&copy; MapTiler</a> <a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a>',type:"vector"}},tt=[{id:"satellite",type:"raster",source:"satellite",minzoom:0,layout:{visibility:"visible"},paint:{"raster-opacity":1},filter:["all"]}],et={"maptiler:copyright":"This style was generated on MapTiler Cloud. Usage outside of MapTiler Cloud or MapTiler Server requires valid MapTiler Data package: https://www.maptiler.com/data/ -- please contact us."},it="https://api.maptiler.com/fonts/{fontstack}/{range}.pbf?",rt=0,at=0,nt=[-78.55323097748868,24.03141891413972],st=5.066147709178387,ot={version:Y,id:Z,name:X,sources:Q,layers:tt,metadata:et,glyphs:it,bearing:rt,pitch:at,center:nt,zoom:st};const E=[{referenceStyleID:"STREETS",name:"Streets",description:"",variants:[{id:"streets-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"streets-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"streets-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""},{id:"streets-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""}]},{referenceStyleID:"OUTDOOR",name:"Outdoor",description:"",variants:[{id:"outdoor-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"WINTER",name:"Winter",description:"",variants:[{id:"winter-v2",name:"Winter",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"SATELLITE",name:"Satellite",description:"",variants:[{id:"satellite",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"HYBRID",name:"Hybrid",description:"",variants:[{id:"hybrid",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"BASIC",name:"Basic",description:"",variants:[{id:"basic-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"basic-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"basic-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"BRIGHT",name:"Bright",description:"",variants:[{id:"bright-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"bright-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"bright-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""},{id:"bright-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""}]},{referenceStyleID:"OPENSTREETMAP",name:"OpenStreetMap",description:"",variants:[{id:"openstreetmap",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"TOPO",name:"Topo",description:"",variants:[{id:"topo-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"topo-v2-shiny",name:"Shiny",variantType:"SHINY",description:"",imageURL:""},{id:"topo-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""},{id:"topo-v2-topographique",name:"Topographique",variantType:"TOPOGRAPHIQUE",description:"",imageURL:""}]},{referenceStyleID:"VOYAGER",name:"Voyager",description:"",variants:[{id:"voyager-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"voyager-v2-darkmatter",name:"Darkmatter",variantType:"DARK",description:"",imageURL:""},{id:"voyager-v2-positron",name:"Positron",variantType:"LIGHT",description:"",imageURL:""},{id:"voyager-v2-vintage",name:"Vintage",variantType:"VINTAGE",description:"",imageURL:""}]},{referenceStyleID:"TONER",name:"Toner",description:"",variants:[{id:"toner-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"toner-v2-background",name:"Background",variantType:"BACKGROUND",description:"",imageURL:""},{id:"toner-v2-lite",name:"Lite",variantType:"LITE",description:"",imageURL:""},{id:"toner-v2-lines",name:"Lines",variantType:"LINES",description:"",imageURL:""}]},{referenceStyleID:"STAGE",name:"Stage",description:"",variants:[{id:"stage",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"stage-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"stage-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"OCEAN",name:"Ocean",description:"",variants:[{id:"ocean",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]}],I={satellite:ot};function O(e){const t=/^maptiler:\/\/(.*)/;let i;const r=e.trim();let c;return r.startsWith("http://")||r.startsWith("https://")?c=r:(i=t.exec(r))!==null?c=`https://api.maptiler.com/maps/${i[1]}/style.json`:c=`https://api.maptiler.com/maps/${r}/style.json`,c}function lt(e){return new Proxy(e,{get(t,i,r){return t.hasVariant(i)?t.getVariant(i):i.toString().toUpperCase()===i?e.getDefaultVariant():Reflect.get(t,i,r)}})}class _{constructor(t,i,r,c,o,a){this.name=t,this.variantType=i,this.id=r,this.referenceStyle=c,this.description=o,this.imageURL=a}getName(){return this.name}getFullName(){return`${this.referenceStyle.getName()} ${this.name}`}getType(){return this.variantType}getUsableStyle(){return this.id in I?I[this.id]:O(this.id)}getId(){return this.id}getDescription(){return this.description}getReferenceStyle(){return this.referenceStyle}hasVariant(t){return this.referenceStyle.hasVariant(t)}getVariant(t){return this.referenceStyle.getVariant(t)}getVariants(){return this.referenceStyle.getVariants().filter(t=>t!==this)}getImageURL(){return this.imageURL}}class b{constructor(t,i){this.name=t,this.id=i,this.variants={},this.orderedVariants=[]}getName(){return this.name}getId(){return this.id}addVariant(t){this.variants[t.getType()]=t,this.orderedVariants.push(t)}hasVariant(t){return t in this.variants}getVariant(t){return t in this.variants?this.variants[t]:this.orderedVariants[0]}getVariants(){return Object.values(this.variants)}getDefaultVariant(){return this.orderedVariants[0]}}function ct(){const e={};for(let t=0;t<E.length;t+=1){const i=E[t],r=lt(new b(i.name,i.referenceStyleID));for(let c=0;c<i.variants.length;c+=1){const o=i.variants[c],a=new _(o.name,o.variantType,o.id,r,o.description,o.imageURL);r.addVariant(a)}e[i.referenceStyleID]=r}return e}const D=ct();function k(e){return e?typeof e=="string"&&e.toLowerCase()in I?I[e.toLowerCase()]:typeof e=="string"||e instanceof String?O(e):e instanceof _?e.getUsableStyle():e instanceof b?e.getDefaultVariant().getUsableStyle():e:D[E[0].referenceStyleID].getDefaultVariant().getUsableStyle()}class ht{constructor(){W(["_toggleTerrain","_updateTerrainIcon"],this)}onAdd(t){return this._map=t,this._container=U("div","maplibregl-ctrl maplibregl-ctrl-group"),this._terrainButton=U("button","maplibregl-ctrl-terrain",this._container),U("span","maplibregl-ctrl-icon",this._terrainButton).setAttribute("aria-hidden","true"),this._terrainButton.type="button",this._terrainButton.addEventListener("click",this._toggleTerrain),this._updateTerrainIcon(),this._map.on("terrain",this._updateTerrainIcon),this._container}onRemove(){J(this._container),this._map.off("terrain",this._updateTerrainIcon),this._map=void 0}_toggleTerrain(){this._map.hasTerrain()?this._map.disableTerrain():this._map.enableTerrain(),this._updateTerrainIcon()}_updateTerrainIcon(){this._terrainButton.classList.remove("maplibregl-ctrl-terrain"),this._terrainButton.classList.remove("maplibregl-ctrl-terrain-enabled"),this._map.hasTerrain()?(this._terrainButton.classList.add("maplibregl-ctrl-terrain-enabled"),this._terrainButton.title=this._map._getUIString("TerrainControl.disableTerrain")):(this._terrainButton.classList.add("maplibregl-ctrl-terrain"),this._terrainButton.title=this._map._getUIString("TerrainControl.enableTerrain"))}}class ut extends L.NavigationControl{constructor(){super({showCompass:!0,showZoom:!0,visualizePitch:!0}),this._compass.removeEventListener("click",this._compass.clickFunction),this._compass.addEventListener("click",t=>{this._map.getPitch()===0?this._map.easeTo({pitch:Math.min(this._map.getMaxPitch(),80)}):this.options.visualizePitch?this._map.resetNorthPitch({},{originalEvent:t}):this._map.resetNorth({},{originalEvent:t})})}_createButton(t,i){const r=super._createButton(t,i);return r.clickFunction=i,r}_rotateCompassArrow(){const t=this.options.visualizePitch?`scale(${Math.min(1.5,1/Math.pow(Math.cos(this._map.transform.pitch*(Math.PI/180)),.5))}) rotateX(${Math.min(70,this._map.transform.pitch)}deg) rotateZ(${this._map.transform.angle*(180/Math.PI)}deg)`:`rotate(${this._map.transform.angle*(180/Math.PI)}deg)`;this._compassIcon.style.transform=t}}var gt=Object.defineProperty,pt=Object.defineProperties,dt=Object.getOwnPropertyDescriptors,M=Object.getOwnPropertySymbols,mt=Object.prototype.hasOwnProperty,yt=Object.prototype.propertyIsEnumerable,$=(e,t,i)=>t in e?gt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,B=(e,t)=>{for(var i in t||(t={}))mt.call(t,i)&&$(e,i,t[i]);if(M)for(var i of M(t))yt.call(t,i)&&$(e,i,t[i]);return e},H=(e,t)=>pt(e,dt(t)),A=(e,t,i)=>new Promise((r,c)=>{var o=s=>{try{h(i.next(s))}catch(m){c(m)}},a=s=>{try{h(i.throw(s))}catch(m){c(m)}},h=s=>s.done?r(s.value):Promise.resolve(s.value).then(o,a);h((i=i.apply(e,t)).next())});const ft=K(),V={POINT:"POINT",COUNTRY:"COUNTRY"};class Lt extends L.Map{constructor(t){var i;const r=k(t.style),c=location.hash;g.apiKey||console.warn("MapTiler Cloud API key is not set. Visit https://maptiler.com and try Cloud for free!"),super(H(B({},t),{style:r,maplibreLogo:!1,transformRequest:o=>{const a=new URL(o);return a.host===p.maptilerApiHost&&(a.searchParams.has("key")||a.searchParams.append("key",g.apiKey),a.searchParams.append("mtsid",ft)),{url:a.href,headers:{}}}})),this.languageShouldUpdate=!1,this.isStyleInitialized=!1,this.isTerrainEnabled=!1,this.terrainExaggeration=1,this.once("styledata",()=>A(this,null,function*(){if(t.geolocate===!1||t.center||t.hash&&!!c)return;try{if(t.geolocate===V.COUNTRY){yield this.fitToIpBounds();return}}catch(a){console.warn(a.message)}let o=null;try{yield this.centerOnIpPoint(t.zoom),o=this.getCameraHash()}catch(a){console.warn(a.message)}(yield navigator.permissions.query({name:"geolocation"})).state==="granted"&&navigator.geolocation.getCurrentPosition(a=>{o===this.getCameraHash()&&this.easeTo({center:[a.coords.longitude,a.coords.latitude],zoom:t.zoom||12,duration:2e3})},null,{maximumAge:24*3600*1e3,timeout:5e3,enableHighAccuracy:!1})})),this.on("styledataloading",()=>{this.languageShouldUpdate=!!g.primaryLanguage||!!g.secondaryLanguage}),this.on("styledata",()=>{g.primaryLanguage&&(this.languageShouldUpdate||!this.isStyleInitialized)&&this.setPrimaryLanguage(g.primaryLanguage),g.secondaryLanguage&&(this.languageShouldUpdate||!this.isStyleInitialized)&&this.setSecondaryLanguage(g.secondaryLanguage),this.languageShouldUpdate=!1,this.isStyleInitialized=!0}),this.on("styledata",()=>{this.getTerrain()===null&&this.isTerrainEnabled&&this.enableTerrain(this.terrainExaggeration)}),this.once("load",()=>A(this,null,function*(){q()})),this.once("load",()=>A(this,null,function*(){let o={logo:null};try{const a=Object.keys(this.style.sourceCaches).map(s=>this.getSource(s)).filter(s=>typeof s.url=="string"&&s.url.includes("tiles.json")),h=new URL(a[0].url);h.searchParams.has("key")||h.searchParams.append("key",g.apiKey),o=yield(yield fetch(h.href)).json()}catch{}if("logo"in o&&o.logo){const a=o.logo;this.addControl(new w({logoURL:a}),t.logoPosition),t.attributionControl===!1&&this.addControl(new L.AttributionControl(t))}else t.maptilerLogo&&this.addControl(new w,t.logoPosition);if(t.scaleControl){const a=t.scaleControl===!0||t.scaleControl===void 0?"bottom-right":t.scaleControl,h=new L.ScaleControl({unit:g.unit});this.addControl(h,a),g.on("unit",s=>{h.setUnit(s)})}if(t.navigationControl!==!1){const a=t.navigationControl===!0||t.navigationControl===void 0?"top-right":t.navigationControl;this.addControl(new ut,a)}if(t.geolocateControl!==!1){const a=t.geolocateControl===!0||t.geolocateControl===void 0?"top-right":t.geolocateControl;this.addControl(new L.GeolocateControl({positionOptions:{enableHighAccuracy:!0,maximumAge:0,timeout:6e3},fitBoundsOptions:{maxZoom:15},trackUserLocation:!0,showAccuracyCircle:!0,showUserLocation:!0}),a)}if(t.terrainControl){const a=t.terrainControl===!0||t.terrainControl===void 0?"top-right":t.terrainControl;this.addControl(new ht,a)}if(t.fullscreenControl){const a=t.fullscreenControl===!0||t.fullscreenControl===void 0?"top-right":t.fullscreenControl;this.addControl(new L.FullscreenControl({}),a)}})),t.terrain&&this.enableTerrain((i=t.terrainExaggeration)!=null?i:this.terrainExaggeration)}setStyle(t,i){return super.setStyle(k(t),i)}setLanguage(t=p.primaryLanguage){if(t===S.AUTO)return this.setLanguage(C());this.setPrimaryLanguage(t)}setPrimaryLanguage(t=p.primaryLanguage){!N(t)||this.onStyleReady(()=>{if(t===S.AUTO)return this.setPrimaryLanguage(C());g.primaryLanguage=t;const i=this.getStyle().layers,r=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,c=/^\s*name\s*(:\s*(\S*))?\s*$/,o=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/,a=/^(.*)({\s*name\s*(:\s*(\S*))?\s*})(.*)$/,h=t?`name:${t}`:"name",s=["case",["has",h],["get",h],["get","name:latin"]];for(let m=0;m<i.length;m+=1){const u=i[m],y=u.layout;if(!y||!y["text-field"])continue;const n=this.getLayoutProperty(u.id,"text-field");let d;if(Array.isArray(n)&&n.length>=2&&n[0].trim().toLowerCase()==="concat"){const l=n.slice();for(let T=0;T<n.length;T+=1){const f=n[T];if((typeof f=="string"||f instanceof String)&&r.exec(f.toString())){l[T]=s;break}else if(Array.isArray(f)&&f.length>=2&&f[0].trim().toLowerCase()==="get"&&c.exec(f[1].toString())){l[T]=s;break}else if(Array.isArray(f)&&f.length===4&&f[0].trim().toLowerCase()==="case"){l[T]=s;break}}this.setLayoutProperty(u.id,"text-field",l)}else if(Array.isArray(n)&&n.length>=2&&n[0].trim().toLowerCase()==="get"&&c.exec(n[1].toString())){const l=s;this.setLayoutProperty(u.id,"text-field",l)}else if((typeof n=="string"||n instanceof String)&&r.exec(n.toString())){const l=s;this.setLayoutProperty(u.id,"text-field",l)}else if(Array.isArray(n)&&n.length===4&&n[0].trim().toLowerCase()==="case"){const l=s;this.setLayoutProperty(u.id,"text-field",l)}else if((typeof n=="string"||n instanceof String)&&(d=o.exec(n.toString()))!==null){const l=`{${h}}${d[3]}{name${d[4]||""}}`;this.setLayoutProperty(u.id,"text-field",l)}else if((typeof n=="string"||n instanceof String)&&(d=a.exec(n.toString()))!==null){const l=`${d[1]}{${h}}${d[5]}`;this.setLayoutProperty(u.id,"text-field",l)}}})}setSecondaryLanguage(t=p.secondaryLanguage){!N(t)||this.onStyleReady(()=>{if(t===S.AUTO)return this.setSecondaryLanguage(C());g.secondaryLanguage=t;const i=this.getStyle().layers,r=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,c=/^\s*name\s*(:\s*(\S*))?\s*$/,o=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/;let a;for(let h=0;h<i.length;h+=1){const s=i[h],m=s.layout;if(!m||!m["text-field"])continue;const u=this.getLayoutProperty(s.id,"text-field");let y;if(Array.isArray(u)&&u.length>=2&&u[0].trim().toLowerCase()==="concat"){y=u.slice();let n=0;for(let d=0;d<u.length;d+=1){const l=u[d];if((typeof l=="string"||l instanceof String)&&r.exec(l.toString())){if(n===1){y[d]=`{name:${t}}`;break}n+=1}else if(Array.isArray(l)&&l.length>=2&&l[0].trim().toLowerCase()==="get"&&c.exec(l[1].toString())){if(n===1){y[d][1]=`name:${t}`;break}n+=1}else if(Array.isArray(l)&&l.length===4&&l[0].trim().toLowerCase()==="case"){if(n===1){y[d]=["get",`name:${t}`];break}n+=1}}this.setLayoutProperty(s.id,"text-field",y)}else if((typeof u=="string"||u instanceof String)&&(a=o.exec(u.toString()))!==null){const n=t?`name:${t}`:"name";y=`{name${a[1]||""}}${a[3]}{${n}}`,this.setLayoutProperty(s.id,"text-field",y)}}})}getTerrainExaggeration(){return this.terrainExaggeration}hasTerrain(){return this.isTerrainEnabled}enableTerrain(t=this.terrainExaggeration){if(t<0){console.warn("Terrain exaggeration cannot be negative.");return}const i=this.getTerrain(),r=()=>{this.isTerrainEnabled=!0,this.terrainExaggeration=t,this.addSource(p.terrainSourceId,{type:"raster-dem",url:p.terrainSourceURL}),this.setTerrain({source:p.terrainSourceId,exaggeration:t})};if(i){this.setTerrain(H(B({},i),{exaggeration:t}));return}this.loaded()||this.isTerrainEnabled?r():this.once("load",()=>{this.getTerrain()&&this.getSource(p.terrainSourceId)||r()})}disableTerrain(){this.isTerrainEnabled=!1,this.setTerrain(null),this.getSource(p.terrainSourceId)&&this.removeSource(p.terrainSourceId)}setTerrainExaggeration(t){this.enableTerrain(t)}onStyleReady(t){this.isStyleLoaded()?t():this.once("styledata",()=>{t()})}fitToIpBounds(){return A(this,null,function*(){const t=yield x.info();this.fitBounds(t.country_bounds,{duration:0,padding:100})})}centerOnIpPoint(t){return A(this,null,function*(){const i=yield x.info();this.jumpTo({center:[i.longitude,i.latitude],zoom:t||11})})}getCameraHash(){const t=new Float32Array(5),i=this.getCenter();return t[0]=i.lng,t[1]=i.lat,t[2]=this.getZoom(),t[3]=this.getPitch(),t[4]=this.getBearing(),G.fromUint8Array(new Uint8Array(t.buffer))}}function v(e,t){this.x=e,this.y=t}v.prototype={clone:function(){return new v(this.x,this.y)},add:function(e){return this.clone()._add(e)},sub:function(e){return this.clone()._sub(e)},multByPoint:function(e){return this.clone()._multByPoint(e)},divByPoint:function(e){return this.clone()._divByPoint(e)},mult:function(e){return this.clone()._mult(e)},div:function(e){return this.clone()._div(e)},rotate:function(e){return this.clone()._rotate(e)},rotateAround:function(e,t){return this.clone()._rotateAround(e,t)},matMult:function(e){return this.clone()._matMult(e)},unit:function(){return this.clone()._unit()},perp:function(){return this.clone()._perp()},round:function(){return this.clone()._round()},mag:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},equals:function(e){return this.x===e.x&&this.y===e.y},dist:function(e){return Math.sqrt(this.distSqr(e))},distSqr:function(e){const t=e.x-this.x,i=e.y-this.y;return t*t+i*i},angle:function(){return Math.atan2(this.y,this.x)},angleTo:function(e){return Math.atan2(this.y-e.y,this.x-e.x)},angleWith:function(e){return this.angleWithSep(e.x,e.y)},angleWithSep:function(e,t){return Math.atan2(this.x*t-this.y*e,this.x*e+this.y*t)},_matMult:function(e){const t=e[0]*this.x+e[1]*this.y,i=e[2]*this.x+e[3]*this.y;return this.x=t,this.y=i,this},_add:function(e){return this.x+=e.x,this.y+=e.y,this},_sub:function(e){return this.x-=e.x,this.y-=e.y,this},_mult:function(e){return this.x*=e,this.y*=e,this},_div:function(e){return this.x/=e,this.y/=e,this},_multByPoint:function(e){return this.x*=e.x,this.y*=e.y,this},_divByPoint:function(e){return this.x/=e.x,this.y/=e.y,this},_unit:function(){return this._div(this.mag()),this},_perp:function(){const e=this.y;return this.y=this.x,this.x=-e,this},_rotate:function(e){const t=Math.cos(e),i=Math.sin(e),r=t*this.x-i*this.y,c=i*this.x+t*this.y;return this.x=r,this.y=c,this},_rotateAround:function(e,t){const i=Math.cos(e),r=Math.sin(e),c=t.x+i*(this.x-t.x)-r*(this.y-t.y),o=t.y+r*(this.x-t.x)+i*(this.y-t.y);return this.x=c,this.y=o,this},_round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},v.convert=function(e){return e instanceof v?e:Array.isArray(e)?new v(e[0],e[1]):e};const{supported:St,setRTLTextPlugin:Tt,getRTLTextPluginStatus:vt,NavigationControl:At,GeolocateControl:It,AttributionControl:Rt,LogoControl:Ct,ScaleControl:Ut,FullscreenControl:Et,TerrainControl:_t,Popup:bt,Marker:xt,Style:Nt,LngLat:Pt,LngLatBounds:wt,MercatorCoordinate:Ot,Evented:Dt,AJAXError:kt,CanvasSource:Mt,GeoJSONSource:$t,ImageSource:Bt,RasterDEMTileSource:Ht,RasterTileSource:Vt,VectorTileSource:Gt,VideoSource:Kt,prewarm:jt,clearPrewarmedResources:Ft,version:zt,workerCount:qt,maxParallelImageRequests:Wt,clearStorage:Jt,workerUrl:Yt,addProtocol:Zt,removeProtocol:Xt}=L;export{kt as AJAXError,Rt as AttributionControl,Mt as CanvasSource,Dt as Evented,Et as FullscreenControl,$t as GeoJSONSource,It as GeolocateControl,V as GeolocationType,Bt as ImageSource,S as Language,oe as LanguageGeocoding,Pt as LngLat,wt as LngLatBounds,Ct as LogoControl,Lt as Map,D as MapStyle,_ as MapStyleVariant,xt as Marker,Ot as MercatorCoordinate,At as NavigationControl,v as Point,bt as Popup,Ht as RasterDEMTileSource,Vt as RasterTileSource,b as ReferenceMapStyle,Ut as ScaleControl,P as SdkConfig,le as ServiceError,Nt as Style,_t as TerrainControl,Gt as VectorTileSource,Kt as VideoSource,Zt as addProtocol,Ft as clearPrewarmedResources,Jt as clearStorage,g as config,ce as coordinates,he as data,ue as geocoding,ge as geolocation,vt as getRTLTextPluginStatus,Wt as maxParallelImageRequests,jt as prewarm,Xt as removeProtocol,Tt as setRTLTextPlugin,pe as staticMaps,St as supported,zt as version,qt as workerCount,Yt as workerUrl};
