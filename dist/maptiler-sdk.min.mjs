import S from"maplibre-gl";export*from"maplibre-gl";import{Base64 as k}from"js-base64";import{v4 as $}from"uuid";import B from"events";import{config as _,expandMapStyle as H,MapStyleVariant as G,ReferenceMapStyle as K,MapStyle as j,mapStylePresetList as D,geolocation as N}from"@maptiler/client";import{LanguageGeocoding as qt,MapStyle as Ft,MapStyleVariant as Jt,ReferenceMapStyle as Wt,ServiceError as Zt,coordinates as Yt,data as Xt,geocoding as Qt,geolocation as te,staticMaps as ee}from"@maptiler/client";const A={AUTO:"auto",LATIN:"latin",NON_LATIN:"nonlatin",LOCAL:"",ALBANIAN:"sq",AMHARIC:"am",ARABIC:"ar",ARMENIAN:"hy",AZERBAIJANI:"az",BASQUE:"eu",BELORUSSIAN:"be",BOSNIAN:"bs",BRETON:"br",BULGARIAN:"bg",CATALAN:"ca",CHINESE:"zh",CORSICAN:"co",CROATIAN:"hr",CZECH:"cs",DANISH:"da",DUTCH:"nl",ENGLISH:"en",ESPERANTO:"eo",ESTONIAN:"et",FINNISH:"fi",FRENCH:"fr",FRISIAN:"fy",GEORGIAN:"ka",GERMAN:"de",GREEK:"el",HEBREW:"he",HINDI:"hi",HUNGARIAN:"hu",ICELANDIC:"is",INDONESIAN:"id",IRISH:"ga",ITALIAN:"it",JAPANESE:"ja",JAPANESE_HIRAGANA:"ja-Hira",JAPANESE_KANA:"ja_kana",JAPANESE_LATIN:"ja_rm",JAPANESE_2018:"ja-Latn",KANNADA:"kn",KAZAKH:"kk",KOREAN:"ko",KOREAN_LATIN:"ko-Latn",KURDISH:"ku",ROMAN_LATIN:"la",LATVIAN:"lv",LITHUANIAN:"lt",LUXEMBOURGISH:"lb",MACEDONIAN:"mk",MALAYALAM:"ml",MALTESE:"mt",NORWEGIAN:"no",OCCITAN:"oc",POLISH:"pl",PORTUGUESE:"pt",ROMANIAN:"ro",ROMANSH:"rm",RUSSIAN:"ru",SCOTTISH_GAELIC:"gd",SERBIAN_CYRILLIC:"sr",SERBIAN_LATIN:"sr-Latn",SLOVAK:"sk",SLOVENE:"sl",SPANISH:"es",SWEDISH:"sv",TAMIL:"ta",TELUGU:"te",THAI:"th",TURKISH:"tr",UKRAINIAN:"uk",WELSH:"cy"},z=new Set(Object.values(A));function b(e){return z.has(e)}const V=new Set(Object.values(A));function T(){if(typeof navigator>"u")return Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0];const e=Array.from(new Set(navigator.languages.map(t=>t.split("-")[0]))).filter(t=>V.has(t));return e.length?e[0]:A.LATIN}class E extends B{constructor(){super(),this.primaryLanguage=A.AUTO,this.secondaryLanguage=null,this.sessionBasedBilling=!0,this._unit="metric",this._apiKey=""}set unit(t){this._unit=t,this.emit("unit",t)}get unit(){return this._unit}set apiKey(t){this._apiKey=t,_.apiKey=t,this.emit("apiKey",t)}get apiKey(){return this._apiKey}set fetch(t){_.fetch=t}get fetch(){return _.fetch}}const u=new E,g={maptilerLogoURL:"https://api.maptiler.com/resources/logo.svg",maptilerURL:"https://www.maptiler.com/",maptilerApiHost:"api.maptiler.com",rtlPluginURL:"https://cdn.maptiler.com/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.min.js",primaryLanguage:A.AUTO,secondaryLanguage:A.LOCAL,terrainSourceURL:"https://api.maptiler.com/tiles/terrain-rgb/tiles.json",terrainSourceId:"maptiler-terrain"};Object.freeze(g);class R extends S.LogoControl{constructor(t={}){var r,a;super(t),this.logoURL="",this.linkURL="",this.logoURL=(r=t.logoURL)!=null?r:g.maptilerLogoURL,this.linkURL=(a=t.linkURL)!=null?a:g.maptilerURL}onAdd(t){this._map=t,this._compact=this.options&&this.options.compact,this._container=window.document.createElement("div"),this._container.className="maplibregl-ctrl";const r=window.document.createElement("a");return r.style.backgroundRepeat="no-repeat",r.style.cursor="pointer",r.style.display="block",r.style.height="23px",r.style.margin="0 0 -4px -4px",r.style.overflow="hidden",r.style.width="88px",r.style.backgroundImage=`url(${this.logoURL})`,r.style.backgroundSize="100px 30px",r.style.width="100px",r.style.height="30px",r.target="_blank",r.rel="noopener nofollow",r.href=this.linkURL,r.setAttribute("aria-label",this._map._getUIString("LogoControl.Title")),r.setAttribute("rel","noopener nofollow"),this._container.appendChild(r),this._container.style.display="block",this._map.on("resize",this._updateCompact),this._updateCompact(),this._container}}function q(){S.getRTLTextPluginStatus()==="unavailable"&&S.setRTLTextPlugin(g.rtlPluginURL,null,!0)}function F(e,t){e.forEach(r=>{!t[r]||(t[r]=t[r].bind(t))})}function I(e,t,r){const a=window.document.createElement(e);return t!==void 0&&(a.className=t),r&&r.appendChild(a),a}function J(e){e.parentNode&&e.parentNode.removeChild(e)}function v(e){return e?typeof e=="string"||e instanceof String?H(e):e instanceof G?e.getExpandedStyleURL():e instanceof K?e.getDefaultVariant().getExpandedStyleURL():e:j[D[0].referenceStyleID].getDefaultVariant().getExpandedStyleURL()}class W{constructor(){F(["_toggleTerrain","_updateTerrainIcon"],this)}onAdd(t){return this._map=t,this._container=I("div","maplibregl-ctrl maplibregl-ctrl-group"),this._terrainButton=I("button","maplibregl-ctrl-terrain",this._container),I("span","maplibregl-ctrl-icon",this._terrainButton).setAttribute("aria-hidden","true"),this._terrainButton.type="button",this._terrainButton.addEventListener("click",this._toggleTerrain),this._updateTerrainIcon(),this._map.on("terrain",this._updateTerrainIcon),this._container}onRemove(){J(this._container),this._map.off("terrain",this._updateTerrainIcon),this._map=void 0}_toggleTerrain(){this._map.hasTerrain()?this._map.disableTerrain():this._map.enableTerrain(),this._updateTerrainIcon()}_updateTerrainIcon(){this._terrainButton.classList.remove("maplibregl-ctrl-terrain"),this._terrainButton.classList.remove("maplibregl-ctrl-terrain-enabled"),this._map.hasTerrain()?(this._terrainButton.classList.add("maplibregl-ctrl-terrain-enabled"),this._terrainButton.title=this._map._getUIString("TerrainControl.disableTerrain")):(this._terrainButton.classList.add("maplibregl-ctrl-terrain"),this._terrainButton.title=this._map._getUIString("TerrainControl.enableTerrain"))}}class Z extends S.NavigationControl{constructor(){super({showCompass:!0,showZoom:!0,visualizePitch:!0}),this._compass.removeEventListener("click",this._compass.clickFunction),this._compass.addEventListener("click",t=>{this._map.getPitch()===0?this._map.easeTo({pitch:Math.min(this._map.getMaxPitch(),80)}):this.options.visualizePitch?this._map.resetNorthPitch({},{originalEvent:t}):this._map.resetNorth({},{originalEvent:t})})}_createButton(t,r){const a=super._createButton(t,r);return a.clickFunction=r,a}_rotateCompassArrow(){const t=this.options.visualizePitch?`scale(${Math.min(1.5,1/Math.pow(Math.cos(this._map.transform.pitch*(Math.PI/180)),.5))}) rotateX(${Math.min(70,this._map.transform.pitch)}deg) rotateZ(${this._map.transform.angle*(180/Math.PI)}deg)`:`rotate(${this._map.transform.angle*(180/Math.PI)}deg)`;this._compassIcon.style.transform=t}}var Y=Object.defineProperty,X=Object.defineProperties,Q=Object.getOwnPropertyDescriptors,P=Object.getOwnPropertySymbols,tt=Object.prototype.hasOwnProperty,et=Object.prototype.propertyIsEnumerable,w=(e,t,r)=>t in e?Y(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,U=(e,t)=>{for(var r in t||(t={}))tt.call(t,r)&&w(e,r,t[r]);if(P)for(var r of P(t))et.call(t,r)&&w(e,r,t[r]);return e},O=(e,t)=>X(e,Q(t)),x=(e,t,r)=>new Promise((a,d)=>{var h=o=>{try{l(r.next(o))}catch(y){d(y)}},n=o=>{try{l(r.throw(o))}catch(y){d(y)}},l=o=>o.done?a(o.value):Promise.resolve(o.value).then(h,n);l((r=r.apply(e,t)).next())});const rt=$(),M={POINT:"POINT",COUNTRY:"COUNTRY"};class nt extends S.Map{constructor(t){var r;const a=v(t.style);console.log(a);const d=location.hash;u.apiKey||console.warn("MapTiler Cloud API key is not set. Visit https://maptiler.com and try Cloud for free!"),super(O(U({},t),{style:a,maplibreLogo:!1,transformRequest:h=>{const n=new URL(h);return n.host===g.maptilerApiHost&&(n.searchParams.has("key")||n.searchParams.append("key",u.apiKey),u.sessionBasedBilling&&n.searchParams.append("mtsid",rt)),{url:n.href,headers:{}}}})),this.languageShouldUpdate=!1,this.isStyleInitialized=!1,this.isTerrainEnabled=!1,this.terrainExaggeration=1,this.once("styledata",()=>x(this,null,function*(){if(t.geolocate===!1||t.center||t.hash&&!!d)return;try{if(t.geolocate===M.COUNTRY){yield this.fitToIpBounds();return}}catch(n){console.warn(n.message)}let h=null;try{yield this.centerOnIpPoint(t.zoom),h=this.getCameraHash()}catch(n){console.warn(n.message)}(yield navigator.permissions.query({name:"geolocation"})).state==="granted"&&navigator.geolocation.getCurrentPosition(n=>{h===this.getCameraHash()&&this.easeTo({center:[n.coords.longitude,n.coords.latitude],zoom:t.zoom||12,duration:2e3})},null,{maximumAge:24*3600*1e3,timeout:5e3,enableHighAccuracy:!1})})),this.on("styledataloading",()=>{this.languageShouldUpdate=!!u.primaryLanguage||!!u.secondaryLanguage}),this.on("styledata",()=>{u.primaryLanguage&&(this.languageShouldUpdate||!this.isStyleInitialized)&&this.setPrimaryLanguage(u.primaryLanguage),u.secondaryLanguage&&(this.languageShouldUpdate||!this.isStyleInitialized)&&this.setSecondaryLanguage(u.secondaryLanguage),this.languageShouldUpdate=!1,this.isStyleInitialized=!0}),this.on("styledata",()=>{this.getTerrain()===null&&this.isTerrainEnabled&&this.enableTerrain(this.terrainExaggeration)}),this.once("load",()=>x(this,null,function*(){q()})),this.once("load",()=>x(this,null,function*(){let h={logo:null};try{const n=Object.keys(this.style.sourceCaches).map(o=>this.getSource(o)).filter(o=>typeof o.url=="string"&&o.url.includes("tiles.json")),l=new URL(n[0].url);l.searchParams.has("key")||l.searchParams.append("key",u.apiKey),h=yield(yield fetch(l.href)).json()}catch{}if("logo"in h&&h.logo){const n=h.logo;this.addControl(new R({logoURL:n}),t.logoPosition),t.attributionControl===!1&&this.addControl(new S.AttributionControl(t))}else t.maptilerLogo&&this.addControl(new R,t.logoPosition);if(t.scaleControl){const n=t.scaleControl===!0||t.scaleControl===void 0?"bottom-right":t.scaleControl,l=new S.ScaleControl({unit:u.unit});this.addControl(l,n),u.on("unit",o=>{l.setUnit(o)})}if(t.navigationControl!==!1){const n=t.navigationControl===!0||t.navigationControl===void 0?"top-right":t.navigationControl;this.addControl(new Z,n)}if(t.geolocateControl!==!1){const n=t.geolocateControl===!0||t.geolocateControl===void 0?"top-right":t.geolocateControl;this.addControl(new S.GeolocateControl({positionOptions:{enableHighAccuracy:!0,maximumAge:0,timeout:6e3},fitBoundsOptions:{maxZoom:15},trackUserLocation:!0,showAccuracyCircle:!0,showUserLocation:!0}),n)}if(t.terrainControl){const n=t.terrainControl===!0||t.terrainControl===void 0?"top-right":t.terrainControl;this.addControl(new W,n)}if(t.fullscreenControl){const n=t.fullscreenControl===!0||t.fullscreenControl===void 0?"top-right":t.fullscreenControl;this.addControl(new S.FullscreenControl({}),n)}})),t.terrain&&this.enableTerrain((r=t.terrainExaggeration)!=null?r:this.terrainExaggeration)}setStyle(t,r){return super.setStyle(v(t),r)}setLanguage(t=g.primaryLanguage){if(t===A.AUTO)return this.setLanguage(T());this.setPrimaryLanguage(t)}setPrimaryLanguage(t=g.primaryLanguage){!b(t)||this.onStyleReady(()=>{if(t===A.AUTO)return this.setPrimaryLanguage(T());u.primaryLanguage=t;const r=this.getStyle().layers,a=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,d=/^\s*name\s*(:\s*(\S*))?\s*$/,h=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/,n=/^(.*)({\s*name\s*(:\s*(\S*))?\s*})(.*)$/,l=t?`name:${t}`:"name",o=["case",["has",l],["get",l],["get","name:latin"]];for(let y=0;y<r.length;y+=1){const c=r[y],m=c.layout;if(!m||!m["text-field"])continue;const i=this.getLayoutProperty(c.id,"text-field");let p;if(Array.isArray(i)&&i.length>=2&&i[0].trim().toLowerCase()==="concat"){const s=i.slice();for(let L=0;L<i.length;L+=1){const f=i[L];if((typeof f=="string"||f instanceof String)&&a.exec(f.toString())){s[L]=o;break}else if(Array.isArray(f)&&f.length>=2&&f[0].trim().toLowerCase()==="get"&&d.exec(f[1].toString())){s[L]=o;break}else if(Array.isArray(f)&&f.length===4&&f[0].trim().toLowerCase()==="case"){s[L]=o;break}}this.setLayoutProperty(c.id,"text-field",s)}else if(Array.isArray(i)&&i.length>=2&&i[0].trim().toLowerCase()==="get"&&d.exec(i[1].toString())){const s=o;this.setLayoutProperty(c.id,"text-field",s)}else if((typeof i=="string"||i instanceof String)&&a.exec(i.toString())){const s=o;this.setLayoutProperty(c.id,"text-field",s)}else if(Array.isArray(i)&&i.length===4&&i[0].trim().toLowerCase()==="case"){const s=o;this.setLayoutProperty(c.id,"text-field",s)}else if((typeof i=="string"||i instanceof String)&&(p=h.exec(i.toString()))!==null){const s=`{${l}}${p[3]}{name${p[4]||""}}`;this.setLayoutProperty(c.id,"text-field",s)}else if((typeof i=="string"||i instanceof String)&&(p=n.exec(i.toString()))!==null){const s=`${p[1]}{${l}}${p[5]}`;this.setLayoutProperty(c.id,"text-field",s)}}})}setSecondaryLanguage(t=g.secondaryLanguage){!b(t)||this.onStyleReady(()=>{if(t===A.AUTO)return this.setSecondaryLanguage(T());u.secondaryLanguage=t;const r=this.getStyle().layers,a=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,d=/^\s*name\s*(:\s*(\S*))?\s*$/,h=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/;let n;for(let l=0;l<r.length;l+=1){const o=r[l],y=o.layout;if(!y||!y["text-field"])continue;const c=this.getLayoutProperty(o.id,"text-field");let m;if(Array.isArray(c)&&c.length>=2&&c[0].trim().toLowerCase()==="concat"){m=c.slice();let i=0;for(let p=0;p<c.length;p+=1){const s=c[p];if((typeof s=="string"||s instanceof String)&&a.exec(s.toString())){if(i===1){m[p]=`{name:${t}}`;break}i+=1}else if(Array.isArray(s)&&s.length>=2&&s[0].trim().toLowerCase()==="get"&&d.exec(s[1].toString())){if(i===1){m[p][1]=`name:${t}`;break}i+=1}else if(Array.isArray(s)&&s.length===4&&s[0].trim().toLowerCase()==="case"){if(i===1){m[p]=["get",`name:${t}`];break}i+=1}}this.setLayoutProperty(o.id,"text-field",m)}else if((typeof c=="string"||c instanceof String)&&(n=h.exec(c.toString()))!==null){const i=t?`name:${t}`:"name";m=`{name${n[1]||""}}${n[3]}{${i}}`,this.setLayoutProperty(o.id,"text-field",m)}}})}getTerrainExaggeration(){return this.terrainExaggeration}hasTerrain(){return this.isTerrainEnabled}enableTerrain(t=this.terrainExaggeration){if(t<0){console.warn("Terrain exaggeration cannot be negative.");return}const r=this.getTerrain(),a=()=>{this.isTerrainEnabled=!0,this.terrainExaggeration=t,this.addSource(g.terrainSourceId,{type:"raster-dem",url:g.terrainSourceURL}),this.setTerrain({source:g.terrainSourceId,exaggeration:t})};if(r){this.setTerrain(O(U({},r),{exaggeration:t}));return}this.loaded()||this.isTerrainEnabled?a():this.once("load",()=>{this.getTerrain()&&this.getSource(g.terrainSourceId)||a()})}disableTerrain(){this.isTerrainEnabled=!1,this.setTerrain(null),this.getSource(g.terrainSourceId)&&this.removeSource(g.terrainSourceId)}setTerrainExaggeration(t){this.enableTerrain(t)}onStyleReady(t){this.isStyleLoaded()?t():this.once("styledata",()=>{t()})}fitToIpBounds(){return x(this,null,function*(){const t=yield N.info();this.fitBounds(t.country_bounds,{duration:0,padding:100})})}centerOnIpPoint(t){return x(this,null,function*(){const r=yield N.info();this.jumpTo({center:[r.longitude,r.latitude],zoom:t||11})})}getCameraHash(){const t=new Float32Array(5),r=this.getCenter();return t[0]=r.lng,t[1]=r.lat,t[2]=this.getZoom(),t[3]=this.getPitch(),t[4]=this.getBearing(),k.fromUint8Array(new Uint8Array(t.buffer))}}function C(e,t){this.x=e,this.y=t}C.prototype={clone:function(){return new C(this.x,this.y)},add:function(e){return this.clone()._add(e)},sub:function(e){return this.clone()._sub(e)},multByPoint:function(e){return this.clone()._multByPoint(e)},divByPoint:function(e){return this.clone()._divByPoint(e)},mult:function(e){return this.clone()._mult(e)},div:function(e){return this.clone()._div(e)},rotate:function(e){return this.clone()._rotate(e)},rotateAround:function(e,t){return this.clone()._rotateAround(e,t)},matMult:function(e){return this.clone()._matMult(e)},unit:function(){return this.clone()._unit()},perp:function(){return this.clone()._perp()},round:function(){return this.clone()._round()},mag:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},equals:function(e){return this.x===e.x&&this.y===e.y},dist:function(e){return Math.sqrt(this.distSqr(e))},distSqr:function(e){const t=e.x-this.x,r=e.y-this.y;return t*t+r*r},angle:function(){return Math.atan2(this.y,this.x)},angleTo:function(e){return Math.atan2(this.y-e.y,this.x-e.x)},angleWith:function(e){return this.angleWithSep(e.x,e.y)},angleWithSep:function(e,t){return Math.atan2(this.x*t-this.y*e,this.x*e+this.y*t)},_matMult:function(e){const t=e[0]*this.x+e[1]*this.y,r=e[2]*this.x+e[3]*this.y;return this.x=t,this.y=r,this},_add:function(e){return this.x+=e.x,this.y+=e.y,this},_sub:function(e){return this.x-=e.x,this.y-=e.y,this},_mult:function(e){return this.x*=e,this.y*=e,this},_div:function(e){return this.x/=e,this.y/=e,this},_multByPoint:function(e){return this.x*=e.x,this.y*=e.y,this},_divByPoint:function(e){return this.x/=e.x,this.y/=e.y,this},_unit:function(){return this._div(this.mag()),this},_perp:function(){const e=this.y;return this.y=this.x,this.x=-e,this},_rotate:function(e){const t=Math.cos(e),r=Math.sin(e),a=t*this.x-r*this.y,d=r*this.x+t*this.y;return this.x=a,this.y=d,this},_rotateAround:function(e,t){const r=Math.cos(e),a=Math.sin(e),d=t.x+r*(this.x-t.x)-a*(this.y-t.y),h=t.y+a*(this.x-t.x)+r*(this.y-t.y);return this.x=d,this.y=h,this},_round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},C.convert=function(e){return e instanceof C?e:Array.isArray(e)?new C(e[0],e[1]):e};const{supported:it,setRTLTextPlugin:at,getRTLTextPluginStatus:ot,NavigationControl:st,GeolocateControl:lt,AttributionControl:ct,LogoControl:ht,ScaleControl:ut,FullscreenControl:gt,TerrainControl:dt,Popup:pt,Marker:yt,Style:mt,LngLat:ft,LngLatBounds:St,MercatorCoordinate:At,Evented:Lt,AJAXError:Ct,CanvasSource:xt,GeoJSONSource:_t,ImageSource:Tt,RasterDEMTileSource:It,RasterTileSource:Nt,VectorTileSource:bt,VideoSource:Et,prewarm:Rt,clearPrewarmedResources:vt,version:Pt,workerCount:wt,maxParallelImageRequests:Ut,clearStorage:Ot,workerUrl:Mt,addProtocol:kt,removeProtocol:$t}=S;export{Ct as AJAXError,ct as AttributionControl,xt as CanvasSource,Lt as Evented,gt as FullscreenControl,_t as GeoJSONSource,lt as GeolocateControl,M as GeolocationType,Tt as ImageSource,A as Language,qt as LanguageGeocoding,ft as LngLat,St as LngLatBounds,ht as LogoControl,nt as Map,Ft as MapStyle,Jt as MapStyleVariant,yt as Marker,At as MercatorCoordinate,st as NavigationControl,C as Point,pt as Popup,It as RasterDEMTileSource,Nt as RasterTileSource,Wt as ReferenceMapStyle,ut as ScaleControl,E as SdkConfig,Zt as ServiceError,mt as Style,dt as TerrainControl,bt as VectorTileSource,Et as VideoSource,kt as addProtocol,vt as clearPrewarmedResources,Ot as clearStorage,u as config,Yt as coordinates,Xt as data,Qt as geocoding,te as geolocation,ot as getRTLTextPluginStatus,Ut as maxParallelImageRequests,Rt as prewarm,$t as removeProtocol,at as setRTLTextPlugin,ee as staticMaps,it as supported,Pt as version,wt as workerCount,Mt as workerUrl};
