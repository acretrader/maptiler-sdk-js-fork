import*as L from"maplibre-gl";export*from"maplibre-gl";const d={apiKey:"Not defined yet.",verbose:!1,primaryLanguage:null,secondaryLanguage:null};var N=(t=>(t.LATIN="latin",t.NON_LATIN="nonlatin",t.LOCAL="",t.AFAR="aa",t.ABKHAZIAN="ab",t.AVESTAN="ae",t.AFRIKAANS="af",t.AKAN="ak",t.AMHARIC="am",t.ARAGONESE="an",t.ARABIC="ar",t.ASSAMESE="as",t.AVARIC="av",t.AYMARA="ay",t.AZERBAIJANI="az",t.BASHKIR="ba",t.BELARUSIAN="be",t.BULGARIAN="bg",t.BIHARI="bh",t.BISLAMA="bi",t.BAMBARA="bm",t.BENGALI="bn",t.TIBETAN="bo",t.BRETON="br",t.BOSNIAN="bs",t.CATALAN="ca",t.CHECHEN="ce",t.CHAMORRO="ch",t.CORSICAN="co",t.CREE="cr",t.CZECH="cs",t.CHURCH_SLAVIC="cu",t.CHUVASH="cv",t.WELSH="cy",t.DANISH="da",t.GERMAN="de",t.MALDIVIAN="dv",t.DZONGKHA="dz",t.EWE="ee",t.GREEK="el",t.ENGLISH="en",t.ESPERANTO="eo",t.SPANISH="es",t.ESTONIAN="et",t.BASQUE="eu",t.PERSIAN="fa",t.FULAH="ff",t.FINNISH="fi",t.FIJIAN="fj",t.FAROESE="fo",t.FRENCH="fr",t.WESTERN_FRISIAN="fy",t.IRISH="ga",t.GAELIC="gd",t.GALICIAN="gl",t.GUARANI="gn",t.GUJARATI="gu",t.MANX="gv",t.HAUSA="ha",t.HEBREW="he",t.HINDI="hi",t.HIRI_MOTU="ho",t.CROATIAN="hr",t.HAITIAN="ht",t.HUNGARIAN="hu",t.ARMENIAN="hy",t.HERERO="hz",t.INTERLINGUA="ia",t.INDONESIAN="id",t.INTERLINGUE="ie",t.IGBO="ig",t.SICHUAN_YI="ii",t.INUPIAQ="ik",t.IDO="io",t.ICELANDIC="is",t.ITALIAN="it",t.INUKTITUT="iu",t.JAPANESE="ja",t.JAVANESE="jv",t.GEORGIAN="ka",t.KONGO="kg",t.KIKUYU="ki",t.KUANYAMA="kj",t.KAZAKH="kk",t.KALAALLISUT="kl",t.CENTRAL_KHMER="km",t.KANNADA="kn",t.KOREAN="ko",t.KANURI="kr",t.KASHMIRI="ks",t.KURDISH="ku",t.KOMI="kv",t.CORNISH="kw",t.KIRGHIZ="ky",t.LUXEMBOURGISH="lb",t.GANDA="lg",t.LIMBURGAN="li",t.LINGALA="ln",t.LAO="lo",t.LITHUANIAN="lt",t.LUBA_KATANGA="lu",t.LATVIAN="lv",t.MALAGASY="mg",t.MARSHALLESE="mh",t.MAORI="mi",t.MACEDONIAN="mk",t.MALAYALAM="ml",t.MONGOLIAN="mn",t.MARATHI="mr",t.MALAY="ms",t.MALTESE="mt",t.BURMESE="my",t.NAURU="na",t.NORWEGIAN="no",t.NORTH_NDEBELE="nd",t.NEPALI="ne",t.NDONGA="ng",t.DUTCH="nl",t.SOUTH_NDEBELE="nr",t.NAVAJO="nv",t.CHICHEWA="ny",t.OCCITAN="oc",t.OJIBWA="oj",t.OROMO="om",t.ORIYA="or",t.OSSETIC="os",t.PANJABI="pa",t.PALI="pi",t.POLISH="pl",t.PUSHTO="ps",t.PORTUGUESE="pt",t.QUECHUA="qu",t.ROMANSH="rm",t.RUNDI="rn",t.ROMANIAN="ro",t.RUSSIAN="ru",t.KINYARWANDA="rw",t.SANSKRIT="sa",t.SARDINIAN="sc",t.SINDHI="sd",t.NORTHERN_SAMI="se",t.SANGO="sg",t.SINHALA="si",t.SLOVAK="sk",t.SLOVENIAN="sl",t.SAMOAN="sm",t.SHONA="sn",t.SOMALI="so",t.ALBANIAN="sq",t.SERBIAN="sr",t.SWATI="ss",t.SOTHO_SOUTHERN="st",t.SUNDANESE="su",t.SWEDISH="sv",t.SWAHILI="sw",t.TAMIL="ta",t.TELUGU="te",t.TAJIK="tg",t.THAI="th",t.TIGRINYA="ti",t.TURKMEN="tk",t.TAGALOG="tl",t.TSWANA="tn",t.TONGA="to",t.TURKISH="tr",t.TSONGA="ts",t.TATAR="tt",t.TWI="tw",t.TAHITIAN="ty",t.UIGHUR="ug",t.UKRAINIAN="uk",t.URDU="ur",t.UZBEK="uz",t.VENDA="ve",t.VIETNAMESE="vi",t.VOLAPUK="vo",t.WALLOON="wa",t.WOLOF="wo",t.XHOSA="xh",t.YIDDISH="yi",t.YORUBA="yo",t.ZHUANG="za",t.CHINESE="zh",t.ZULU="zu",t))(N||{}),_=8,W="f0e4ff8c-a9e4-414e-9f4d-7938762c948f",z="Satellite no label",V={satellite:{url:"https://api.maptiler.com/tiles/satellite-v2/tiles.json?key={key}",tileSize:512,type:"raster"},maptiler_attribution:{attribution:'<a href="https://www.maptiler.com/copyright/" target="_blank">&copy; MapTiler</a> <a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a>',type:"vector"}},Y=[{id:"satellite",type:"raster",source:"satellite",minzoom:0,layout:{visibility:"visible"},paint:{"raster-opacity":1},filter:["all"]}],F={"maptiler:copyright":"This style was generated on MapTiler Cloud. Usage outside of MapTiler Cloud or MapTiler Server requires valid MapTiler Data package: https://www.maptiler.com/data/ -- please contact us."},J="https://api.maptiler.com/fonts/{fontstack}/{range}.pbf?key={key}",Z=0,q=0,Q=[-78.55323097748868,24.03141891413972],X=5.066147709178387,tt={version:_,id:W,name:z,sources:V,layers:Y,metadata:F,glyphs:J,bearing:Z,pitch:q,center:Q,zoom:X},b=(t=>(t.STREETS="streets-v2",t.HYBRID="hybrid",t.SATELLITE="satellite",t.OUTDOOR="outdoor",t.BASIC="basic-v2",t.DARK="streets-v2-dark",t.LIGHT="streets-v2-light",t))(b||{});const k={};k.satellite=tt;function U(t){return t in k}function w(t,r){if(!U(t))return null;const e=JSON.stringify(k[t]).replace(/{key}/gi,r);return JSON.parse(e)}const m={mapStyle:b.STREETS,maptilerLogoURL:"https://api.maptiler.com/resources/logo.svg",maptilerURL:"https://www.maptiler.com/",maptilerApiURL:"https://api.maptiler.com/",rtlPluginURL:"https://cdn.maptiler.com/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.min.js",primaryLanguage:N.LATIN,secondaryLanguage:N.NON_LATIN,terrainSourceURL:"https://api.maptiler.com/tiles/terrain-rgb/tiles.json",terrainSourceId:"maptiler-terrain"};Object.freeze(m);class O extends L.LogoControl{constructor(r={}){var e,a;super(r),this.logoURL="",this.linkURL="",this.logoURL=(e=r.logoURL)!=null?e:m.maptilerLogoURL,this.linkURL=(a=r.linkURL)!=null?a:m.maptilerURL}onAdd(r){this._map=r,this._compact=this.options&&this.options.compact,this._container=window.document.createElement("div"),this._container.className="maplibregl-ctrl";const e=window.document.createElement("a");return e.style.backgroundRepeat="no-repeat",e.style.cursor="pointer",e.style.display="block",e.style.height="23px",e.style.margin="0 0 -4px -4px",e.style.overflow="hidden",e.style.width="88px",e.style.backgroundImage=`url(${this.logoURL})`,e.style.backgroundSize="100px 30px",e.style.width="100px",e.style.height="30px",e.target="_blank",e.rel="noopener nofollow",e.href=this.linkURL,e.setAttribute("aria-label",this._map._getUIString("LogoControl.Title")),e.setAttribute("rel","noopener nofollow"),this._container.appendChild(e),this._container.style.display="block",this._map.on("resize",this._updateCompact),this._updateCompact(),this._container}}function et(...t){d.verbose&&console.log(...t)}function T(t){const r=/^maptiler:\/\/(.*)/;let e;const a=t.trim();let i;return a.startsWith("http://")||a.startsWith("https://")?i=a:(e=r.exec(a))!==null?i=`https://api.maptiler.com/maps/${e[1]}/style.json`:i=`https://api.maptiler.com/maps/${a}/style.json`,i.includes("key=")||(i=`${i}?key=${d.apiKey}`),i}function rt(){const t=L;t.getRTLTextPluginStatus()==="unavailable"&&t.setRTLTextPlugin(m.rtlPluginURL,null,!0)}var at=Object.defineProperty,nt=Object.defineProperties,it=Object.getOwnPropertyDescriptors,A=Object.getOwnPropertySymbols,st=Object.prototype.hasOwnProperty,ot=Object.prototype.propertyIsEnumerable,C=(t,r,e)=>r in t?at(t,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[r]=e,$=(t,r)=>{for(var e in r||(r={}))st.call(r,e)&&C(t,e,r[e]);if(A)for(var e of A(r))ot.call(r,e)&&C(t,e,r[e]);return t},H=(t,r)=>nt(t,it(r)),M=(t,r,e)=>new Promise((a,i)=>{var n=s=>{try{c(e.next(s))}catch(p){i(p)}},l=s=>{try{c(e.throw(s))}catch(p){i(p)}},c=s=>s.done?a(s.value):Promise.resolve(s.value).then(n,l);c((e=e.apply(t,r)).next())});class lt extends L.Map{constructor(r){var e;let a;"style"in r?typeof a=="string"&&U(a)?a=w(a,d.apiKey):typeof a=="string"?a=T(a):a=r.style:(a=T(m.mapStyle),et(`Map style not provided, backing up to ${m.mapStyle}`)),super(H($({},r),{style:a,maplibreLogo:!1})),this.languageShouldUpdate=!1,this.isStyleInitialized=!1,this.isTerrainEnabled=!1,this.terrainExaggeration=1,this.on("styledataloading",()=>{this.languageShouldUpdate=!!d.primaryLanguage||!!d.secondaryLanguage}),this.on("styledata",()=>{d.primaryLanguage&&(this.languageShouldUpdate||!this.isStyleInitialized)&&this.setPrimaryLanguage(d.primaryLanguage),d.secondaryLanguage&&(this.languageShouldUpdate||!this.isStyleInitialized)&&this.setSecondaryLanguage(d.secondaryLanguage),this.languageShouldUpdate=!1,this.isStyleInitialized=!0}),this.on("styledata",()=>{this.getTerrain()===null&&this.isTerrainEnabled&&this.enableTerrain(this.terrainExaggeration)}),this.once("load",()=>M(this,null,function*(){rt()})),this.once("load",()=>M(this,null,function*(){let i=null;try{i=this.getSource("openmaptiles").url}catch{return}const n=yield(yield fetch(i)).json();if("logo"in n&&n.logo){const l=n.logo;this.addControl(new O({logoURL:l}),r.logoPosition),r.attributionControl===!1&&this.addControl(new L.AttributionControl(r))}else r.maptilerLogo&&this.addControl(new O,r.logoPosition)})),r.enableTerrain&&this.enableTerrain((e=r.terrainExaggeration)!=null?e:1)}setStyle(r,e){let a=r;return typeof r=="string"&&U(r)?a=w(r,d.apiKey):typeof r=="string"&&(a=T(r)),super.setStyle(a,e)}setLanguage(r=m.primaryLanguage){this.setPrimaryLanguage(r)}setPrimaryLanguage(r=m.primaryLanguage){d.primaryLanguage=r;const e=this.getStyle().layers,a=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,i=/^\s*name\s*(:\s*(\S*))?\s*$/,n=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/,l=/^(.*)({\s*name\s*(:\s*(\S*))?\s*})(.*)$/,c=r?`name:${r}`:"name",s=["case",["has",c],["get",c],["get","name:latin"]];for(let p=0;p<e.length;p+=1){const u=e[p],y=u.layout;if(!y||!y["text-field"])continue;const o=this.getLayoutProperty(u.id,"text-field");let g;if(Array.isArray(o)&&o.length>=2&&o[0].trim().toLowerCase()==="concat"){const h=o.slice();for(let S=0;S<o.length;S+=1){const I=o[S];if((typeof I=="string"||I instanceof String)&&a.exec(I.toString())){h[S]=s;break}else if(Array.isArray(I)&&I.length>=2&&I[0].trim().toLowerCase()==="get"&&i.exec(I[1].toString())){h[S]=s;break}else if(Array.isArray(I)&&I.length===4&&I[0].trim().toLowerCase()==="case"){h[S]=s;break}}this.setLayoutProperty(u.id,"text-field",h)}else if(Array.isArray(o)&&o.length>=2&&o[0].trim().toLowerCase()==="get"&&i.exec(o[1].toString())){const h=s;this.setLayoutProperty(u.id,"text-field",h)}else if((typeof o=="string"||o instanceof String)&&a.exec(o.toString())){const h=s;this.setLayoutProperty(u.id,"text-field",h)}else if(Array.isArray(o)&&o.length===4&&o[0].trim().toLowerCase()==="case"){const h=s;this.setLayoutProperty(u.id,"text-field",h)}else if((typeof o=="string"||o instanceof String)&&(g=n.exec(o.toString()))!==null){const h=`{${c}}${g[3]}{name${g[4]||""}}`;this.setLayoutProperty(u.id,"text-field",h)}else if((typeof o=="string"||o instanceof String)&&(g=l.exec(o.toString()))!==null){const h=`${g[1]}{${c}}${g[5]}`;this.setLayoutProperty(u.id,"text-field",h)}}}setSecondaryLanguage(r=m.secondaryLanguage){d.secondaryLanguage=r;const e=this.getStyle().layers,a=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,i=/^\s*name\s*(:\s*(\S*))?\s*$/,n=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/;let l;for(let c=0;c<e.length;c+=1){const s=e[c],p=s.layout;if(!p||!p["text-field"])continue;const u=this.getLayoutProperty(s.id,"text-field");let y;if(Array.isArray(u)&&u.length>=2&&u[0].trim().toLowerCase()==="concat"){y=u.slice();let o=0;for(let g=0;g<u.length;g+=1){const h=u[g];if((typeof h=="string"||h instanceof String)&&a.exec(h.toString())){if(o===1){y[g]=`{name:${r}}`;break}o+=1}else if(Array.isArray(h)&&h.length>=2&&h[0].trim().toLowerCase()==="get"&&i.exec(h[1].toString())){if(o===1){y[g][1]=`name:${r}`;break}o+=1}else if(Array.isArray(h)&&h.length===4&&h[0].trim().toLowerCase()==="case"){if(o===1){y[g]=["get",`name:${r}`];break}o+=1}}this.setLayoutProperty(s.id,"text-field",y)}else if((typeof u=="string"||u instanceof String)&&(l=n.exec(u.toString()))!==null){const o=r?`name:${r}`:"name";y=`{name${l[1]||""}}${l[3]}{${o}}`,this.setLayoutProperty(s.id,"text-field",y)}}}enableTerrain(r=1){const e=this.getTerrain(),a=()=>{this.isTerrainEnabled=!0,this.terrainExaggeration=r,this.addSource(m.terrainSourceId,{type:"raster-dem",url:`${m.terrainSourceURL}?key=${d.apiKey}`}),this.setTerrain({source:m.terrainSourceId,exaggeration:r})};if(e){this.setTerrain(H($({},e),{exaggeration:r}));return}this.loaded()||this.isTerrainEnabled?a():this.once("load",()=>{this.getTerrain()&&this.getSource(m.terrainSourceId)||a()})}disableTerrain(){this.isTerrainEnabled=!1,this.setTerrain(null),this.getSource(m.terrainSourceId)&&this.removeSource(m.terrainSourceId)}setTerrainExaggeration(r){this.enableTerrain(r)}}class f extends Error{constructor(r,e=""){super(`Call to enpoint ${r.url} failed with the status code ${r.status}. ${e}`),this.res=r}}var K=(t,r,e)=>new Promise((a,i)=>{var n=s=>{try{c(e.next(s))}catch(p){i(p)}},l=s=>{try{c(e.throw(s))}catch(p){i(p)}},c=s=>s.done?a(s.value):Promise.resolve(s.value).then(n,l);c((e=e.apply(t,r)).next())});const R={400:"Query too long / Invalid parameters",403:"Key is missing, invalid or restricted"};function ct(t){return K(this,arguments,function*(r,e={}){const a=new URL(`geocoding/${encodeURIComponent(r)}.json`,m.maptilerApiURL);if(a.searchParams.set("key",d.apiKey),"bbox"in e&&a.searchParams.set("bbox",[e.bbox.southWest.lng,e.bbox.southWest.lat,e.bbox.northEast.lng,e.bbox.northEast.lat].join(",")),"proximity"in e&&a.searchParams.set("proximity",[e.proximity.lng,e.proximity.lat].join(",")),"language"in e){const l=(Array.isArray(e.language)?e.language:[e.language]).join(",");a.searchParams.set("language",l)}const i=a.toString(),n=yield fetch(i);if(!n.ok)throw new f(n,n.status in R?R[n.status]:"");return yield n.json()})}function ht(t){return K(this,arguments,function*(r,e={}){const a=new URL(`geocoding/${r.lng},${r.lat}.json`,m.maptilerApiURL);if(a.searchParams.set("key",d.apiKey),"bbox"in e&&a.searchParams.set("bbox",[e.bbox.southWest.lng,e.bbox.southWest.lat,e.bbox.northEast.lng,e.bbox.northEast.lat].join(",")),"proximity"in e&&a.searchParams.set("proximity",[e.proximity.lng,e.proximity.lat].join(",")),"language"in e){const l=(Array.isArray(e.language)?e.language:[e.language]).join(",");a.searchParams.set("language",l)}const i=a.toString(),n=yield fetch(i);if(!n.ok)throw new f(n,n.status in R?R[n.status]:"");return yield n.json()})}const gt={forward:ct,reverse:ht};var pt=(t,r,e)=>new Promise((a,i)=>{var n=s=>{try{c(e.next(s))}catch(p){i(p)}},l=s=>{try{c(e.throw(s))}catch(p){i(p)}},c=s=>s.done?a(s.value):Promise.resolve(s.value).then(n,l);c((e=e.apply(t,r)).next())});const j={403:"Key is missing, invalid or restricted"};function ut(){return pt(this,null,function*(){const t=new URL("geolocation/ip.json",m.maptilerApiURL);t.searchParams.set("key",d.apiKey);const r=t.toString(),e=yield fetch(r);if(!e.ok)throw new f(e,e.status in j?j[e.status]:"");return yield e.json()})}const mt={info:ut};var D=(t,r,e)=>new Promise((a,i)=>{var n=s=>{try{c(e.next(s))}catch(p){i(p)}},l=s=>{try{c(e.throw(s))}catch(p){i(p)}},c=s=>s.done?a(s.value):Promise.resolve(s.value).then(n,l);c((e=e.apply(t,r)).next())});const E={403:"Key is missing, invalid or restricted"};function yt(t){return D(this,arguments,function*(r,e={}){const a=new URL(`coordinates/search/${r}.json`,m.maptilerApiURL);a.searchParams.set("key",d.apiKey),"limit"in e&&a.searchParams.set("limit",e.limit.toString()),"transformations"in e&&a.searchParams.set("transformations",e.transformations.toString()),"exports"in e&&a.searchParams.set("exports",e.exports.toString());const i=a.toString(),n=yield fetch(i);if(!n.ok)throw new f(n,n.status in E?E[n.status]:"");return yield n.json()})}function dt(t){return D(this,arguments,function*(r,e={}){const a=(Array.isArray(r)?r:[r]).map(c=>`${c.lng},${c.lat}`).join(";"),i=new URL(`coordinates/transform/${a}.json`,m.maptilerApiURL);i.searchParams.set("key",d.apiKey),"sourceCrs"in e&&i.searchParams.set("s_srs",e.sourceCrs.toString()),"targetCrs"in e&&i.searchParams.set("t_srs",e.targetCrs.toString()),"operations"in e&&i.searchParams.set("ops",(Array.isArray(e.operations)?e.operations:[e.operations]).join("|"));const n=i.toString(),l=yield fetch(n);if(!l.ok)throw new f(l,l.status in E?E[l.status]:"");return yield l.json()})}const St={search:yt,transform:dt};var It=(t,r,e)=>new Promise((a,i)=>{var n=s=>{try{c(e.next(s))}catch(p){i(p)}},l=s=>{try{c(e.throw(s))}catch(p){i(p)}},c=s=>s.done?a(s.value):Promise.resolve(s.value).then(n,l);c((e=e.apply(t,r)).next())});const G={403:"Key is missing, invalid or restricted"};function ft(t){return It(this,null,function*(){const r=new URL(`data/${encodeURIComponent(t)}/features.json`,m.maptilerApiURL);r.searchParams.set("key",d.apiKey);const e=r.toString(),a=yield fetch(e);if(!a.ok)throw new f(a,a.status in G?G[a.status]:"");return yield a.json()})}const Lt={get:ft};function Nt(t,r,e){let a=r[0],i=r[1],n=e[0]-a,l=e[1]-i;if(n!==0||l!==0){const c=((t[0]-a)*n+(t[1]-i)*l)/(n*n+l*l);c>1?(a=e[0],i=e[1]):c>0&&(a+=n*c,i+=l*c)}return n=t[0]-a,l=t[1]-i,n*n+l*l}function v(t,r,e,a,i){let n=a,l;for(let c=r+1;c<e;c++){const s=Nt(t[c],t[r],t[e]);s>n&&(l=c,n=s)}n>a&&(l-r>1&&v(t,r,l,a,i),i.push(t[l]),e-l>1&&v(t,l,e,a,i))}function Rt(t,r){const e=t.length-1,a=[t[0]];return v(t,0,e,r,a),a.push(t[e]),a}function Et(t,r){if(t.length<=2)return t;const e=r!==void 0?r*r:1;return Rt(t,e)}function P(t,r=!0){let e=`${t.lng},${t.lat}`;return t.color&&r&&(e+=`,${t.color}`),e}function x(t,r=3e3){let e=t.map(n=>n.join(",")).join("|"),a=5e-6;const i=1e-5;for(;e.length>r;)e=Et(t,a).map(n=>`${n[0]},${n[1]}`).join("|"),a+=i;return e}function bt(t,r,e={}){var a,i,n,l,c;const s=(a=e.style)!=null?a:m.mapStyle,p=e.hiDPI?"@2x":"",u=(i=e.format)!=null?i:"png";let y=~~((n=e.width)!=null?n:1024),o=~~((l=e.height)!=null?l:1024);e.hiDPI&&(y=~~(y/2),o=~~(o/2));const g=new URL(`maps/${encodeURIComponent(s)}/static/${t.lng},${t.lat},${r}/${y}x${o}${p}.${u}`,m.maptilerApiURL);if("attribution"in e&&g.searchParams.set("attribution",e.attribution.toString()),"marker"in e){let h="";const S="markerIcon"in e;S&&(h+=`icon:${e.markerIcon}|`),S&&"markerAnchor"in e&&(h+=`anchor:${e.markerAnchor}|`),S&&e.hiDPI&&(h+="scale:2|"),h+=(Array.isArray(e.marker)?e.marker:[e.marker]).map(I=>P(I,!S)).join("|"),g.searchParams.set("markers",h)}if("path"in e){let h="";h+=`fill:${(c=e.pathFillColor)!=null?c:"none"}|`,"pathStrokeColor"in e&&(h+=`stroke:${e.pathStrokeColor}|`),"pathWidth"in e&&(h+=`width:${(e.pathWidth/(e.hiDPI?2:1)).toString()}|`),h+=x(e.path),g.searchParams.set("path",h)}return g.searchParams.set("key",d.apiKey),g.toString()}function kt(t,r={}){var e,a,i,n,l;const c=(e=r.style)!=null?e:m.mapStyle,s=r.hiDPI?"@2x":"",p=(a=r.format)!=null?a:"png";let u=~~((i=r.width)!=null?i:1024),y=~~((n=r.height)!=null?n:1024);r.hiDPI&&(u=~~(u/2),y=~~(y/2));const o=new URL(`maps/${encodeURIComponent(c)}/static/${t.southWest.lng},${t.southWest.lat},${t.northEast.lng},${t.northEast.lat}/${u}x${y}${s}.${p}`,m.maptilerApiURL);if("attribution"in r&&o.searchParams.set("attribution",r.attribution.toString()),"padding"in r&&o.searchParams.set("padding",r.padding.toString()),"marker"in r){let g="";const h="markerIcon"in r;h&&(g+=`icon:${r.markerIcon}|`),h&&"markerAnchor"in r&&(g+=`anchor:${r.markerAnchor}|`),h&&r.hiDPI&&(g+="scale:2|"),g+=(Array.isArray(r.marker)?r.marker:[r.marker]).map(S=>P(S,!h)).join("|"),o.searchParams.set("markers",g)}if("path"in r){let g="";g+=`fill:${(l=r.pathFillColor)!=null?l:"none"}|`,"pathStrokeColor"in r&&(g+=`stroke:${r.pathStrokeColor}|`),"pathWidth"in r&&(g+=`width:${(r.pathWidth/(r.hiDPI?2:1)).toString()}|`),g+=x(r.path),o.searchParams.set("path",g)}return o.searchParams.set("key",d.apiKey),o.toString()}function Ut(t={}){var r,e,a,i,n;if(!("marker"in t)&&!("path"in t))throw new Error("Automatic static maps require markers and/or path to be created.");const l=(r=t.style)!=null?r:m.mapStyle,c=t.hiDPI?"@2x":"",s=(e=t.format)!=null?e:"png";let p=~~((a=t.width)!=null?a:1024),u=~~((i=t.height)!=null?i:1024);t.hiDPI&&(p=~~(p/2),u=~~(u/2));const y=new URL(`maps/${encodeURIComponent(l)}/static/auto/${p}x${u}${c}.${s}`,m.maptilerApiURL);if("attribution"in t&&y.searchParams.set("attribution",t.attribution.toString()),"padding"in t&&y.searchParams.set("padding",t.padding.toString()),"marker"in t){let o="";const g="markerIcon"in t;g&&(o+=`icon:${t.markerIcon}|`),g&&"markerAnchor"in t&&(o+=`anchor:${t.markerAnchor}|`),g&&t.hiDPI&&(o+="scale:2|"),o+=(Array.isArray(t.marker)?t.marker:[t.marker]).map(h=>P(h,!g)).join("|"),y.searchParams.set("markers",o)}if("path"in t){let o="";o+=`fill:${(n=t.pathFillColor)!=null?n:"none"}|`,"pathStrokeColor"in t&&(o+=`stroke:${t.pathStrokeColor}|`),"pathWidth"in t&&(o+=`width:${(t.pathWidth/(t.hiDPI?2:1)).toString()}|`),o+=x(t.path),y.searchParams.set("path",o)}return y.searchParams.set("key",d.apiKey),y.toString()}const Tt={centered:bt,bounded:kt,automatic:Ut};var B=(t=>(t[t.METRIC=0]="METRIC",t[t.IMPERIAL=1]="IMPERIAL",t))(B||{});export{N as Language,lt as Map,f as ServiceError,b as Style,B as Unit,d as config,St as coordinates,Lt as data,gt as geocoding,mt as geolocation,Tt as staticMaps};
