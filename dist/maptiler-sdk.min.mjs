import*as a from"maplibre-gl";import{GeolocateControl as D}from"maplibre-gl";export*from"maplibre-gl";import{v4 as G}from"uuid";import{config as I}from"@maptiler/client";import{LanguageGeocoding as Qt,ServiceError as te,coordinates as ee,data as re,geocoding as ie,geolocation as ae,staticMaps as ne}from"@maptiler/client";import R from"@mapbox/point-geometry";const A={AUTO:"auto",LATIN:"latin",NON_LATIN:"nonlatin",LOCAL:"",ALBANIAN:"sq",AMHARIC:"am",ARABIC:"ar",ARMENIAN:"hy",AZERBAIJANI:"az",BASQUE:"eu",BELORUSSIAN:"be",BOSNIAN:"bs",BRETON:"br",BULGARIAN:"bg",CATALAN:"ca",CHINESE:"zh",CORSICAN:"co",CROATIAN:"hr",CZECH:"cs",DANISH:"da",DUTCH:"nl",ENGLISH:"en",ESPERANTO:"eo",ESTONIAN:"et",FINNISH:"fi",FRENCH:"fr",FRISIAN:"fy",GEORGIAN:"ka",GERMAN:"de",GREEK:"el",HEBREW:"he",HINDI:"hi",HUNGARIAN:"hu",ICELANDIC:"is",INDONESIAN:"id",IRISH:"ga",ITALIAN:"it",JAPANESE:"ja",JAPANESE_HIRAGANA:"ja-Hira",JAPANESE_KANA:"ja_kana",JAPANESE_LATIN:"ja_rm",JAPANESE_2018:"ja-Latn",KANNADA:"kn",KAZAKH:"kk",KOREAN:"ko",KOREAN_LATIN:"ko-Latn",KURDISH:"ku",ROMAN_LATIN:"la",LATVIAN:"lv",LITHUANIAN:"lt",LUXEMBOURGISH:"lb",MACEDONIAN:"mk",MALAYALAM:"ml",MALTESE:"mt",NORWEGIAN:"no",OCCITAN:"oc",POLISH:"pl",PORTUGUESE:"pt",ROMANIAN:"ro",ROMANSH:"rm",RUSSIAN:"ru",SCOTTISH_GAELIC:"gd",SERBIAN_CYRILLIC:"sr",SERBIAN_LATIN:"sr-Latn",SLOVAK:"sk",SLOVENE:"sl",SPANISH:"es",SWEDISH:"sv",TAMIL:"ta",TELUGU:"te",THAI:"th",TURKISH:"tr",UKRAINIAN:"uk",WELSH:"cy"},j=new Set(Object.values(A));function x(){if(typeof navigator>"u")return Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0];const t=Array.from(new Set(navigator.languages.map(e=>e.split("-")[0]))).filter(e=>j.has(e));return t.length?t[0]:A.LATIN}class w{constructor(){this.verbose=!1,this.primaryLanguage=A.AUTO,this.secondaryLanguage=null,this._apiKey="Not defined yet."}set apiKey(e){this._apiKey=e,I.apiKey=e}get apiKey(){return this._apiKey}set fetch(e){I.fetch=e}get fetch(){return I.fetch}}const m=new w;var K=8,z="f0e4ff8c-a9e4-414e-9f4d-7938762c948f",W="Satellite no label",q={satellite:{url:"https://api.maptiler.com/tiles/satellite-v2/tiles.json?",tileSize:512,type:"raster"},maptiler_attribution:{attribution:'<a href="https://www.maptiler.com/copyright/" target="_blank">&copy; MapTiler</a> <a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a>',type:"vector"}},J=[{id:"satellite",type:"raster",source:"satellite",minzoom:0,layout:{visibility:"visible"},paint:{"raster-opacity":1},filter:["all"]}],V={"maptiler:copyright":"This style was generated on MapTiler Cloud. Usage outside of MapTiler Cloud or MapTiler Server requires valid MapTiler Data package: https://www.maptiler.com/data/ -- please contact us."},F="https://api.maptiler.com/fonts/{fontstack}/{range}.pbf?",X=0,Y=0,Z=[-78.55323097748868,24.03141891413972],Q=5.066147709178387,tt={version:K,id:z,name:W,sources:q,layers:J,metadata:V,glyphs:F,bearing:X,pitch:Y,center:Z,zoom:Q};const b={STREETS:"streets-v2",HYBRID:"hybrid",SATELLITE:"satellite",OUTDOOR:"outdoor",BASIC:"basic-v2",STREETS_DARK:"streets-v2-dark",STREETS_LIGHT:"streets-v2-light"},C={};C[b.SATELLITE]=tt;function _(t){return t in C}function P(t){return _(t)?C[t]:null}const p={mapStyle:b.STREETS,maptilerLogoURL:"https://api.maptiler.com/resources/logo.svg",maptilerURL:"https://www.maptiler.com/",maptilerApiURL:"https://api.maptiler.com/",rtlPluginURL:"https://cdn.maptiler.com/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.min.js",primaryLanguage:A.LATIN,secondaryLanguage:A.NON_LATIN,terrainSourceURL:"https://api.maptiler.com/tiles/terrain-rgb/tiles.json",terrainSourceId:"maptiler-terrain"};Object.freeze(p);class U extends a.LogoControl{constructor(e={}){var r,i;super(e),this.logoURL="",this.linkURL="",this.logoURL=(r=e.logoURL)!=null?r:p.maptilerLogoURL,this.linkURL=(i=e.linkURL)!=null?i:p.maptilerURL}onAdd(e){this._map=e,this._compact=this.options&&this.options.compact,this._container=window.document.createElement("div"),this._container.className="maplibregl-ctrl";const r=window.document.createElement("a");return r.style.backgroundRepeat="no-repeat",r.style.cursor="pointer",r.style.display="block",r.style.height="23px",r.style.margin="0 0 -4px -4px",r.style.overflow="hidden",r.style.width="88px",r.style.backgroundImage=`url(${this.logoURL})`,r.style.backgroundSize="100px 30px",r.style.width="100px",r.style.height="30px",r.target="_blank",r.rel="noopener nofollow",r.href=this.linkURL,r.setAttribute("aria-label",this._map._getUIString("LogoControl.Title")),r.setAttribute("rel","noopener nofollow"),this._container.appendChild(r),this._container.style.display="block",this._map.on("resize",this._updateCompact),this._updateCompact(),this._container}}function et(...t){m.verbose&&console.log(...t)}function N(t){const e=/^maptiler:\/\/(.*)/;let r;const i=t.trim();let o;return i.startsWith("http://")||i.startsWith("https://")?o=i:(r=e.exec(i))!==null?o=`https://api.maptiler.com/maps/${r[1]}/style.json`:o=`https://api.maptiler.com/maps/${i}/style.json`,o}function rt(){const t=a;t.getRTLTextPluginStatus()==="unavailable"&&t.setRTLTextPlugin(p.rtlPluginURL,null,!0)}const l=class{static testProp(t){if(!l.docStyle)return t[0];for(let e=0;e<t.length;e++)if(t[e]in l.docStyle)return t[e];return t[0]}static create(t,e,r){const i=window.document.createElement(t);return e!==void 0&&(i.className=e),r&&r.appendChild(i),i}static createNS(t,e){return window.document.createElementNS(t,e)}static disableDrag(){l.docStyle&&l.selectProp&&(l.userSelect=l.docStyle[l.selectProp],l.docStyle[l.selectProp]="none")}static enableDrag(){l.docStyle&&l.selectProp&&(l.docStyle[l.selectProp]=l.userSelect)}static setTransform(t,e){t.style[l.transformProp]=e}static addEventListener(t,e,r,i={}){"passive"in i?t.addEventListener(e,r,i):t.addEventListener(e,r,i.capture)}static removeEventListener(t,e,r,i={}){"passive"in i?t.removeEventListener(e,r,i):t.removeEventListener(e,r,i.capture)}static suppressClickInternal(t){t.preventDefault(),t.stopPropagation(),window.removeEventListener("click",l.suppressClickInternal,!0)}static suppressClick(){window.addEventListener("click",l.suppressClickInternal,!0),window.setTimeout(()=>{window.removeEventListener("click",l.suppressClickInternal,!0)},0)}static mousePos(t,e){const r=t.getBoundingClientRect();return new R(e.clientX-r.left-t.clientLeft,e.clientY-r.top-t.clientTop)}static touchPos(t,e){const r=t.getBoundingClientRect(),i=[];for(let o=0;o<e.length;o++)i.push(new R(e[o].clientX-r.left-t.clientLeft,e[o].clientY-r.top-t.clientTop));return i}static mouseButton(t){return t.button}static remove(t){t.parentNode&&t.parentNode.removeChild(t)}};let T=l;T.docStyle=typeof window<"u"&&window.document&&window.document.documentElement.style,T.selectProp=l.testProp(["userSelect","MozUserSelect","WebkitUserSelect","msUserSelect"]),T.transformProp=l.testProp(["transform","WebkitTransform"]);function it(t,e){t.forEach(r=>{!e[r]||(e[r]=e[r].bind(e))})}class at{constructor(){it(["_toggleTerrain","_updateTerrainIcon"],this)}onAdd(e){return this._map=e,this._container=T.create("div","maplibregl-ctrl maplibregl-ctrl-group"),this._terrainButton=T.create("button","maplibregl-ctrl-terrain",this._container),T.create("span","maplibregl-ctrl-icon",this._terrainButton).setAttribute("aria-hidden","true"),this._terrainButton.type="button",this._terrainButton.addEventListener("click",this._toggleTerrain),this._updateTerrainIcon(),this._map.on("terrain",this._updateTerrainIcon),this._container}onRemove(){T.remove(this._container),this._map.off("terrain",this._updateTerrainIcon),this._map=void 0}_toggleTerrain(){this._map.hasTerrain()?this._map.disableTerrain():this._map.enableTerrain(),this._updateTerrainIcon()}_updateTerrainIcon(){this._terrainButton.classList.remove("maplibregl-ctrl-terrain"),this._terrainButton.classList.remove("maplibregl-ctrl-terrain-enabled"),this._map.hasTerrain()?(this._terrainButton.classList.add("maplibregl-ctrl-terrain-enabled"),this._terrainButton.title=this._map._getUIString("TerrainControl.disableTerrain")):(this._terrainButton.classList.add("maplibregl-ctrl-terrain"),this._terrainButton.title=this._map._getUIString("TerrainControl.enableTerrain"))}}var nt=Object.defineProperty,ot=Object.defineProperties,st=Object.getOwnPropertyDescriptors,k=Object.getOwnPropertySymbols,lt=Object.prototype.hasOwnProperty,ct=Object.prototype.propertyIsEnumerable,M=(t,e,r)=>e in t?nt(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,O=(t,e)=>{for(var r in e||(e={}))lt.call(e,r)&&M(t,r,e[r]);if(k)for(var r of k(e))ct.call(e,r)&&M(t,r,e[r]);return t},$=(t,e)=>ot(t,st(e)),B=(t,e,r)=>new Promise((i,o)=>{var h=c=>{try{y(r.next(c))}catch(f){o(f)}},d=c=>{try{y(r.throw(c))}catch(f){o(f)}},y=c=>c.done?i(c.value):Promise.resolve(c.value).then(h,d);y((r=r.apply(t,e)).next())});const ut=G();class ht extends a.Map{constructor(e){var r;let i;"style"in e?typeof i=="string"&&_(i)?i=P(i):typeof i=="string"?i=N(i):i=e.style:(i=N(p.mapStyle),et(`Map style not provided, backing up to ${p.mapStyle}`)),super($(O({},e),{style:i,maplibreLogo:!1,transformRequest:o=>{const h=new URL(o);return h.searchParams.has("key")||h.searchParams.append("key",m.apiKey),h.searchParams.append("mtsid",ut),{url:h.href,headers:{}}}})),this.languageShouldUpdate=!1,this.isStyleInitialized=!1,this.isTerrainEnabled=!1,this.terrainExaggeration=1,this.on("styledataloading",()=>{this.languageShouldUpdate=!!m.primaryLanguage||!!m.secondaryLanguage}),this.on("styledata",()=>{m.primaryLanguage&&(this.languageShouldUpdate||!this.isStyleInitialized)&&this.setPrimaryLanguage(m.primaryLanguage),m.secondaryLanguage&&(this.languageShouldUpdate||!this.isStyleInitialized)&&this.setSecondaryLanguage(m.secondaryLanguage),this.languageShouldUpdate=!1,this.isStyleInitialized=!0}),this.on("styledata",()=>{this.getTerrain()===null&&this.isTerrainEnabled&&this.enableTerrain(this.terrainExaggeration)}),this.once("load",()=>B(this,null,function*(){rt()})),this.once("load",()=>B(this,null,function*(){let o=null;try{o=this.getSource("openmaptiles").url}catch{return}const h=yield(yield fetch(o)).json();if("logo"in h&&h.logo){const d=h.logo;this.addControl(new U({logoURL:d}),e.logoPosition),e.attributionControl===!1&&this.addControl(new a.AttributionControl(e))}else e.maptilerLogo&&this.addControl(new U,e.logoPosition);if(e.navigationControl!==!1){const d=e.navigationControl===!0||e.navigationControl===void 0?"top-right":e.navigationControl;this.addControl(new a.NavigationControl({showCompass:!0,showZoom:!0,visualizePitch:!0}),d),this.addControl(new D({}),d)}if(e.terrainControl!==!1){const d=e.terrainControl===!0||e.terrainControl===void 0?"top-right":e.terrainControl;this.addControl(new at,d)}})),e.terrain&&this.enableTerrain((r=e.terrainExaggeration)!=null?r:this.terrainExaggeration)}setStyle(e,r){let i=e;return typeof e=="string"&&_(e)?i=P(e):typeof e=="string"&&(i=N(e)),super.setStyle(i,r)}setLanguage(e=p.primaryLanguage){if(e===A.AUTO)return this.setLanguage(x());this.setPrimaryLanguage(e)}setPrimaryLanguage(e=p.primaryLanguage){if(e===A.AUTO)return this.setPrimaryLanguage(x());m.primaryLanguage=e;const r=this.getStyle().layers,i=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,o=/^\s*name\s*(:\s*(\S*))?\s*$/,h=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/,d=/^(.*)({\s*name\s*(:\s*(\S*))?\s*})(.*)$/,y=e?`name:${e}`:"name",c=["case",["has",y],["get",y],["get","name:latin"]];for(let f=0;f<r.length;f+=1){const u=r[f],S=u.layout;if(!S||!S["text-field"])continue;const n=this.getLayoutProperty(u.id,"text-field");let g;if(Array.isArray(n)&&n.length>=2&&n[0].trim().toLowerCase()==="concat"){const s=n.slice();for(let v=0;v<n.length;v+=1){const L=n[v];if((typeof L=="string"||L instanceof String)&&i.exec(L.toString())){s[v]=c;break}else if(Array.isArray(L)&&L.length>=2&&L[0].trim().toLowerCase()==="get"&&o.exec(L[1].toString())){s[v]=c;break}else if(Array.isArray(L)&&L.length===4&&L[0].trim().toLowerCase()==="case"){s[v]=c;break}}this.setLayoutProperty(u.id,"text-field",s)}else if(Array.isArray(n)&&n.length>=2&&n[0].trim().toLowerCase()==="get"&&o.exec(n[1].toString())){const s=c;this.setLayoutProperty(u.id,"text-field",s)}else if((typeof n=="string"||n instanceof String)&&i.exec(n.toString())){const s=c;this.setLayoutProperty(u.id,"text-field",s)}else if(Array.isArray(n)&&n.length===4&&n[0].trim().toLowerCase()==="case"){const s=c;this.setLayoutProperty(u.id,"text-field",s)}else if((typeof n=="string"||n instanceof String)&&(g=h.exec(n.toString()))!==null){const s=`{${y}}${g[3]}{name${g[4]||""}}`;this.setLayoutProperty(u.id,"text-field",s)}else if((typeof n=="string"||n instanceof String)&&(g=d.exec(n.toString()))!==null){const s=`${g[1]}{${y}}${g[5]}`;this.setLayoutProperty(u.id,"text-field",s)}}}setSecondaryLanguage(e=p.secondaryLanguage){if(e===A.AUTO)return this.setSecondaryLanguage(x());m.secondaryLanguage=e;const r=this.getStyle().layers,i=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,o=/^\s*name\s*(:\s*(\S*))?\s*$/,h=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/;let d;for(let y=0;y<r.length;y+=1){const c=r[y],f=c.layout;if(!f||!f["text-field"])continue;const u=this.getLayoutProperty(c.id,"text-field");let S;if(Array.isArray(u)&&u.length>=2&&u[0].trim().toLowerCase()==="concat"){S=u.slice();let n=0;for(let g=0;g<u.length;g+=1){const s=u[g];if((typeof s=="string"||s instanceof String)&&i.exec(s.toString())){if(n===1){S[g]=`{name:${e}}`;break}n+=1}else if(Array.isArray(s)&&s.length>=2&&s[0].trim().toLowerCase()==="get"&&o.exec(s[1].toString())){if(n===1){S[g][1]=`name:${e}`;break}n+=1}else if(Array.isArray(s)&&s.length===4&&s[0].trim().toLowerCase()==="case"){if(n===1){S[g]=["get",`name:${e}`];break}n+=1}}this.setLayoutProperty(c.id,"text-field",S)}else if((typeof u=="string"||u instanceof String)&&(d=h.exec(u.toString()))!==null){const n=e?`name:${e}`:"name";S=`{name${d[1]||""}}${d[3]}{${n}}`,this.setLayoutProperty(c.id,"text-field",S)}}}getTerrainExaggeration(){return this.terrainExaggeration}hasTerrain(){return this.isTerrainEnabled}enableTerrain(e=this.terrainExaggeration){const r=this.getTerrain(),i=()=>{this.isTerrainEnabled=!0,this.terrainExaggeration=e,this.addSource(p.terrainSourceId,{type:"raster-dem",url:p.terrainSourceURL}),this.setTerrain({source:p.terrainSourceId,exaggeration:e})};if(r){this.setTerrain($(O({},r),{exaggeration:e}));return}this.loaded()||this.isTerrainEnabled?i():this.once("load",()=>{this.getTerrain()&&this.getSource(p.terrainSourceId)||i()})}disableTerrain(){this.isTerrainEnabled=!1,this.setTerrain(null),this.getSource(p.terrainSourceId)&&this.removeSource(p.terrainSourceId)}setTerrainExaggeration(e){this.enableTerrain(e)}}function E(t,e){this.x=t,this.y=e}E.prototype={clone:function(){return new E(this.x,this.y)},add:function(t){return this.clone()._add(t)},sub:function(t){return this.clone()._sub(t)},multByPoint:function(t){return this.clone()._multByPoint(t)},divByPoint:function(t){return this.clone()._divByPoint(t)},mult:function(t){return this.clone()._mult(t)},div:function(t){return this.clone()._div(t)},rotate:function(t){return this.clone()._rotate(t)},rotateAround:function(t,e){return this.clone()._rotateAround(t,e)},matMult:function(t){return this.clone()._matMult(t)},unit:function(){return this.clone()._unit()},perp:function(){return this.clone()._perp()},round:function(){return this.clone()._round()},mag:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},equals:function(t){return this.x===t.x&&this.y===t.y},dist:function(t){return Math.sqrt(this.distSqr(t))},distSqr:function(t){const e=t.x-this.x,r=t.y-this.y;return e*e+r*r},angle:function(){return Math.atan2(this.y,this.x)},angleTo:function(t){return Math.atan2(this.y-t.y,this.x-t.x)},angleWith:function(t){return this.angleWithSep(t.x,t.y)},angleWithSep:function(t,e){return Math.atan2(this.x*e-this.y*t,this.x*t+this.y*e)},_matMult:function(t){const e=t[0]*this.x+t[1]*this.y,r=t[2]*this.x+t[3]*this.y;return this.x=e,this.y=r,this},_add:function(t){return this.x+=t.x,this.y+=t.y,this},_sub:function(t){return this.x-=t.x,this.y-=t.y,this},_mult:function(t){return this.x*=t,this.y*=t,this},_div:function(t){return this.x/=t,this.y/=t,this},_multByPoint:function(t){return this.x*=t.x,this.y*=t.y,this},_divByPoint:function(t){return this.x/=t.x,this.y/=t.y,this},_unit:function(){return this._div(this.mag()),this},_perp:function(){const t=this.y;return this.y=this.x,this.x=-t,this},_rotate:function(t){const e=Math.cos(t),r=Math.sin(t),i=e*this.x-r*this.y,o=r*this.x+e*this.y;return this.x=i,this.y=o,this},_rotateAround:function(t,e){const r=Math.cos(t),i=Math.sin(t),o=e.x+r*(this.x-e.x)-i*(this.y-e.y),h=e.y+i*(this.x-e.x)+r*(this.y-e.y);return this.x=o,this.y=h,this},_round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},E.convert=function(t){return t instanceof E?t:Array.isArray(t)?new E(t[0],t[1]):t};var H=(t=>(t[t.METRIC=0]="METRIC",t[t.IMPERIAL=1]="IMPERIAL",t))(H||{});const dt=a.default.supported,pt=a.default.setRTLTextPlugin,gt=a.default.getRTLTextPluginStatus,yt=a.default.NavigationControl,mt=a.default.GeolocateControl,ft=a.default.AttributionControl,St=a.default.LogoControl,Lt=a.default.ScaleControl,At=a.default.FullscreenControl,Tt=a.default.TerrainControl,vt=a.default.Popup,Et=a.default.Marker,It=a.default.Style,xt=a.default.LngLat,bt=a.default.LngLatBounds,Ct=a.default.MercatorCoordinate,_t=a.default.Evented,Nt=a.default.AJAXError,Rt=a.default.CanvasSource,wt=a.default.GeoJSONSource,Pt=a.default.ImageSource,Ut=a.default.RasterDEMTileSource,kt=a.default.RasterTileSource,Mt=a.default.VectorTileSource,Ot=a.default.VideoSource,$t=a.default.prewarm,Bt=a.default.clearPrewarmedResources,Ht=a.default.version,Dt=a.default.workerCount,Gt=a.default.maxParallelImageRequests,jt=a.default.clearStorage,Kt=a.default.workerUrl,zt=a.default.addProtocol,Wt=a.default.removeProtocol;export{Nt as AJAXError,ft as AttributionControl,Rt as CanvasSource,_t as Evented,At as FullscreenControl,wt as GeoJSONSource,mt as GeolocateControl,Pt as ImageSource,A as Language,Qt as LanguageGeocoding,xt as LngLat,bt as LngLatBounds,St as LogoControl,ht as Map,b as MapStyle,Et as Marker,Ct as MercatorCoordinate,yt as NavigationControl,E as Point,vt as Popup,Ut as RasterDEMTileSource,kt as RasterTileSource,Lt as ScaleControl,w as SdkConfig,te as ServiceError,It as Style,Tt as TerrainControl,H as Unit,Mt as VectorTileSource,Ot as VideoSource,zt as addProtocol,Bt as clearPrewarmedResources,jt as clearStorage,m as config,ee as coordinates,re as data,ie as geocoding,ae as geolocation,gt as getRTLTextPluginStatus,Gt as maxParallelImageRequests,$t as prewarm,Wt as removeProtocol,pt as setRTLTextPlugin,ne as staticMaps,dt as supported,Ht as version,Dt as workerCount,Kt as workerUrl};
