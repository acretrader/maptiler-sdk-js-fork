import*as f from"maplibre-gl";export*from"maplibre-gl";import{config as I}from"@maptiler/client";import{LanguageGeocoding as ot,ServiceError as lt,coordinates as gt,data as ct,geocoding as pt,geolocation as yt,staticMaps as ut}from"@maptiler/client";const S={AUTO:"auto",LATIN:"latin",NON_LATIN:"nonlatin",LOCAL:"",ALBANIAN:"sq",AMHARIC:"am",ARABIC:"ar",ARMENIAN:"hy",AZERBAIJANI:"az",BASQUE:"eu",BELORUSSIAN:"be",BOSNIAN:"bs",BRETON:"br",BULGARIAN:"bg",CATALAN:"ca",CHINESE:"zh",CORSICAN:"co",CROATIAN:"hr",CZECH:"cs",DANISH:"da",DUTCH:"nl",ENGLISH:"en",ESPERANTO:"eo",ESTONIAN:"et",FINNISH:"fi",FRENCH:"fr",FRISIAN:"fy",GEORGIAN:"ka",GERMAN:"de",GREEK:"el",HEBREW:"he",HINDI:"hi",HUNGARIAN:"hu",ICELANDIC:"is",INDONESIAN:"id",IRISH:"ga",ITALIAN:"it",JAPANESE:"ja",JAPANESE_HIRAGANA:"ja-Hira",JAPANESE_KANA:"ja_kana",JAPANESE_LATIN:"ja_rm",JAPANESE_2018:"ja-Latn",KANNADA:"kn",KAZAKH:"kk",KOREAN:"ko",KOREAN_LATIN:"ko-Latn",KURDISH:"ku",ROMAN_LATIN:"la",LATVIAN:"lv",LITHUANIAN:"lt",LUXEMBOURGISH:"lb",MACEDONIAN:"mk",MALAYALAM:"ml",MALTESE:"mt",NORWEGIAN:"no",OCCITAN:"oc",POLISH:"pl",PORTUGUESE:"pt",ROMANIAN:"ro",ROMANSH:"rm",RUSSIAN:"ru",SCOTTISH_GAELIC:"gd",SERBIAN_CYRILLIC:"sr",SERBIAN_LATIN:"sr-Latn",SLOVAK:"sk",SLOVENE:"sl",SPANISH:"es",SWEDISH:"sv",TAMIL:"ta",TELUGU:"te",THAI:"th",TURKISH:"tr",UKRAINIAN:"uk",WELSH:"cy"},_=new Set(Object.values(S));function N(){if(typeof navigator>"u")return Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0];const a=Array.from(new Set(navigator.languages.map(t=>t.split("-")[0]))).filter(t=>_.has(t));return a.length?a[0]:S.LATIN}class v{constructor(){this.verbose=!1,this.primaryLanguage=S.AUTO,this.secondaryLanguage=null,this._apiKey="Not defined yet."}set apiKey(t){this._apiKey=t,I.apiKey=t}get apiKey(){return this._apiKey}set fetch(t){I.fetch=t}get fetch(){return I.fetch}}const c=new v;var H=8,M="f0e4ff8c-a9e4-414e-9f4d-7938762c948f",K="Satellite no label",j={satellite:{url:"https://api.maptiler.com/tiles/satellite-v2/tiles.json?key={key}",tileSize:512,type:"raster"},maptiler_attribution:{attribution:'<a href="https://www.maptiler.com/copyright/" target="_blank">&copy; MapTiler</a> <a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a>',type:"vector"}},B=[{id:"satellite",type:"raster",source:"satellite",minzoom:0,layout:{visibility:"visible"},paint:{"raster-opacity":1},filter:["all"]}],D={"maptiler:copyright":"This style was generated on MapTiler Cloud. Usage outside of MapTiler Cloud or MapTiler Server requires valid MapTiler Data package: https://www.maptiler.com/data/ -- please contact us."},G="https://api.maptiler.com/fonts/{fontstack}/{range}.pbf?key={key}",z=0,J=0,W=[-78.55323097748868,24.03141891413972],F=5.066147709178387,V={version:H,id:M,name:K,sources:j,layers:B,metadata:D,glyphs:G,bearing:z,pitch:J,center:W,zoom:F};const T={STREETS:"streets-v2",HYBRID:"hybrid",SATELLITE:"satellite",OUTDOOR:"outdoor",BASIC:"basic-v2",DARK:"streets-v2-dark",LIGHT:"streets-v2-light"},E={};E[T.SATELLITE]=V;function b(a){return a in E}function x(a,t){if(!b(a))return null;const e=JSON.stringify(E[a]).replace(/{key}/gi,t);return JSON.parse(e)}const g={mapStyle:T.STREETS,maptilerLogoURL:"https://api.maptiler.com/resources/logo.svg",maptilerURL:"https://www.maptiler.com/",maptilerApiURL:"https://api.maptiler.com/",rtlPluginURL:"https://cdn.maptiler.com/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.min.js",primaryLanguage:S.LATIN,secondaryLanguage:S.NON_LATIN,terrainSourceURL:"https://api.maptiler.com/tiles/terrain-rgb/tiles.json",terrainSourceId:"maptiler-terrain"};Object.freeze(g);class O extends f.LogoControl{constructor(t={}){var e,r;super(t),this.logoURL="",this.linkURL="",this.logoURL=(e=t.logoURL)!=null?e:g.maptilerLogoURL,this.linkURL=(r=t.linkURL)!=null?r:g.maptilerURL}onAdd(t){this._map=t,this._compact=this.options&&this.options.compact,this._container=window.document.createElement("div"),this._container.className="maplibregl-ctrl";const e=window.document.createElement("a");return e.style.backgroundRepeat="no-repeat",e.style.cursor="pointer",e.style.display="block",e.style.height="23px",e.style.margin="0 0 -4px -4px",e.style.overflow="hidden",e.style.width="88px",e.style.backgroundImage=`url(${this.logoURL})`,e.style.backgroundSize="100px 30px",e.style.width="100px",e.style.height="30px",e.target="_blank",e.rel="noopener nofollow",e.href=this.linkURL,e.setAttribute("aria-label",this._map._getUIString("LogoControl.Title")),e.setAttribute("rel","noopener nofollow"),this._container.appendChild(e),this._container.style.display="block",this._map.on("resize",this._updateCompact),this._updateCompact(),this._container}}function Y(...a){c.verbose&&console.log(...a)}function R(a){const t=/^maptiler:\/\/(.*)/;let e;const r=a.trim();let o;return r.startsWith("http://")||r.startsWith("https://")?o=r:(e=t.exec(r))!==null?o=`https://api.maptiler.com/maps/${e[1]}/style.json`:o=`https://api.maptiler.com/maps/${r}/style.json`,o.includes("key=")||(o=`${o}?key=${c.apiKey}`),o}function Z(){const a=f;a.getRTLTextPluginStatus()==="unavailable"&&a.setRTLTextPlugin(g.rtlPluginURL,null,!0)}var q=Object.defineProperty,Q=Object.defineProperties,X=Object.getOwnPropertyDescriptors,C=Object.getOwnPropertySymbols,tt=Object.prototype.hasOwnProperty,et=Object.prototype.propertyIsEnumerable,U=(a,t,e)=>t in a?q(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e,k=(a,t)=>{for(var e in t||(t={}))tt.call(t,e)&&U(a,e,t[e]);if(C)for(var e of C(t))et.call(t,e)&&U(a,e,t[e]);return a},w=(a,t)=>Q(a,X(t)),P=(a,t,e)=>new Promise((r,o)=>{var A=n=>{try{y(e.next(n))}catch(h){o(h)}},u=n=>{try{y(e.throw(n))}catch(h){o(h)}},y=n=>n.done?r(n.value):Promise.resolve(n.value).then(A,u);y((e=e.apply(a,t)).next())});class at extends f.Map{constructor(t){var e;let r;"style"in t?typeof r=="string"&&b(r)?r=x(r,c.apiKey):typeof r=="string"?r=R(r):r=t.style:(r=R(g.mapStyle),Y(`Map style not provided, backing up to ${g.mapStyle}`)),super(w(k({},t),{style:r,maplibreLogo:!1})),this.languageShouldUpdate=!1,this.isStyleInitialized=!1,this.isTerrainEnabled=!1,this.terrainExaggeration=1,this.on("styledataloading",()=>{this.languageShouldUpdate=!!c.primaryLanguage||!!c.secondaryLanguage}),this.on("styledata",()=>{c.primaryLanguage&&(this.languageShouldUpdate||!this.isStyleInitialized)&&this.setPrimaryLanguage(c.primaryLanguage),c.secondaryLanguage&&(this.languageShouldUpdate||!this.isStyleInitialized)&&this.setSecondaryLanguage(c.secondaryLanguage),this.languageShouldUpdate=!1,this.isStyleInitialized=!0}),this.on("styledata",()=>{this.getTerrain()===null&&this.isTerrainEnabled&&this.enableTerrain(this.terrainExaggeration)}),this.once("load",()=>P(this,null,function*(){Z()})),this.once("load",()=>P(this,null,function*(){let o=null;try{o=this.getSource("openmaptiles").url}catch{return}const A=yield(yield fetch(o)).json();if("logo"in A&&A.logo){const u=A.logo;this.addControl(new O({logoURL:u}),t.logoPosition),t.attributionControl===!1&&this.addControl(new f.AttributionControl(t))}else t.maptilerLogo&&this.addControl(new O,t.logoPosition)})),t.enableTerrain&&this.enableTerrain((e=t.terrainExaggeration)!=null?e:1)}setStyle(t,e){let r=t;return typeof t=="string"&&b(t)?r=x(t,c.apiKey):typeof t=="string"&&(r=R(t)),super.setStyle(r,e)}setLanguage(t=g.primaryLanguage){if(t===S.AUTO)return this.setLanguage(N());this.setPrimaryLanguage(t)}setPrimaryLanguage(t=g.primaryLanguage){if(t===S.AUTO)return this.setPrimaryLanguage(N());console.log("language",t),c.primaryLanguage=t;const e=this.getStyle().layers,r=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,o=/^\s*name\s*(:\s*(\S*))?\s*$/,A=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/,u=/^(.*)({\s*name\s*(:\s*(\S*))?\s*})(.*)$/,y=t?`name:${t}`:"name",n=["case",["has",y],["get",y],["get","name:latin"]];for(let h=0;h<e.length;h+=1){const l=e[h],d=l.layout;if(!d||!d["text-field"])continue;const i=this.getLayoutProperty(l.id,"text-field");let p;if(Array.isArray(i)&&i.length>=2&&i[0].trim().toLowerCase()==="concat"){const s=i.slice();for(let L=0;L<i.length;L+=1){const m=i[L];if((typeof m=="string"||m instanceof String)&&r.exec(m.toString())){s[L]=n;break}else if(Array.isArray(m)&&m.length>=2&&m[0].trim().toLowerCase()==="get"&&o.exec(m[1].toString())){s[L]=n;break}else if(Array.isArray(m)&&m.length===4&&m[0].trim().toLowerCase()==="case"){s[L]=n;break}}this.setLayoutProperty(l.id,"text-field",s)}else if(Array.isArray(i)&&i.length>=2&&i[0].trim().toLowerCase()==="get"&&o.exec(i[1].toString())){const s=n;this.setLayoutProperty(l.id,"text-field",s)}else if((typeof i=="string"||i instanceof String)&&r.exec(i.toString())){const s=n;this.setLayoutProperty(l.id,"text-field",s)}else if(Array.isArray(i)&&i.length===4&&i[0].trim().toLowerCase()==="case"){const s=n;this.setLayoutProperty(l.id,"text-field",s)}else if((typeof i=="string"||i instanceof String)&&(p=A.exec(i.toString()))!==null){const s=`{${y}}${p[3]}{name${p[4]||""}}`;this.setLayoutProperty(l.id,"text-field",s)}else if((typeof i=="string"||i instanceof String)&&(p=u.exec(i.toString()))!==null){const s=`${p[1]}{${y}}${p[5]}`;this.setLayoutProperty(l.id,"text-field",s)}}}setSecondaryLanguage(t=g.secondaryLanguage){if(t===S.AUTO)return this.setSecondaryLanguage(N());c.secondaryLanguage=t;const e=this.getStyle().layers,r=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,o=/^\s*name\s*(:\s*(\S*))?\s*$/,A=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/;let u;for(let y=0;y<e.length;y+=1){const n=e[y],h=n.layout;if(!h||!h["text-field"])continue;const l=this.getLayoutProperty(n.id,"text-field");let d;if(Array.isArray(l)&&l.length>=2&&l[0].trim().toLowerCase()==="concat"){d=l.slice();let i=0;for(let p=0;p<l.length;p+=1){const s=l[p];if((typeof s=="string"||s instanceof String)&&r.exec(s.toString())){if(i===1){d[p]=`{name:${t}}`;break}i+=1}else if(Array.isArray(s)&&s.length>=2&&s[0].trim().toLowerCase()==="get"&&o.exec(s[1].toString())){if(i===1){d[p][1]=`name:${t}`;break}i+=1}else if(Array.isArray(s)&&s.length===4&&s[0].trim().toLowerCase()==="case"){if(i===1){d[p]=["get",`name:${t}`];break}i+=1}}this.setLayoutProperty(n.id,"text-field",d)}else if((typeof l=="string"||l instanceof String)&&(u=A.exec(l.toString()))!==null){const i=t?`name:${t}`:"name";d=`{name${u[1]||""}}${u[3]}{${i}}`,this.setLayoutProperty(n.id,"text-field",d)}}}enableTerrain(t=1){const e=this.getTerrain(),r=()=>{this.isTerrainEnabled=!0,this.terrainExaggeration=t,this.addSource(g.terrainSourceId,{type:"raster-dem",url:`${g.terrainSourceURL}?key=${c.apiKey}`}),this.setTerrain({source:g.terrainSourceId,exaggeration:t})};if(e){this.setTerrain(w(k({},e),{exaggeration:t}));return}this.loaded()||this.isTerrainEnabled?r():this.once("load",()=>{this.getTerrain()&&this.getSource(g.terrainSourceId)||r()})}disableTerrain(){this.isTerrainEnabled=!1,this.setTerrain(null),this.getSource(g.terrainSourceId)&&this.removeSource(g.terrainSourceId)}setTerrainExaggeration(t){this.enableTerrain(t)}}var $=(a=>(a[a.METRIC=0]="METRIC",a[a.IMPERIAL=1]="IMPERIAL",a))($||{});export{S as Language,ot as LanguageGeocoding,at as Map,v as SdkConfig,lt as ServiceError,T as Style,$ as Unit,c as config,gt as coordinates,ct as data,pt as geocoding,yt as geolocation,ut as staticMaps};
