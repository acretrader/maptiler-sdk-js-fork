import S from"maplibre-gl";export*from"maplibre-gl";import{v4 as V}from"uuid";import G from"events";import{config as I,geolocation as K}from"@maptiler/client";import{LanguageGeocoding as he,ServiceError as ue,coordinates as ge,data as pe,geocoding as de,geolocation as me,staticMaps as ye}from"@maptiler/client";const L={AUTO:"auto",LATIN:"latin",NON_LATIN:"nonlatin",LOCAL:"",ALBANIAN:"sq",AMHARIC:"am",ARABIC:"ar",ARMENIAN:"hy",AZERBAIJANI:"az",BASQUE:"eu",BELORUSSIAN:"be",BOSNIAN:"bs",BRETON:"br",BULGARIAN:"bg",CATALAN:"ca",CHINESE:"zh",CORSICAN:"co",CROATIAN:"hr",CZECH:"cs",DANISH:"da",DUTCH:"nl",ENGLISH:"en",ESPERANTO:"eo",ESTONIAN:"et",FINNISH:"fi",FRENCH:"fr",FRISIAN:"fy",GEORGIAN:"ka",GERMAN:"de",GREEK:"el",HEBREW:"he",HINDI:"hi",HUNGARIAN:"hu",ICELANDIC:"is",INDONESIAN:"id",IRISH:"ga",ITALIAN:"it",JAPANESE:"ja",JAPANESE_HIRAGANA:"ja-Hira",JAPANESE_KANA:"ja_kana",JAPANESE_LATIN:"ja_rm",JAPANESE_2018:"ja-Latn",KANNADA:"kn",KAZAKH:"kk",KOREAN:"ko",KOREAN_LATIN:"ko-Latn",KURDISH:"ku",ROMAN_LATIN:"la",LATVIAN:"lv",LITHUANIAN:"lt",LUXEMBOURGISH:"lb",MACEDONIAN:"mk",MALAYALAM:"ml",MALTESE:"mt",NORWEGIAN:"no",OCCITAN:"oc",POLISH:"pl",PORTUGUESE:"pt",ROMANIAN:"ro",ROMANSH:"rm",RUSSIAN:"ru",SCOTTISH_GAELIC:"gd",SERBIAN_CYRILLIC:"sr",SERBIAN_LATIN:"sr-Latn",SLOVAK:"sk",SLOVENE:"sl",SPANISH:"es",SWEDISH:"sv",TAMIL:"ta",TELUGU:"te",THAI:"th",TURKISH:"tr",UKRAINIAN:"uk",WELSH:"cy"},j=new Set(Object.values(L));function x(e){return j.has(e)}const F=new Set(Object.values(L));function R(){if(typeof navigator>"u")return Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0];const e=Array.from(new Set(navigator.languages.map(t=>t.split("-")[0]))).filter(t=>F.has(t));return e.length?e[0]:L.LATIN}class N extends G{constructor(){super(),this.primaryLanguage=L.AUTO,this.secondaryLanguage=null,this._unit="metric",this._apiKey=""}set unit(t){this._unit=t,this.emit("unit",t)}get unit(){return this._unit}set apiKey(t){this._apiKey=t,I.apiKey=t,this.emit("apiKey",t)}get apiKey(){return this._apiKey}set fetch(t){I.fetch=t}get fetch(){return I.fetch}}const g=new N,p={maptilerLogoURL:"https://api.maptiler.com/resources/logo.svg",maptilerURL:"https://www.maptiler.com/",maptilerApiHost:"api.maptiler.com",rtlPluginURL:"https://cdn.maptiler.com/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.min.js",primaryLanguage:L.LATIN,secondaryLanguage:L.NON_LATIN,terrainSourceURL:"https://api.maptiler.com/tiles/terrain-rgb/tiles.json",terrainSourceId:"maptiler-terrain"};Object.freeze(p);class P extends S.LogoControl{constructor(t={}){var i,r;super(t),this.logoURL="",this.linkURL="",this.logoURL=(i=t.logoURL)!=null?i:p.maptilerLogoURL,this.linkURL=(r=t.linkURL)!=null?r:p.maptilerURL}onAdd(t){this._map=t,this._compact=this.options&&this.options.compact,this._container=window.document.createElement("div"),this._container.className="maplibregl-ctrl";const i=window.document.createElement("a");return i.style.backgroundRepeat="no-repeat",i.style.cursor="pointer",i.style.display="block",i.style.height="23px",i.style.margin="0 0 -4px -4px",i.style.overflow="hidden",i.style.width="88px",i.style.backgroundImage=`url(${this.logoURL})`,i.style.backgroundSize="100px 30px",i.style.width="100px",i.style.height="30px",i.target="_blank",i.rel="noopener nofollow",i.href=this.linkURL,i.setAttribute("aria-label",this._map._getUIString("LogoControl.Title")),i.setAttribute("rel","noopener nofollow"),this._container.appendChild(i),this._container.style.display="block",this._map.on("resize",this._updateCompact),this._updateCompact(),this._container}}function z(){S.getRTLTextPluginStatus()==="unavailable"&&S.setRTLTextPlugin(p.rtlPluginURL,null,!0)}function q(e,t){e.forEach(i=>{!t[i]||(t[i]=t[i].bind(t))})}function _(e,t,i){const r=window.document.createElement(e);return t!==void 0&&(r.className=t),i&&i.appendChild(r),r}function W(e){e.parentNode&&e.parentNode.removeChild(e)}var J=8,Y="f0e4ff8c-a9e4-414e-9f4d-7938762c948f",Z="Satellite no label",X={satellite:{url:"https://api.maptiler.com/tiles/satellite-v2/tiles.json",tileSize:512,type:"raster"},maptiler_attribution:{attribution:'<a href="https://www.maptiler.com/copyright/" target="_blank">&copy; MapTiler</a> <a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a>',type:"vector"}},Q=[{id:"satellite",type:"raster",source:"satellite",minzoom:0,layout:{visibility:"visible"},paint:{"raster-opacity":1},filter:["all"]}],tt={"maptiler:copyright":"This style was generated on MapTiler Cloud. Usage outside of MapTiler Cloud or MapTiler Server requires valid MapTiler Data package: https://www.maptiler.com/data/ -- please contact us."},et="https://api.maptiler.com/fonts/{fontstack}/{range}.pbf?",it=0,rt=0,at=[-78.55323097748868,24.03141891413972],nt=5.066147709178387,st={version:J,id:Y,name:Z,sources:X,layers:Q,metadata:tt,glyphs:et,bearing:it,pitch:rt,center:at,zoom:nt};const C=[{referenceStyleID:"STREETS",name:"Streets",description:"",variants:[{id:"streets-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"streets-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"streets-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""},{id:"streets-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""}]},{referenceStyleID:"OUTDOOR",name:"Outdoor",description:"",variants:[{id:"outdoor-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"WINTER",name:"Winter",description:"",variants:[{id:"winter-v2",name:"Winter",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"SATELLITE",name:"Satellite",description:"",variants:[{id:"satellite",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"HYBRID",name:"Hybrid",description:"",variants:[{id:"hybrid",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"BASIC",name:"Basic",description:"",variants:[{id:"basic-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"basic-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"basic-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"BRIGHT",name:"Bright",description:"",variants:[{id:"bright-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"bright-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"bright-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""},{id:"bright-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""}]},{referenceStyleID:"OPENSTREETMAP",name:"OpenStreetMap",description:"",variants:[{id:"openstreetmap",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"TOPO",name:"Topo",description:"",variants:[{id:"topo-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"topo-v2-shiny",name:"Shiny",variantType:"SHINY",description:"",imageURL:""},{id:"topo-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""},{id:"topo-v2-topographique",name:"Topographique",variantType:"TOPOGRAPHIQUE",description:"",imageURL:""}]},{referenceStyleID:"VOYAGER",name:"Voyager",description:"",variants:[{id:"voyager-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"voyager-v2-darkmatter",name:"Darkmatter",variantType:"DARK",description:"",imageURL:""},{id:"voyager-v2-positron",name:"Positron",variantType:"LIGHT",description:"",imageURL:""},{id:"voyager-v2-vintage",name:"Vintage",variantType:"VINTAGE",description:"",imageURL:""}]},{referenceStyleID:"TONER",name:"Toner",description:"",variants:[{id:"toner-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"toner-v2-background",name:"Background",variantType:"BACKGROUND",description:"",imageURL:""},{id:"toner-v2-lite",name:"Lite",variantType:"LITE",description:"",imageURL:""},{id:"toner-v2-lines",name:"Lines",variantType:"LINES",description:"",imageURL:""}]},{referenceStyleID:"STAGE",name:"Stage",description:"",variants:[{id:"stage",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"stage-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"stage-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]}],A={satellite:st};function w(e){const t=/^maptiler:\/\/(.*)/;let i;const r=e.trim();let c;return r.startsWith("http://")||r.startsWith("https://")?c=r:(i=t.exec(r))!==null?c=`https://api.maptiler.com/maps/${i[1]}/style.json`:c=`https://api.maptiler.com/maps/${r}/style.json`,c}function ot(e){return new Proxy(e,{get(t,i,r){return t.hasVariant(i)?t.getVariant(i):i.toString().toUpperCase()===i?e.getDefaultVariant():Reflect.get(t,i,r)}})}class U{constructor(t,i,r,c,s,a){this.name=t,this.variantType=i,this.id=r,this.referenceStyle=c,this.description=s,this.imageURL=a}getName(){return this.name}getFullName(){return`${this.referenceStyle.getName()} ${this.name}`}getType(){return this.variantType}getUsableStyle(){return this.id in A?A[this.id]:w(this.id)}getId(){return this.id}getDescription(){return this.description}getReferenceStyle(){return this.referenceStyle}hasVariant(t){return this.referenceStyle.hasVariant(t)}getVariant(t){return this.referenceStyle.getVariant(t)}getVariants(){return this.referenceStyle.getVariants().filter(t=>t!==this)}getImageURL(){return this.imageURL}}class E{constructor(t,i){this.name=t,this.id=i,this.variants={},this.orderedVariants=[]}getName(){return this.name}getId(){return this.id}addVariant(t){this.variants[t.getType()]=t,this.orderedVariants.push(t)}hasVariant(t){return t in this.variants}getVariant(t){return t in this.variants?this.variants[t]:this.orderedVariants[0]}getVariants(){return Object.values(this.variants)}getDefaultVariant(){return this.orderedVariants[0]}}function lt(){const e={};for(let t=0;t<C.length;t+=1){const i=C[t],r=ot(new E(i.name,i.referenceStyleID));for(let c=0;c<i.variants.length;c+=1){const s=i.variants[c],a=new U(s.name,s.variantType,s.id,r,s.description,s.imageURL);r.addVariant(a)}e[i.referenceStyleID]=r}return e}const D=lt();function O(e){return e?typeof e=="string"&&e.toLowerCase()in A?A[e.toLowerCase()]:typeof e=="string"||e instanceof String?w(e):e instanceof U?e.getUsableStyle():e instanceof E?e.getDefaultVariant().getUsableStyle():e:D[C[0].referenceStyleID].getDefaultVariant().getUsableStyle()}class ct{constructor(){q(["_toggleTerrain","_updateTerrainIcon"],this)}onAdd(t){return this._map=t,this._container=_("div","maplibregl-ctrl maplibregl-ctrl-group"),this._terrainButton=_("button","maplibregl-ctrl-terrain",this._container),_("span","maplibregl-ctrl-icon",this._terrainButton).setAttribute("aria-hidden","true"),this._terrainButton.type="button",this._terrainButton.addEventListener("click",this._toggleTerrain),this._updateTerrainIcon(),this._map.on("terrain",this._updateTerrainIcon),this._container}onRemove(){W(this._container),this._map.off("terrain",this._updateTerrainIcon),this._map=void 0}_toggleTerrain(){this._map.hasTerrain()?this._map.disableTerrain():this._map.enableTerrain(),this._updateTerrainIcon()}_updateTerrainIcon(){this._terrainButton.classList.remove("maplibregl-ctrl-terrain"),this._terrainButton.classList.remove("maplibregl-ctrl-terrain-enabled"),this._map.hasTerrain()?(this._terrainButton.classList.add("maplibregl-ctrl-terrain-enabled"),this._terrainButton.title=this._map._getUIString("TerrainControl.disableTerrain")):(this._terrainButton.classList.add("maplibregl-ctrl-terrain"),this._terrainButton.title=this._map._getUIString("TerrainControl.enableTerrain"))}}const{NavigationControl:ht}=S;class ut extends ht{constructor(){super({showCompass:!0,showZoom:!0,visualizePitch:!0}),this._compass.removeEventListener("click",this._compass.clickFunction),this._compass.addEventListener("click",t=>{this._map.getPitch()===0?this._map.easeTo({pitch:this._map.getMaxPitch()}):this.options.visualizePitch?this._map.resetNorthPitch({},{originalEvent:t}):this._map.resetNorth({},{originalEvent:t})})}_createButton(t,i){const r=super._createButton(t,i);return r.clickFunction=i,r}_rotateCompassArrow(){const t=this.options.visualizePitch?`scale(${Math.min(1.5,1/Math.pow(Math.cos(this._map.transform.pitch*(Math.PI/180)),.5))}) rotateX(${Math.min(70,this._map.transform.pitch)}deg) rotateZ(${this._map.transform.angle*(180/Math.PI)}deg)`:`rotate(${this._map.transform.angle*(180/Math.PI)}deg)`;this._compassIcon.style.transform=t}}var gt=Object.defineProperty,pt=Object.defineProperties,dt=Object.getOwnPropertyDescriptors,k=Object.getOwnPropertySymbols,mt=Object.prototype.hasOwnProperty,yt=Object.prototype.propertyIsEnumerable,M=(e,t,i)=>t in e?gt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,$=(e,t)=>{for(var i in t||(t={}))mt.call(t,i)&&M(e,i,t[i]);if(k)for(var i of k(t))yt.call(t,i)&&M(e,i,t[i]);return e},B=(e,t)=>pt(e,dt(t)),b=(e,t,i)=>new Promise((r,c)=>{var s=o=>{try{h(i.next(o))}catch(m){c(m)}},a=o=>{try{h(i.throw(o))}catch(m){c(m)}},h=o=>o.done?r(o.value):Promise.resolve(o.value).then(s,a);h((i=i.apply(e,t)).next())});const{FullscreenControl:ft,GeolocateControl:Lt,ScaleControl:St}=S,vt=S.Map,Tt=V(),H={IP_POINT:"IP_POINT",IP_COUNTRY:"IP_COUNTRY"};class At extends vt{constructor(t){var i;const r=O(t.style),c=location.hash;g.apiKey||console.warn("MapTiler Cloud API key is not set. Visit https://maptiler.com and try Cloud for free!"),super(B($({},t),{style:r,maplibreLogo:!1,transformRequest:s=>{const a=new URL(s);return a.host===p.maptilerApiHost&&(a.searchParams.has("key")||a.searchParams.append("key",g.apiKey),a.searchParams.append("mtsid",Tt)),{url:a.href,headers:{}}}})),this.languageShouldUpdate=!1,this.isStyleInitialized=!1,this.isTerrainEnabled=!1,this.terrainExaggeration=1,this.once("styledata",()=>b(this,null,function*(){if(t.geolocate!==!1&&!t.center&&!(t.hash&&!!c))try{const s=yield K.info();if(t.geolocate===H.IP_COUNTRY){this.fitBounds(s.country_bounds,{duration:0,padding:100});return}this.setCenter([s.longitude,s.latitude]),this.setZoom(t.zoom||13)}catch{}})),this.on("styledataloading",()=>{this.languageShouldUpdate=!!g.primaryLanguage||!!g.secondaryLanguage}),this.on("styledata",()=>{g.primaryLanguage&&(this.languageShouldUpdate||!this.isStyleInitialized)&&this.setPrimaryLanguage(g.primaryLanguage),g.secondaryLanguage&&(this.languageShouldUpdate||!this.isStyleInitialized)&&this.setSecondaryLanguage(g.secondaryLanguage),this.languageShouldUpdate=!1,this.isStyleInitialized=!0}),this.on("styledata",()=>{this.getTerrain()===null&&this.isTerrainEnabled&&this.enableTerrain(this.terrainExaggeration)}),this.once("load",()=>b(this,null,function*(){z()})),this.once("load",()=>b(this,null,function*(){let s={logo:null};try{const a=Object.keys(this.style.sourceCaches).map(o=>this.getSource(o)).filter(o=>typeof o.url=="string"&&o.url.includes("tiles.json")),h=new URL(a[0].url);h.searchParams.has("key")||h.searchParams.append("key",g.apiKey),s=yield(yield fetch(h.href)).json()}catch{}if("logo"in s&&s.logo){const a=s.logo;this.addControl(new P({logoURL:a}),t.logoPosition),t.attributionControl===!1&&this.addControl(new S.AttributionControl(t))}else t.maptilerLogo&&this.addControl(new P,t.logoPosition);if(t.scaleControl){const a=t.scaleControl===!0||t.scaleControl===void 0?"bottom-right":t.scaleControl,h=new St({unit:g.unit});this.addControl(h,a),g.on("unit",o=>{h.setUnit(o)})}if(t.navigationControl!==!1){const a=t.navigationControl===!0||t.navigationControl===void 0?"top-right":t.navigationControl;this.addControl(new ut,a)}if(t.geolocateControl!==!1){const a=t.geolocateControl===!0||t.geolocateControl===void 0?"top-right":t.geolocateControl;this.addControl(new Lt({positionOptions:{enableHighAccuracy:!0,maximumAge:0,timeout:6e3},fitBoundsOptions:{maxZoom:15},trackUserLocation:!0,showAccuracyCircle:!0,showUserLocation:!0}),a)}if(t.terrainControl!==!1){const a=t.terrainControl===!0||t.terrainControl===void 0?"top-right":t.terrainControl;this.addControl(new ct,a)}if(t.fullscreenControl){const a=t.fullscreenControl===!0||t.fullscreenControl===void 0?"top-right":t.fullscreenControl;this.addControl(new ft({}),a)}})),t.terrain&&this.enableTerrain((i=t.terrainExaggeration)!=null?i:this.terrainExaggeration)}setStyle(t,i){return super.setStyle(O(t),i)}setLanguage(t=p.primaryLanguage){if(t===L.AUTO)return this.setLanguage(R());this.setPrimaryLanguage(t)}setPrimaryLanguage(t=p.primaryLanguage){!x(t)||this.onStyleReady(()=>{if(t===L.AUTO)return this.setPrimaryLanguage(R());g.primaryLanguage=t;const i=this.getStyle().layers,r=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,c=/^\s*name\s*(:\s*(\S*))?\s*$/,s=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/,a=/^(.*)({\s*name\s*(:\s*(\S*))?\s*})(.*)$/,h=t?`name:${t}`:"name",o=["case",["has",h],["get",h],["get","name:latin"]];for(let m=0;m<i.length;m+=1){const u=i[m],y=u.layout;if(!y||!y["text-field"])continue;const n=this.getLayoutProperty(u.id,"text-field");let d;if(Array.isArray(n)&&n.length>=2&&n[0].trim().toLowerCase()==="concat"){const l=n.slice();for(let v=0;v<n.length;v+=1){const f=n[v];if((typeof f=="string"||f instanceof String)&&r.exec(f.toString())){l[v]=o;break}else if(Array.isArray(f)&&f.length>=2&&f[0].trim().toLowerCase()==="get"&&c.exec(f[1].toString())){l[v]=o;break}else if(Array.isArray(f)&&f.length===4&&f[0].trim().toLowerCase()==="case"){l[v]=o;break}}this.setLayoutProperty(u.id,"text-field",l)}else if(Array.isArray(n)&&n.length>=2&&n[0].trim().toLowerCase()==="get"&&c.exec(n[1].toString())){const l=o;this.setLayoutProperty(u.id,"text-field",l)}else if((typeof n=="string"||n instanceof String)&&r.exec(n.toString())){const l=o;this.setLayoutProperty(u.id,"text-field",l)}else if(Array.isArray(n)&&n.length===4&&n[0].trim().toLowerCase()==="case"){const l=o;this.setLayoutProperty(u.id,"text-field",l)}else if((typeof n=="string"||n instanceof String)&&(d=s.exec(n.toString()))!==null){const l=`{${h}}${d[3]}{name${d[4]||""}}`;this.setLayoutProperty(u.id,"text-field",l)}else if((typeof n=="string"||n instanceof String)&&(d=a.exec(n.toString()))!==null){const l=`${d[1]}{${h}}${d[5]}`;this.setLayoutProperty(u.id,"text-field",l)}}})}setSecondaryLanguage(t=p.secondaryLanguage){!x(t)||this.onStyleReady(()=>{if(t===L.AUTO)return this.setSecondaryLanguage(R());g.secondaryLanguage=t;const i=this.getStyle().layers,r=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,c=/^\s*name\s*(:\s*(\S*))?\s*$/,s=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/;let a;for(let h=0;h<i.length;h+=1){const o=i[h],m=o.layout;if(!m||!m["text-field"])continue;const u=this.getLayoutProperty(o.id,"text-field");let y;if(Array.isArray(u)&&u.length>=2&&u[0].trim().toLowerCase()==="concat"){y=u.slice();let n=0;for(let d=0;d<u.length;d+=1){const l=u[d];if((typeof l=="string"||l instanceof String)&&r.exec(l.toString())){if(n===1){y[d]=`{name:${t}}`;break}n+=1}else if(Array.isArray(l)&&l.length>=2&&l[0].trim().toLowerCase()==="get"&&c.exec(l[1].toString())){if(n===1){y[d][1]=`name:${t}`;break}n+=1}else if(Array.isArray(l)&&l.length===4&&l[0].trim().toLowerCase()==="case"){if(n===1){y[d]=["get",`name:${t}`];break}n+=1}}this.setLayoutProperty(o.id,"text-field",y)}else if((typeof u=="string"||u instanceof String)&&(a=s.exec(u.toString()))!==null){const n=t?`name:${t}`:"name";y=`{name${a[1]||""}}${a[3]}{${n}}`,this.setLayoutProperty(o.id,"text-field",y)}}})}getTerrainExaggeration(){return this.terrainExaggeration}hasTerrain(){return this.isTerrainEnabled}enableTerrain(t=this.terrainExaggeration){if(t<0){console.warn("Terrain exaggeration cannot be negative.");return}const i=this.getTerrain(),r=()=>{this.isTerrainEnabled=!0,this.terrainExaggeration=t,this.addSource(p.terrainSourceId,{type:"raster-dem",url:p.terrainSourceURL}),this.setTerrain({source:p.terrainSourceId,exaggeration:t})};if(i){this.setTerrain(B($({},i),{exaggeration:t}));return}this.loaded()||this.isTerrainEnabled?r():this.once("load",()=>{this.getTerrain()&&this.getSource(p.terrainSourceId)||r()})}disableTerrain(){this.isTerrainEnabled=!1,this.setTerrain(null),this.getSource(p.terrainSourceId)&&this.removeSource(p.terrainSourceId)}setTerrainExaggeration(t){this.enableTerrain(t)}onStyleReady(t){this.isStyleLoaded()?t():this.once("styledata",()=>{t()})}}function T(e,t){this.x=e,this.y=t}T.prototype={clone:function(){return new T(this.x,this.y)},add:function(e){return this.clone()._add(e)},sub:function(e){return this.clone()._sub(e)},multByPoint:function(e){return this.clone()._multByPoint(e)},divByPoint:function(e){return this.clone()._divByPoint(e)},mult:function(e){return this.clone()._mult(e)},div:function(e){return this.clone()._div(e)},rotate:function(e){return this.clone()._rotate(e)},rotateAround:function(e,t){return this.clone()._rotateAround(e,t)},matMult:function(e){return this.clone()._matMult(e)},unit:function(){return this.clone()._unit()},perp:function(){return this.clone()._perp()},round:function(){return this.clone()._round()},mag:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},equals:function(e){return this.x===e.x&&this.y===e.y},dist:function(e){return Math.sqrt(this.distSqr(e))},distSqr:function(e){const t=e.x-this.x,i=e.y-this.y;return t*t+i*i},angle:function(){return Math.atan2(this.y,this.x)},angleTo:function(e){return Math.atan2(this.y-e.y,this.x-e.x)},angleWith:function(e){return this.angleWithSep(e.x,e.y)},angleWithSep:function(e,t){return Math.atan2(this.x*t-this.y*e,this.x*e+this.y*t)},_matMult:function(e){const t=e[0]*this.x+e[1]*this.y,i=e[2]*this.x+e[3]*this.y;return this.x=t,this.y=i,this},_add:function(e){return this.x+=e.x,this.y+=e.y,this},_sub:function(e){return this.x-=e.x,this.y-=e.y,this},_mult:function(e){return this.x*=e,this.y*=e,this},_div:function(e){return this.x/=e,this.y/=e,this},_multByPoint:function(e){return this.x*=e.x,this.y*=e.y,this},_divByPoint:function(e){return this.x/=e.x,this.y/=e.y,this},_unit:function(){return this._div(this.mag()),this},_perp:function(){const e=this.y;return this.y=this.x,this.x=-e,this},_rotate:function(e){const t=Math.cos(e),i=Math.sin(e),r=t*this.x-i*this.y,c=i*this.x+t*this.y;return this.x=r,this.y=c,this},_rotateAround:function(e,t){const i=Math.cos(e),r=Math.sin(e),c=t.x+i*(this.x-t.x)-r*(this.y-t.y),s=t.y+r*(this.x-t.x)+i*(this.y-t.y);return this.x=c,this.y=s,this},_round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},T.convert=function(e){return e instanceof T?e:Array.isArray(e)?new T(e[0],e[1]):e};const{supported:It,setRTLTextPlugin:Rt,getRTLTextPluginStatus:_t,NavigationControl:Ct,GeolocateControl:Ut,AttributionControl:Et,LogoControl:bt,ScaleControl:xt,FullscreenControl:Nt,TerrainControl:Pt,Popup:wt,Marker:Dt,Style:Ot,LngLat:kt,LngLatBounds:Mt,MercatorCoordinate:$t,Evented:Bt,AJAXError:Ht,CanvasSource:Vt,GeoJSONSource:Gt,ImageSource:Kt,RasterDEMTileSource:jt,RasterTileSource:Ft,VectorTileSource:zt,VideoSource:qt,prewarm:Wt,clearPrewarmedResources:Jt,version:Yt,workerCount:Zt,maxParallelImageRequests:Xt,clearStorage:Qt,workerUrl:te,addProtocol:ee,removeProtocol:ie}=S;export{Ht as AJAXError,Et as AttributionControl,Vt as CanvasSource,Bt as Evented,Nt as FullscreenControl,Gt as GeoJSONSource,Ut as GeolocateControl,H as GeolocationType,Kt as ImageSource,L as Language,he as LanguageGeocoding,kt as LngLat,Mt as LngLatBounds,bt as LogoControl,At as Map,D as MapStyle,U as MapStyleVariant,Dt as Marker,$t as MercatorCoordinate,Ct as NavigationControl,T as Point,wt as Popup,jt as RasterDEMTileSource,Ft as RasterTileSource,E as ReferenceMapStyle,xt as ScaleControl,N as SdkConfig,ue as ServiceError,Ot as Style,Pt as TerrainControl,zt as VectorTileSource,qt as VideoSource,ee as addProtocol,Jt as clearPrewarmedResources,Qt as clearStorage,g as config,ge as coordinates,pe as data,de as geocoding,me as geolocation,_t as getRTLTextPluginStatus,Xt as maxParallelImageRequests,Wt as prewarm,ie as removeProtocol,Rt as setRTLTextPlugin,ye as staticMaps,It as supported,Yt as version,Zt as workerCount,te as workerUrl};
