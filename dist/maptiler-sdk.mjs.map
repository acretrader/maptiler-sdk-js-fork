{"version":3,"file":"maptiler-sdk.mjs","sources":["../src/language.ts","../src/config.ts","../src/style.ts","../src/defaults.ts","../src/CustomLogoControl.ts","../src/tools.ts","../src/dom.ts","../src/terraincontrol.ts","../src/Map.ts","../src/Point.ts","../src/unit.ts","../src/index.ts"],"sourcesContent":["/**\n * Languages. Note that not all the languages of this list are available but the compatibility list may be expanded in the future.\n */\nconst Language = {\n  /**\n   * AUTO mode uses the language of the browser\n   */\n  AUTO: \"auto\",\n\n  /**\n   * Default fallback languages that uses latin charaters\n   */\n  LATIN: \"latin\",\n\n  /**\n   * Default fallback languages that uses non-latin charaters\n   */\n  NON_LATIN: \"nonlatin\",\n\n  /**\n   * Labels are in their local language, when available\n   */\n  LOCAL: \"\",\n\n  ALBANIAN: \"sq\",\n  AMHARIC: \"am\",\n  ARABIC: \"ar\",\n  ARMENIAN: \"hy\",\n  AZERBAIJANI: \"az\",\n  BASQUE: \"eu\",\n  BELORUSSIAN: \"be\",\n  BOSNIAN: \"bs\",\n  BRETON: \"br\",\n  BULGARIAN: \"bg\",\n  CATALAN: \"ca\",\n  CHINESE: \"zh\",\n  CORSICAN: \"co\",\n  CROATIAN: \"hr\",\n  CZECH: \"cs\",\n  DANISH: \"da\",\n  DUTCH: \"nl\",\n  ENGLISH: \"en\",\n  ESPERANTO: \"eo\",\n  ESTONIAN: \"et\",\n  FINNISH: \"fi\",\n  FRENCH: \"fr\",\n  FRISIAN: \"fy\",\n  GEORGIAN: \"ka\",\n  GERMAN: \"de\",\n  GREEK: \"el\",\n  HEBREW: \"he\",\n  HINDI: \"hi\",\n  HUNGARIAN: \"hu\",\n  ICELANDIC: \"is\",\n  INDONESIAN: \"id\",\n  IRISH: \"ga\",\n  ITALIAN: \"it\",\n  JAPANESE: \"ja\",\n  JAPANESE_HIRAGANA: \"ja-Hira\",\n  JAPANESE_KANA: \"ja_kana\",\n  JAPANESE_LATIN: \"ja_rm\",\n  JAPANESE_2018: \"ja-Latn\",\n  KANNADA: \"kn\",\n  KAZAKH: \"kk\",\n  KOREAN: \"ko\",\n  KOREAN_LATIN: \"ko-Latn\",\n  KURDISH: \"ku\",\n  ROMAN_LATIN: \"la\",\n  LATVIAN: \"lv\",\n  LITHUANIAN: \"lt\",\n  LUXEMBOURGISH: \"lb\",\n  MACEDONIAN: \"mk\",\n  MALAYALAM: \"ml\",\n  MALTESE: \"mt\",\n  NORWEGIAN: \"no\",\n  OCCITAN: \"oc\",\n  POLISH: \"pl\",\n  PORTUGUESE: \"pt\",\n  ROMANIAN: \"ro\",\n  ROMANSH: \"rm\",\n  RUSSIAN: \"ru\",\n  SCOTTISH_GAELIC: \"gd\",\n  SERBIAN_CYRILLIC: \"sr\",\n  SERBIAN_LATIN: \"sr-Latn\",\n  SLOVAK: \"sk\",\n  SLOVENE: \"sl\",\n  SPANISH: \"es\",\n  SWEDISH: \"sv\",\n  TAMIL: \"ta\",\n  TELUGU: \"te\",\n  THAI: \"th\",\n  TURKISH: \"tr\",\n  UKRAINIAN: \"uk\",\n  WELSH: \"cy\",\n} as const;\n\nconst languageCodeSet = new Set(Object.values(Language));\n\ntype Values<T> = T[keyof T];\n\n/**\n * Built-in languages values as strings\n */\ntype LanguageString = Values<typeof Language>;\n\nfunction getBrowserLanguage(): LanguageString {\n  if (typeof navigator === \"undefined\") {\n    return Intl.DateTimeFormat()\n      .resolvedOptions()\n      .locale.split(\"-\")[0] as LanguageString;\n  }\n\n  const canditatelangs = Array.from(\n    new Set(navigator.languages.map((l) => l.split(\"-\")[0]))\n  ).filter((l) => languageCodeSet.has(l as LanguageString));\n\n  return canditatelangs.length\n    ? (canditatelangs[0] as LanguageString)\n    : Language.LATIN;\n}\n\nexport { Language, LanguageString, getBrowserLanguage };\n","import { Language, LanguageString } from \"./language\";\nimport { config as clientConfig, FetchFunction } from \"@maptiler/client\";\n\n/**\n * Configuration class for the SDK\n */\nclass SdkConfig {\n  /**\n   * If `true`, some more debuf text will show. Default: `false`\n   */\n  verbose = false;\n\n  /**\n   * The primary languag. By default, the language of the web browser is used.\n   */\n  primaryLanguage: LanguageString | null = Language.AUTO;\n\n  /**\n   * The secondary language, to overwrite the default language defined in the map style.\n   * This settings is highly dependant on the style compatibility and may not work in most cases.\n   */\n  secondaryLanguage: LanguageString | null = null;\n\n  /**\n   * MapTiler Cloud API key\n   */\n  private _apiKey = \"Not defined yet.\";\n\n  /**\n   * Set the MapTiler Cloud API key\n   */\n  set apiKey(k: string) {\n    this._apiKey = k;\n    clientConfig.apiKey = k;\n  }\n\n  /**\n   * Get the MapTiler Cloud API key\n   */\n  get apiKey(): string {\n    return this._apiKey;\n  }\n\n  /**\n   * Set a the custom fetch function to replace the default one\n   */\n  set fetch(f: FetchFunction) {\n    clientConfig.fetch = f;\n  }\n\n  /**\n   * Get the fetch fucntion\n   */\n  get fetch(): FetchFunction | null {\n    return clientConfig.fetch;\n  }\n}\n\nconst config = new SdkConfig();\n\nexport { config, SdkConfig };\n","import satelliteBuiltin from \"./builtinStyles/satellite.json\";\nimport { StyleSpecification } from \"maplibre-gl\";\n\n/**\n * Built-in styles\n */\nconst MapStyle = {\n  STREETS: \"streets-v2\",\n  HYBRID: \"hybrid\",\n  SATELLITE: \"satellite\",\n  OUTDOOR: \"outdoor\",\n  BASIC: \"basic-v2\",\n  DARK: \"streets-v2-dark\",\n  LIGHT: \"streets-v2-light\",\n} as const;\n\ntype Values<T> = T[keyof T];\n\n/**\n * Built-in style values as strings\n */\ntype MapStyleString = Values<typeof MapStyle>;\n\nconst builtInStyles = {};\nbuiltInStyles[MapStyle.SATELLITE] = satelliteBuiltin;\n\nfunction isBuiltinStyle(styleId: string): boolean {\n  return styleId in builtInStyles;\n}\n\nfunction getBuiltinStyle(styleId: MapStyleString): StyleSpecification | null {\n  if (!isBuiltinStyle(styleId)) {\n    return null;\n  }\n\n  return builtInStyles[styleId];\n}\n\nexport { MapStyle, MapStyleString, isBuiltinStyle, getBuiltinStyle };\n","import { Language } from \"./language\";\nimport { MapStyle } from \"./style\";\n\n/**\n * Some default settings for the SDK\n */\nconst defaults = {\n  // When a Map is instanciated without a 'style', then this one is the default\n  mapStyle: MapStyle.STREETS,\n  maptilerLogoURL: \"https://api.maptiler.com/resources/logo.svg\",\n  maptilerURL: \"https://www.maptiler.com/\",\n  maptilerApiURL: \"https://api.maptiler.com/\",\n  rtlPluginURL:\n    \"https://cdn.maptiler.com/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.min.js\",\n  primaryLanguage: Language.LATIN,\n  secondaryLanguage: Language.NON_LATIN,\n  terrainSourceURL: \"https://api.maptiler.com/tiles/terrain-rgb/tiles.json\",\n  terrainSourceId: \"maptiler-terrain\",\n};\n\nObject.freeze(defaults);\n\nexport { defaults };\n","import * as maplibre from \"maplibre-gl\";\nimport { defaults } from \"./defaults\";\nimport { Map } from \"./Map\";\n\ntype LogoOptions = maplibre.LogoOptions & {\n  logoURL?: string;\n  linkURL?: string;\n};\n\n/**\n * This LogoControl extends the MapLibre LogoControl but instead can use any image URL and\n * any link URL. By default this is using MapTiler logo and URL.\n */\nexport class CustomLogoControl extends maplibre.LogoControl {\n  private logoURL = \"\";\n  private linkURL = \"\";\n\n  constructor(options: LogoOptions = {}) {\n    super(options);\n\n    this.logoURL = options.logoURL ?? defaults.maptilerLogoURL;\n    this.linkURL = options.linkURL ?? defaults.maptilerURL;\n  }\n\n  onAdd(map: Map): HTMLElement {\n    this._map = map;\n    this._compact = this.options && this.options.compact;\n    this._container = window.document.createElement(\"div\");\n    this._container.className = \"maplibregl-ctrl\";\n    const anchor = window.document.createElement(\"a\");\n    anchor.style.backgroundRepeat = \"no-repeat\";\n    anchor.style.cursor = \"pointer\";\n    anchor.style.display = \"block\";\n    anchor.style.height = \"23px\";\n    anchor.style.margin = \"0 0 -4px -4px\";\n    anchor.style.overflow = \"hidden\";\n    anchor.style.width = \"88px\";\n    anchor.style.backgroundImage = `url(${this.logoURL})`;\n    anchor.style.backgroundSize = \"100px 30px\";\n    anchor.style.width = \"100px\";\n    anchor.style.height = \"30px\";\n\n    anchor.target = \"_blank\";\n    anchor.rel = \"noopener nofollow\";\n    anchor.href = this.linkURL;\n    anchor.setAttribute(\n      \"aria-label\",\n      this._map._getUIString(\"LogoControl.Title\")\n    );\n    anchor.setAttribute(\"rel\", \"noopener nofollow\");\n    this._container.appendChild(anchor);\n    this._container.style.display = \"block\";\n\n    this._map.on(\"resize\", this._updateCompact);\n    this._updateCompact();\n\n    return this._container;\n  }\n}\n","import * as maplibre from \"maplibre-gl\";\nimport { config } from \"./config\";\nimport { defaults } from \"./defaults\";\n\n/**\n * Prints on console only if 'verbose' mode from the config is set to true\n * @param args\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function vlog(...args: any[]) {\n  if (config.verbose) {\n    console.log(...args);\n  }\n}\n\n/**\n * Expand the map style provided as argument of the Map constructor\n * @param style\n * @returns\n */\nexport function expandMapStyle(style): string {\n  // testing if the style provided is of form \"maptiler://some-style\"\n  const maptilerDomainRegex = /^maptiler:\\/\\/(.*)/;\n  let match;\n  const trimmed = style.trim();\n  let expandedStyle;\n\n  // The style was possibly already given as expanded URL\n  if (trimmed.startsWith(\"http://\") || trimmed.startsWith(\"https://\")) {\n    expandedStyle = trimmed;\n  } else if ((match = maptilerDomainRegex.exec(trimmed)) !== null) {\n    expandedStyle = `https://api.maptiler.com/maps/${match[1]}/style.json`;\n  } else {\n    // The style could also possibly just be the name of the style without any URI style\n    expandedStyle = `https://api.maptiler.com/maps/${trimmed}/style.json`;\n  }\n\n  return expandedStyle;\n}\n\nexport function enableRTL() {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const maplibrePackage = maplibre as any;\n  if (maplibrePackage.getRTLTextPluginStatus() === \"unavailable\") {\n    maplibrePackage.setRTLTextPlugin(\n      defaults.rtlPluginURL,\n      null,\n      true // Lazy load the plugin\n    );\n  }\n}\n","import Point from '@mapbox/point-geometry';\n\nexport class DOM {\n    private static readonly docStyle = typeof window !== 'undefined' && window.document && window.document.documentElement.style;\n\n    private static userSelect: string;\n\n    private static selectProp = DOM.testProp(['userSelect', 'MozUserSelect', 'WebkitUserSelect', 'msUserSelect']);\n\n    private static transformProp = DOM.testProp(['transform', 'WebkitTransform']);\n\n    private static testProp(props: string[]): string {\n        if (!DOM.docStyle) return props[0];\n        for (let i = 0; i < props.length; i++) {\n            if (props[i] in DOM.docStyle) {\n                return props[i];\n            }\n        }\n        return props[0];\n    }\n\n    public static create<K extends keyof HTMLElementTagNameMap>(tagName: K, className?: string, container?: HTMLElement): HTMLElementTagNameMap[K] {\n        const el = window.document.createElement(tagName);\n        if (className !== undefined) el.className = className;\n        if (container) container.appendChild(el);\n        return el;\n    }\n\n    public static createNS(namespaceURI: string, tagName: string) {\n        const el = window.document.createElementNS(namespaceURI, tagName);\n        return el;\n    }\n\n    public static disableDrag() {\n        if (DOM.docStyle && DOM.selectProp) {\n            DOM.userSelect = DOM.docStyle[DOM.selectProp];\n            DOM.docStyle[DOM.selectProp] = 'none';\n        }\n    }\n\n    public static enableDrag() {\n        if (DOM.docStyle && DOM.selectProp) {\n            DOM.docStyle[DOM.selectProp] = DOM.userSelect;\n        }\n    }\n\n    public static setTransform(el: HTMLElement, value: string) {\n        el.style[DOM.transformProp] = value;\n    }\n\n    public static addEventListener(target: any, type: any, callback: any, options: {\n        passive?: boolean;\n        capture?: boolean;\n    } = {}) {\n        if ('passive' in options) {\n            target.addEventListener(type, callback, options);\n        } else {\n            target.addEventListener(type, callback, options.capture);\n        }\n    }\n\n    public static removeEventListener(target: any, type: any, callback: any, options: {\n        passive?: boolean;\n        capture?: boolean;\n    } = {}) {\n        if ('passive' in options) {\n            target.removeEventListener(type, callback, options);\n        } else {\n            target.removeEventListener(type, callback, options.capture);\n        }\n    }\n\n    // Suppress the next click, but only if it's immediate.\n    private static suppressClickInternal(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        window.removeEventListener('click', DOM.suppressClickInternal, true);\n    }\n\n    public static suppressClick() {\n        window.addEventListener('click', DOM.suppressClickInternal, true);\n        window.setTimeout(() => {\n            window.removeEventListener('click', DOM.suppressClickInternal, true);\n        }, 0);\n    }\n\n    public static mousePos(el: HTMLElement, e: MouseEvent | Touch) {\n        const rect = el.getBoundingClientRect();\n        return new Point(\n            e.clientX - rect.left - el.clientLeft,\n            e.clientY - rect.top - el.clientTop\n        );\n    }\n\n    public static touchPos(el: HTMLElement, touches: TouchList) {\n        const rect = el.getBoundingClientRect();\n        const points: Point[] = [];\n        for (let i = 0; i < touches.length; i++) {\n            points.push(new Point(\n                touches[i].clientX - rect.left - el.clientLeft,\n                touches[i].clientY - rect.top - el.clientTop\n            ));\n        }\n        return points;\n    }\n\n    public static mouseButton(e: MouseEvent) {\n        return e.button;\n    }\n\n    public static remove(node: HTMLElement) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n}\n\nexport function bindAll(fns: Array<string>, context: any): void {\n  fns.forEach((fn) => {\n      if (!context[fn]) { return; }\n      context[fn] = context[fn].bind(context);\n  });\n}","import { DOM, bindAll } from './dom';\n\n\nimport { Map } from './map';\nimport type {IControl} from 'maplibre-gl'\n\n/**\n * An `TerrainControl` control adds a button to turn terrain on and off.\n *\n * @implements {IControl}\n * @param {Object} [options]\n * @param {string} [options.id] The ID of the raster-dem source to use.\n * @param {Object} [options.options]\n * @param {number} [options.options.exaggeration]\n * @example\n * var map = new maplibregl.Map({TerrainControl: false})\n *     .addControl(new maplibregl.TerrainControl({\n *         source: \"terrain\"\n *     }));\n */\nexport default class TerrainControl implements IControl {\n    _map: Map;\n    _container: HTMLElement;\n    _terrainButton: HTMLButtonElement;\n\n    constructor() {\n        bindAll([\n            '_toggleTerrain',\n            '_updateTerrainIcon',\n        ], this);\n    }\n\n    onAdd(map: Map) {\n        this._map = map;\n        this._container = DOM.create('div', 'maplibregl-ctrl maplibregl-ctrl-group');\n        this._terrainButton = DOM.create('button', 'maplibregl-ctrl-terrain', this._container);\n        DOM.create('span', 'maplibregl-ctrl-icon', this._terrainButton).setAttribute('aria-hidden', 'true');\n        this._terrainButton.type = 'button';\n        this._terrainButton.addEventListener('click', this._toggleTerrain);\n\n        this._updateTerrainIcon();\n        this._map.on('terrain', this._updateTerrainIcon);\n        return this._container;\n    }\n\n    onRemove() {\n        DOM.remove(this._container);\n        this._map.off('terrain', this._updateTerrainIcon);\n        this._map = undefined;\n    }\n\n    _toggleTerrain() {\n        // if (this._map.getTerrain()) {\n        //     this._map.setTerrain(null);\n        // } else {\n        //     this._map.setTerrain(this.options);\n        // }\n\n        if (this._map.hasTerrain()) {\n          this._map.disableTerrain();\n        } else {\n          this._map.enableTerrain();\n        }\n\n\n        this._updateTerrainIcon();\n    }\n\n    _updateTerrainIcon() {\n        this._terrainButton.classList.remove('maplibregl-ctrl-terrain');\n        this._terrainButton.classList.remove('maplibregl-ctrl-terrain-enabled');\n        // if (this._map.terrain) {\n        if (this._map.hasTerrain()) {\n            this._terrainButton.classList.add('maplibregl-ctrl-terrain-enabled');\n            this._terrainButton.title = this._map._getUIString('TerrainControl.disableTerrain');\n        } else {\n            this._terrainButton.classList.add('maplibregl-ctrl-terrain');\n            this._terrainButton.title = this._map._getUIString('TerrainControl.enableTerrain');\n        }\n    }\n}","import * as maplibre from \"maplibre-gl\";\nimport { config } from \"./config\";\nimport { defaults } from \"./defaults\";\nimport { CustomLogoControl } from \"./CustomLogoControl\";\nimport { enableRTL, expandMapStyle, vlog } from \"./tools\";\nimport { getBrowserLanguage, Language, LanguageString } from \"./language\";\nimport { isBuiltinStyle, getBuiltinStyle, MapStyleString } from \"./style\";\nimport { GeolocateControl } from \"maplibre-gl\";\nimport TerrainControl from \"./terraincontrol\";\n\n// StyleSwapOptions is not exported by Maplibre, but we can redefine it (used for setStyle)\nexport type TransformStyleFunction = (\n  previous: maplibre.StyleSpecification,\n  next: maplibre.StyleSpecification\n) => maplibre.StyleSpecification;\n\nexport type StyleSwapOptions = {\n  diff?: boolean;\n  transformStyle?: TransformStyleFunction;\n};\n\n/**\n * Options to provide to the `Map` constructor\n */\nexport type MapOptions = Omit<maplibre.MapOptions, \"style\" | \"maplibreLogo\"> & {\n  /**\n   * Style of the map. Can be:\n   * - a full style URL (possibly with API key)\n   * - a shorthand with only the MapTIler style name (eg. `\"streets-v2\"`)\n   * - a longer form with the prefix `\"maptiler://\"` (eg. `\"maptiler://streets-v2\"`)\n   */\n  style?: string;\n\n  /**\n   * Shows the MapTiler logo if `true`. Note that the logo is always displayed on free plan.\n   */\n  maptilerLogo?: boolean;\n\n  /**\n   * Enables 3D terrain if `true`. (default: `false`)\n   */\n  terrain?: boolean;\n\n  /**\n   * Exaggeration factor of the terrain. (default: `1`, no exaggeration)\n   */\n  terrainExaggeration?: number;\n\n  /**\n   * Show the navigation control. (default: `true`, will hide if `false`)\n   */\n  navigationControl?: boolean | maplibre.ControlPosition;\n\n\n  /**\n   * Show the terrain control. (default: `true`, will hide if `false`)\n   */\n   terrainControl?: boolean | maplibre.ControlPosition;\n};\n\n/**\n * The Map class can be instanciated to display a map in a `<div>`\n */\nexport class Map extends maplibre.Map {\n  private languageShouldUpdate = false;\n  private isStyleInitialized = false;\n  private isTerrainEnabled = false;\n  private terrainExaggeration = 1;\n\n  constructor(options: MapOptions) {\n    let style;\n\n    if (\"style\" in options) {\n      if (typeof style === \"string\" && isBuiltinStyle(style)) {\n        style = getBuiltinStyle(style as MapStyleString);\n      } else if (typeof style === \"string\") {\n        style = expandMapStyle(style);\n      } else {\n        style = options.style;\n      }\n    } else {\n      style = expandMapStyle(defaults.mapStyle);\n      vlog(`Map style not provided, backing up to ${defaults.mapStyle}`);\n    }\n\n    // calling the map constructor with full length style\n    super({\n      ...options,\n      style,\n      maplibreLogo: false,\n\n      transformRequest: (url: string, resourceType: any) => {\n        const reqUrl = new URL(url);\n\n        if (!reqUrl.searchParams.has(\"key\")) {\n          reqUrl.searchParams.append(\"key\", config.apiKey);\n        }\n\n        return {\n          url: reqUrl.href,\n          headers: {},\n        };\n      },\n    });\n\n    // Check if language has been modified and. If so, it will be updated during the next lifecycle step\n    this.on(\"styledataloading\", () => {\n      this.languageShouldUpdate =\n        !!config.primaryLanguage || !!config.secondaryLanguage;\n    });\n\n    // If the config includes language changing, we must update the map language\n    this.on(\"styledata\", () => {\n      if (\n        config.primaryLanguage &&\n        (this.languageShouldUpdate || !this.isStyleInitialized)\n      ) {\n        this.setPrimaryLanguage(config.primaryLanguage);\n      }\n\n      if (\n        config.secondaryLanguage &&\n        (this.languageShouldUpdate || !this.isStyleInitialized)\n      ) {\n        this.setSecondaryLanguage(config.secondaryLanguage);\n      }\n\n      this.languageShouldUpdate = false;\n      this.isStyleInitialized = true;\n    });\n\n    // this even is in charge of reaplying the terrain elevation after the\n    // style has changed because depending on the src/tgt style,\n    // the style logic is not always able to resolve the application of terrain\n    this.on(\"styledata\", () => {\n      // the styling resolver did no manage to reaply the terrain,\n      // so let's reload it\n      if (this.getTerrain() === null && this.isTerrainEnabled) {\n        this.enableTerrain(this.terrainExaggeration);\n      }\n    });\n\n    // load the Right-to-Left text plugin (will happen only once)\n    this.once(\"load\", async () => {\n      enableRTL();\n    });\n\n    // Update logo and attibution\n    this.once(\"load\", async () => {\n      let tileJsonURL = null;\n      try {\n        tileJsonURL = (\n          this.getSource(\"openmaptiles\") as maplibre.VectorTileSource\n        ).url;\n      } catch (e) {\n        return;\n      }\n\n      const tileJsonRes = await fetch(tileJsonURL);\n      const tileJsonContent = await tileJsonRes.json();\n\n      // The attribution and logo must show when required\n      if (\"logo\" in tileJsonContent && tileJsonContent.logo) {\n        const logoURL: string = tileJsonContent.logo;\n\n        this.addControl(\n          new CustomLogoControl({ logoURL }),\n          options.logoPosition\n        );\n\n        // if attribution in option is `false` but the the logo shows up in the tileJson, then the attribution must show anyways\n        if (options.attributionControl === false) {\n          this.addControl(new maplibre.AttributionControl(options));\n        }\n      } else if (options.maptilerLogo) {\n        this.addControl(new CustomLogoControl(), options.logoPosition);\n      }\n\n      // the other controls at init time but be after\n      // (due to the async nature of logo control)\n      if (options.navigationControl !== false) {\n        // default position, if not provided, is top left corner\n        const position = (\n          options.navigationControl === true ||\n          options.navigationControl === undefined\n            ? \"top-right\"\n            : options.navigationControl\n        ) as maplibre.ControlPosition;\n        this.addControl(\n          new maplibre.NavigationControl({\n            showCompass: true,\n            showZoom: true,\n            visualizePitch: true,\n          }),\n          position\n        );\n  \n        this.addControl(new GeolocateControl({}), position);\n      }\n  \n      if (options.terrainControl !== false) {\n        // default position, if not provided, is top left corner\n        const position = (\n          options.terrainControl === true ||\n          options.terrainControl === undefined\n            ? \"top-right\"\n            : options.terrainControl\n        ) as maplibre.ControlPosition;\n        this.addControl(new TerrainControl(), position);\n      }\n    });\n\n\n    // enable 3D terrain if provided in options\n    if (options.terrain) {\n      this.enableTerrain(options.terrainExaggeration ?? this.terrainExaggeration);\n    }\n\n  }\n\n  /**\n   * Update the style of the map.\n   * Can be:\n   * - a full style URL (possibly with API key)\n   * - a shorthand with only the MapTIler style name (eg. `\"streets-v2\"`)\n   * - a longer form with the prefix `\"maptiler://\"` (eg. `\"maptiler://streets-v2\"`)\n   * @param style\n   * @param options\n   * @returns\n   */\n  setStyle(\n    style: maplibre.StyleSpecification | string | null,\n    options?: StyleSwapOptions & maplibre.StyleOptions\n  ) {\n    let tempStyle = style;\n\n    if (typeof style === \"string\" && isBuiltinStyle(style)) {\n      tempStyle = getBuiltinStyle(style as MapStyleString);\n    } else if (typeof style === \"string\") {\n      tempStyle = expandMapStyle(style);\n    }\n\n    return super.setStyle(tempStyle, options);\n  }\n\n  /**\n   * Define the primary language of the map. Note that not all the languages shorthands provided are available.\n   * This function is a short for `.setPrimaryLanguage()`\n   * @param language\n   */\n  setLanguage(language: LanguageString = defaults.primaryLanguage) {\n    if (language === Language.AUTO) {\n      return this.setLanguage(getBrowserLanguage());\n    }\n    this.setPrimaryLanguage(language);\n  }\n\n\n  \n\n\n  /**\n   * Define the primary language of the map. Note that not all the languages shorthands provided are available.\n   * @param language\n   */\n  setPrimaryLanguage(language: LanguageString = defaults.primaryLanguage) {\n    if (language === Language.AUTO) {\n      return this.setPrimaryLanguage(getBrowserLanguage());\n    }\n\n    // We want to keep track of it to apply the language again when changing the style\n    config.primaryLanguage = language;\n\n    const layers = this.getStyle().layers;\n\n    // detects pattern like \"{name:somelanguage}\" with loose spacing\n    const strLanguageRegex = /^\\s*{\\s*name\\s*(:\\s*(\\S*))?\\s*}$/;\n\n    // detects pattern like \"name:somelanguage\" with loose spacing\n    const strLanguageInArrayRegex = /^\\s*name\\s*(:\\s*(\\S*))?\\s*$/;\n\n    // for string based bilingual lang such as \"{name:latin}  {name:nonlatin}\" or \"{name:latin}  {name}\"\n    const strBilingualRegex =\n      /^\\s*{\\s*name\\s*(:\\s*(\\S*))?\\s*}(\\s*){\\s*name\\s*(:\\s*(\\S*))?\\s*}$/;\n\n    // Regex to capture when there are more info, such as mountains elevation with unit m/ft\n    const strMoreInfoRegex = /^(.*)({\\s*name\\s*(:\\s*(\\S*))?\\s*})(.*)$/;\n\n    const langStr = language ? `name:${language}` : \"name\"; // to handle local lang\n    const replacer = [\n      \"case\",\n      [\"has\", langStr],\n      [\"get\", langStr],\n      [\"get\", \"name:latin\"],\n    ];\n\n    for (let i = 0; i < layers.length; i += 1) {\n      const layer = layers[i];\n      const layout = layer.layout;\n\n      if (!layout) {\n        continue;\n      }\n\n      if (!layout[\"text-field\"]) {\n        continue;\n      }\n\n      const textFieldLayoutProp = this.getLayoutProperty(\n        layer.id,\n        \"text-field\"\n      );\n\n      // Note:\n      // The value of the 'text-field' property can take multiple shape;\n      // 1. can be an array with 'concat' on its first element (most likely means bilingual)\n      // 2. can be an array with 'get' on its first element (monolingual)\n      // 3. can be a string of shape '{name:latin}'\n      // 4. can be a string referencing another prop such as '{housenumber}' or '{ref}'\n      //\n      // The case 1, 2 and 3 will be updated while maintaining their original type and shape.\n      // The case 3 will not be updated\n\n      let regexMatch;\n\n      // This is case 1\n      if (\n        Array.isArray(textFieldLayoutProp) &&\n        textFieldLayoutProp.length >= 2 &&\n        textFieldLayoutProp[0].trim().toLowerCase() === \"concat\"\n      ) {\n        const newProp = textFieldLayoutProp.slice(); // newProp is Array\n        // The style could possibly have defined more than 2 concatenated language strings but we only want to edit the first\n        // The style could also define that there are more things being concatenated and not only languages\n\n        for (let j = 0; j < textFieldLayoutProp.length; j += 1) {\n          const elem = textFieldLayoutProp[j];\n\n          // we are looking for an elem of shape '{name:somelangage}' (string) of `[\"get\", \"name:somelanguage\"]` (array)\n\n          // the entry of of shape '{name:somelangage}', possibly with loose spacing\n          if (\n            (typeof elem === \"string\" || elem instanceof String) &&\n            strLanguageRegex.exec(elem.toString())\n          ) {\n            newProp[j] = replacer;\n            break; // we just want to update the primary language\n          }\n          // the entry is of an array of shape `[\"get\", \"name:somelanguage\"]`\n          else if (\n            Array.isArray(elem) &&\n            elem.length >= 2 &&\n            elem[0].trim().toLowerCase() === \"get\" &&\n            strLanguageInArrayRegex.exec(elem[1].toString())\n          ) {\n            newProp[j] = replacer;\n            break; // we just want to update the primary language\n          } else if (\n            Array.isArray(elem) &&\n            elem.length === 4 &&\n            elem[0].trim().toLowerCase() === \"case\"\n          ) {\n            newProp[j] = replacer;\n            break; // we just want to update the primary language\n          }\n        }\n\n        this.setLayoutProperty(layer.id, \"text-field\", newProp);\n      }\n\n      // This is case 2\n      else if (\n        Array.isArray(textFieldLayoutProp) &&\n        textFieldLayoutProp.length >= 2 &&\n        textFieldLayoutProp[0].trim().toLowerCase() === \"get\" &&\n        strLanguageInArrayRegex.exec(textFieldLayoutProp[1].toString())\n      ) {\n        const newProp = replacer;\n        this.setLayoutProperty(layer.id, \"text-field\", newProp);\n      }\n\n      // This is case 3\n      else if (\n        (typeof textFieldLayoutProp === \"string\" ||\n          textFieldLayoutProp instanceof String) &&\n        strLanguageRegex.exec(textFieldLayoutProp.toString())\n      ) {\n        const newProp = replacer;\n        this.setLayoutProperty(layer.id, \"text-field\", newProp);\n      } else if (\n        Array.isArray(textFieldLayoutProp) &&\n        textFieldLayoutProp.length === 4 &&\n        textFieldLayoutProp[0].trim().toLowerCase() === \"case\"\n      ) {\n        const newProp = replacer;\n        this.setLayoutProperty(layer.id, \"text-field\", newProp);\n      } else if (\n        (typeof textFieldLayoutProp === \"string\" ||\n          textFieldLayoutProp instanceof String) &&\n        (regexMatch = strBilingualRegex.exec(\n          textFieldLayoutProp.toString()\n        )) !== null\n      ) {\n        const newProp = `{${langStr}}${regexMatch[3]}{name${\n          regexMatch[4] || \"\"\n        }}`;\n        this.setLayoutProperty(layer.id, \"text-field\", newProp);\n      } else if (\n        (typeof textFieldLayoutProp === \"string\" ||\n          textFieldLayoutProp instanceof String) &&\n        (regexMatch = strMoreInfoRegex.exec(textFieldLayoutProp.toString())) !==\n          null\n      ) {\n        const newProp = `${regexMatch[1]}{${langStr}}${regexMatch[5]}`;\n        this.setLayoutProperty(layer.id, \"text-field\", newProp);\n      }\n    }\n  }\n\n  /**\n   * Define the secondary language of the map.\n   * Note that most styles do not allow a secondary language and this function only works if the style allows (no force adding)\n   * @param language\n   */\n  setSecondaryLanguage(language: LanguageString = defaults.secondaryLanguage) {\n    if (language === Language.AUTO) {\n      return this.setSecondaryLanguage(getBrowserLanguage());\n    }\n\n    // We want to keep track of it to apply the language again when changing the style\n    config.secondaryLanguage = language;\n\n    const layers = this.getStyle().layers;\n\n    // detects pattern like \"{name:somelanguage}\" with loose spacing\n    const strLanguageRegex = /^\\s*{\\s*name\\s*(:\\s*(\\S*))?\\s*}$/;\n\n    // detects pattern like \"name:somelanguage\" with loose spacing\n    const strLanguageInArrayRegex = /^\\s*name\\s*(:\\s*(\\S*))?\\s*$/;\n\n    // for string based bilingual lang such as \"{name:latin}  {name:nonlatin}\" or \"{name:latin}  {name}\"\n    const strBilingualRegex =\n      /^\\s*{\\s*name\\s*(:\\s*(\\S*))?\\s*}(\\s*){\\s*name\\s*(:\\s*(\\S*))?\\s*}$/;\n\n    let regexMatch;\n\n    for (let i = 0; i < layers.length; i += 1) {\n      const layer = layers[i];\n      const layout = layer.layout;\n\n      if (!layout) {\n        continue;\n      }\n\n      if (!layout[\"text-field\"]) {\n        continue;\n      }\n\n      const textFieldLayoutProp = this.getLayoutProperty(\n        layer.id,\n        \"text-field\"\n      );\n\n      let newProp;\n\n      // Note:\n      // The value of the 'text-field' property can take multiple shape;\n      // 1. can be an array with 'concat' on its first element (most likely means bilingual)\n      // 2. can be an array with 'get' on its first element (monolingual)\n      // 3. can be a string of shape '{name:latin}'\n      // 4. can be a string referencing another prop such as '{housenumber}' or '{ref}'\n      //\n      // Only the case 1 will be updated because we don't want to change the styling (read: add a secondary language where the original styling is only displaying 1)\n\n      // This is case 1\n      if (\n        Array.isArray(textFieldLayoutProp) &&\n        textFieldLayoutProp.length >= 2 &&\n        textFieldLayoutProp[0].trim().toLowerCase() === \"concat\"\n      ) {\n        newProp = textFieldLayoutProp.slice(); // newProp is Array\n        // The style could possibly have defined more than 2 concatenated language strings but we only want to edit the first\n        // The style could also define that there are more things being concatenated and not only languages\n\n        let languagesAlreadyFound = 0;\n\n        for (let j = 0; j < textFieldLayoutProp.length; j += 1) {\n          const elem = textFieldLayoutProp[j];\n\n          // we are looking for an elem of shape '{name:somelangage}' (string) of `[\"get\", \"name:somelanguage\"]` (array)\n\n          // the entry of of shape '{name:somelangage}', possibly with loose spacing\n          if (\n            (typeof elem === \"string\" || elem instanceof String) &&\n            strLanguageRegex.exec(elem.toString())\n          ) {\n            if (languagesAlreadyFound === 1) {\n              newProp[j] = `{name:${language}}`;\n              break; // we just want to update the secondary language\n            }\n\n            languagesAlreadyFound += 1;\n          }\n          // the entry is of an array of shape `[\"get\", \"name:somelanguage\"]`\n          else if (\n            Array.isArray(elem) &&\n            elem.length >= 2 &&\n            elem[0].trim().toLowerCase() === \"get\" &&\n            strLanguageInArrayRegex.exec(elem[1].toString())\n          ) {\n            if (languagesAlreadyFound === 1) {\n              newProp[j][1] = `name:${language}`;\n              break; // we just want to update the secondary language\n            }\n\n            languagesAlreadyFound += 1;\n          } else if (\n            Array.isArray(elem) &&\n            elem.length === 4 &&\n            elem[0].trim().toLowerCase() === \"case\"\n          ) {\n            if (languagesAlreadyFound === 1) {\n              newProp[j] = [\"get\", `name:${language}`]; // the situation with 'case' is supposed to only happen with the primary lang\n              break; // but in case a styling also does that for secondary...\n            }\n\n            languagesAlreadyFound += 1;\n          }\n        }\n\n        this.setLayoutProperty(layer.id, \"text-field\", newProp);\n      }\n\n      // the language (both first and second) are defined into a single string model\n      else if (\n        (typeof textFieldLayoutProp === \"string\" ||\n          textFieldLayoutProp instanceof String) &&\n        (regexMatch = strBilingualRegex.exec(\n          textFieldLayoutProp.toString()\n        )) !== null\n      ) {\n        const langStr = language ? `name:${language}` : \"name\"; // to handle local lang\n        newProp = `{name${regexMatch[1] || \"\"}}${regexMatch[3]}{${langStr}}`;\n        this.setLayoutProperty(layer.id, \"text-field\", newProp);\n      }\n    }\n  }\n\n\n  /**\n   * Get the exaggeration factor applied to the terrain\n   * @returns \n   */\n  getTerrainExaggeration(): number {\n    return this.terrainExaggeration;\n  }\n\n\n  /**\n   * Know if terrian is enabled or not\n   * @returns \n   */\n   hasTerrain(): boolean {\n    return this.isTerrainEnabled;\n  }\n\n\n  /**\n   * Enables the 3D terrain visualization\n   * @param exaggeration\n   * @returns\n   */\n  enableTerrain(exaggeration = this.terrainExaggeration) {\n    const terrainInfo = this.getTerrain();\n\n    const addTerrain = () => {\n      // When style is changed,\n      this.isTerrainEnabled = true;\n      this.terrainExaggeration = exaggeration;\n\n      this.addSource(defaults.terrainSourceId, {\n        type: \"raster-dem\",\n        url: defaults.terrainSourceURL,\n      });\n      this.setTerrain({\n        source: defaults.terrainSourceId,\n        exaggeration: exaggeration,\n      });\n    };\n\n    // The terrain has already been loaded,\n    // we just update the exaggeration.\n    if (terrainInfo) {\n      this.setTerrain({ ...terrainInfo, exaggeration });\n      return;\n    }\n\n    if (this.loaded() || this.isTerrainEnabled) {\n      addTerrain();\n    } else {\n      this.once(\"load\", () => {\n        if (this.getTerrain() && this.getSource(defaults.terrainSourceId)) {\n          return;\n        }\n        addTerrain();\n      });\n    }\n  }\n\n  /**\n   * Disable the 3D terrain visualization\n   */\n  disableTerrain() {\n    this.isTerrainEnabled = false;\n    this.setTerrain(null);\n    if (this.getSource(defaults.terrainSourceId)) {\n      this.removeSource(defaults.terrainSourceId);\n    }\n  }\n\n  /**\n   * Sets the 3D terrain exageration factor.\n   * Note: this is only a shortcut to `.enableTerrain()`\n   * @param exaggeration\n   */\n  setTerrainExaggeration(exaggeration: number) {\n    this.enableTerrain(exaggeration);\n  }\n\n  // getLanguages() {\n  //   const layers = this.getStyle().layers;\n\n  //   for (let i = 0; i < layers.length; i += 1) {\n  //     const layer = layers[i];\n  //     const layout = layer.layout;\n\n  //     if (!layout) {\n  //       continue;\n  //     }\n\n  //     if (!layout[\"text-field\"]) {\n  //       continue;\n  //     }\n\n  //     const textFieldLayoutProp = this.getLayoutProperty(\n  //       layer.id,\n  //       \"text-field\"\n  //     );\n  //   }\n  // }\n}\n","// This comes from https://github.com/mapbox/point-geometry\n// but was newver made a ES module, yet is necesasry to expose\n// objects that are compliant with MapLibre\n\n/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);\n */\nfunction Point(x, y) {\n  this.x = x;\n  this.y = y;\n}\n\nPoint.prototype = {\n  /**\n   * Clone this point, returning a new point that can be modified\n   * without affecting the old one.\n   * @return {Point} the clone\n   */\n  clone: function () {\n    return new Point(this.x, this.y);\n  },\n\n  /**\n   * Add this point's x & y coordinates to another point,\n   * yielding a new point.\n   * @param {Point} p the other point\n   * @return {Point} output point\n   */\n  add: function (p) {\n    return this.clone()._add(p);\n  },\n\n  /**\n   * Subtract this point's x & y coordinates to from point,\n   * yielding a new point.\n   * @param {Point} p the other point\n   * @return {Point} output point\n   */\n  sub: function (p) {\n    return this.clone()._sub(p);\n  },\n\n  /**\n   * Multiply this point's x & y coordinates by point,\n   * yielding a new point.\n   * @param {Point} p the other point\n   * @return {Point} output point\n   */\n  multByPoint: function (p) {\n    return this.clone()._multByPoint(p);\n  },\n\n  /**\n   * Divide this point's x & y coordinates by point,\n   * yielding a new point.\n   * @param {Point} p the other point\n   * @return {Point} output point\n   */\n  divByPoint: function (p) {\n    return this.clone()._divByPoint(p);\n  },\n\n  /**\n   * Multiply this point's x & y coordinates by a factor,\n   * yielding a new point.\n   * @param {Number} k factor\n   * @return {Point} output point\n   */\n  mult: function (k) {\n    return this.clone()._mult(k);\n  },\n\n  /**\n   * Divide this point's x & y coordinates by a factor,\n   * yielding a new point.\n   * @param {Point} k factor\n   * @return {Point} output point\n   */\n  div: function (k) {\n    return this.clone()._div(k);\n  },\n\n  /**\n   * Rotate this point around the 0, 0 origin by an angle a,\n   * given in radians\n   * @param {Number} a angle to rotate around, in radians\n   * @return {Point} output point\n   */\n  rotate: function (a) {\n    return this.clone()._rotate(a);\n  },\n\n  /**\n   * Rotate this point around p point by an angle a,\n   * given in radians\n   * @param {Number} a angle to rotate around, in radians\n   * @param {Point} p Point to rotate around\n   * @return {Point} output point\n   */\n  rotateAround: function (a, p) {\n    return this.clone()._rotateAround(a, p);\n  },\n\n  /**\n   * Multiply this point by a 4x1 transformation matrix\n   * @param {Array<Number>} m transformation matrix\n   * @return {Point} output point\n   */\n  matMult: function (m) {\n    return this.clone()._matMult(m);\n  },\n\n  /**\n   * Calculate this point but as a unit vector from 0, 0, meaning\n   * that the distance from the resulting point to the 0, 0\n   * coordinate will be equal to 1 and the angle from the resulting\n   * point to the 0, 0 coordinate will be the same as before.\n   * @return {Point} unit vector point\n   */\n  unit: function () {\n    return this.clone()._unit();\n  },\n\n  /**\n   * Compute a perpendicular point, where the new y coordinate\n   * is the old x coordinate and the new x coordinate is the old y\n   * coordinate multiplied by -1\n   * @return {Point} perpendicular point\n   */\n  perp: function () {\n    return this.clone()._perp();\n  },\n\n  /**\n   * Return a version of this point with the x & y coordinates\n   * rounded to integers.\n   * @return {Point} rounded point\n   */\n  round: function () {\n    return this.clone()._round();\n  },\n\n  /**\n   * Return the magnitude of this point: this is the Euclidean\n   * distance from the 0, 0 coordinate to this point's x and y\n   * coordinates.\n   * @return {Number} magnitude\n   */\n  mag: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  },\n\n  /**\n   * Judge whether this point is equal to another point, returning\n   * true or false.\n   * @param {Point} other the other point\n   * @return {boolean} whether the points are equal\n   */\n  equals: function (other) {\n    return this.x === other.x && this.y === other.y;\n  },\n\n  /**\n   * Calculate the distance from this point to another point\n   * @param {Point} p the other point\n   * @return {Number} distance\n   */\n  dist: function (p) {\n    return Math.sqrt(this.distSqr(p));\n  },\n\n  /**\n   * Calculate the distance from this point to another point,\n   * without the square root step. Useful if you're comparing\n   * relative distances.\n   * @param {Point} p the other point\n   * @return {Number} distance\n   */\n  distSqr: function (p) {\n    const dx = p.x - this.x,\n      dy = p.y - this.y;\n    return dx * dx + dy * dy;\n  },\n\n  /**\n   * Get the angle from the 0, 0 coordinate to this point, in radians\n   * coordinates.\n   * @return {Number} angle\n   */\n  angle: function () {\n    return Math.atan2(this.y, this.x);\n  },\n\n  /**\n   * Get the angle from this point to another point, in radians\n   * @param {Point} b the other point\n   * @return {Number} angle\n   */\n  angleTo: function (b) {\n    return Math.atan2(this.y - b.y, this.x - b.x);\n  },\n\n  /**\n   * Get the angle between this point and another point, in radians\n   * @param {Point} b the other point\n   * @return {Number} angle\n   */\n  angleWith: function (b) {\n    return this.angleWithSep(b.x, b.y);\n  },\n\n  /*\n   * Find the angle of the two vectors, solving the formula for\n   * the cross product a x b = |a||b|sin(θ) for θ.\n   * @param {Number} x the x-coordinate\n   * @param {Number} y the y-coordinate\n   * @return {Number} the angle in radians\n   */\n  angleWithSep: function (x, y) {\n    return Math.atan2(this.x * y - this.y * x, this.x * x + this.y * y);\n  },\n\n  _matMult: function (m) {\n    const x = m[0] * this.x + m[1] * this.y,\n      y = m[2] * this.x + m[3] * this.y;\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n\n  _add: function (p) {\n    this.x += p.x;\n    this.y += p.y;\n    return this;\n  },\n\n  _sub: function (p) {\n    this.x -= p.x;\n    this.y -= p.y;\n    return this;\n  },\n\n  _mult: function (k) {\n    this.x *= k;\n    this.y *= k;\n    return this;\n  },\n\n  _div: function (k) {\n    this.x /= k;\n    this.y /= k;\n    return this;\n  },\n\n  _multByPoint: function (p) {\n    this.x *= p.x;\n    this.y *= p.y;\n    return this;\n  },\n\n  _divByPoint: function (p) {\n    this.x /= p.x;\n    this.y /= p.y;\n    return this;\n  },\n\n  _unit: function () {\n    this._div(this.mag());\n    return this;\n  },\n\n  _perp: function () {\n    const y = this.y;\n    this.y = this.x;\n    this.x = -y;\n    return this;\n  },\n\n  _rotate: function (angle) {\n    const cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      x = cos * this.x - sin * this.y,\n      y = sin * this.x + cos * this.y;\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n\n  _rotateAround: function (angle, p) {\n    const cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n      y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n\n  _round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  },\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<number> | Point} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (a) {\n  if (a instanceof Point) {\n    return a;\n  }\n  if (Array.isArray(a)) {\n    return new Point(a[0], a[1]);\n  }\n  return a;\n};\n\nexport { Point };\n","enum Unit {\n  METRIC,\n  IMPERIAL,\n}\n\nexport { Unit };\n","/**\n * Maplibre export first, then extensions can overload the exports.\n */\nexport * from \"maplibre-gl\";\n\n/**\n * To perform explicit named export so that they are included in the UMD bundle\n */\nimport * as ML from \"maplibre-gl\";\n\nconst supported = ML.default.supported;\nconst setRTLTextPlugin = ML.default.setRTLTextPlugin;\nconst getRTLTextPluginStatus = ML.default.getRTLTextPluginStatus;\n// const Map = ML.default.Map; // replaced by MapTiler's Map class\nconst NavigationControl = ML.default.NavigationControl;\nconst GeolocateControl = ML.default.GeolocateControl;\nconst AttributionControl = ML.default.AttributionControl;\nconst LogoControl = ML.default.LogoControl;\nconst ScaleControl = ML.default.ScaleControl;\nconst FullscreenControl = ML.default.FullscreenControl;\nconst TerrainControl = ML.default.TerrainControl;\nconst Popup = ML.default.Popup;\nconst Marker = ML.default.Marker;\nconst Style = ML.default.Style;\nconst LngLat = ML.default.LngLat;\nconst LngLatBounds = ML.default.LngLatBounds;\n// const Point = ML.default.Point; // replaced by actual ES module in ./Point.ts\nconst MercatorCoordinate = ML.default.MercatorCoordinate;\nconst Evented = ML.default.Evented;\nconst AJAXError = ML.default.AJAXError;\n// const config = ML.default.config; // replaced by MapTiler's config\nconst CanvasSource = ML.default.CanvasSource;\nconst GeoJSONSource = ML.default.GeoJSONSource;\nconst ImageSource = ML.default.ImageSource;\nconst RasterDEMTileSource = ML.default.RasterDEMTileSource;\nconst RasterTileSource = ML.default.RasterTileSource;\nconst VectorTileSource = ML.default.VectorTileSource;\nconst VideoSource = ML.default.VideoSource;\nconst prewarm = ML.default.prewarm;\nconst clearPrewarmedResources = ML.default.clearPrewarmedResources;\nconst version = ML.default.version;\nconst workerCount = ML.default.workerCount;\nconst maxParallelImageRequests = ML.default.maxParallelImageRequests;\nconst clearStorage = ML.default.clearStorage;\nconst workerUrl = ML.default.workerUrl;\nconst addProtocol = ML.default.addProtocol;\nconst removeProtocol = ML.default.removeProtocol;\n// const isSafari = ML.default.isSafari;\n// const getPerformanceMetrics = ML.default.getPerformanceMetrics;\n\nexport {\n  supported,\n  setRTLTextPlugin,\n  getRTLTextPluginStatus,\n  // Map,\n  NavigationControl,\n  GeolocateControl,\n  AttributionControl,\n  LogoControl,\n  ScaleControl,\n  FullscreenControl,\n  TerrainControl,\n  Popup,\n  Marker,\n  Style,\n  LngLat,\n  LngLatBounds,\n  // Point,\n  MercatorCoordinate,\n  Evented,\n  AJAXError,\n  // config,\n  CanvasSource,\n  GeoJSONSource,\n  ImageSource,\n  RasterDEMTileSource,\n  RasterTileSource,\n  VectorTileSource,\n  VideoSource,\n  prewarm,\n  clearPrewarmedResources,\n  version,\n  workerCount,\n  maxParallelImageRequests,\n  clearStorage,\n  workerUrl,\n  addProtocol,\n  removeProtocol,\n  // isSafari,\n  // getPerformanceMetrics\n};\n\nimport { Map } from \"./Map\";\nimport type { MapOptions } from \"./Map\";\n\n// importing client functions to expose them as part of the SDK\nimport type {\n  Bbox,\n  // LngLat,\n  LngLatArray,\n  GeocodingOptions,\n  CoordinatesSearchOptions,\n  CenteredStaticMapOptions,\n  AutomaticStaticMapOptions,\n  BoundedStaticMapOptions,\n} from \"@maptiler/client\";\n\nimport {\n  geocoding,\n  geolocation,\n  coordinates,\n  data,\n  staticMaps,\n  ServiceError,\n  LanguageGeocoding,\n  LanguageGeocodingString,\n} from \"@maptiler/client\";\n\nimport { Point } from \"./Point\";\n\n// Importing enums and configs\nimport { config, SdkConfig } from \"./config\";\nimport { Language, LanguageString } from \"./language\";\nimport { Unit } from \"./unit\";\nimport { MapStyle, MapStyleString } from \"./style\";\n\n// Exporting types\nexport type {\n  // LngLat,\n  LngLatArray,\n  MapOptions,\n  GeocodingOptions,\n  Bbox,\n  CoordinatesSearchOptions,\n  CenteredStaticMapOptions,\n  BoundedStaticMapOptions,\n  AutomaticStaticMapOptions,\n  LanguageString,\n  LanguageGeocodingString,\n  MapStyleString,\n};\n\n// Exporting classes, objects, functions, etc.\nexport {\n  Map,\n  SdkConfig,\n  config,\n  ServiceError,\n  geocoding,\n  geolocation,\n  coordinates,\n  data,\n  staticMaps,\n  Unit,\n  MapStyle,\n  Language,\n  LanguageGeocoding,\n  Point,\n};\n"],"names":["clientConfig","maplibre","Point","TerrainControl","GeolocateControl","Unit"],"mappings":"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"}