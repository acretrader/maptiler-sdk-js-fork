{"version":3,"file":"maptiler.mjs","sources":["../src/LngLat.ts","../src/config.ts","../src/Map.ts"],"sourcesContent":["import * as maplibre from 'maplibre-gl'\n\nexport default class  LngLat extends maplibre.LngLat {\n  constructor(lng: number, lat: number) {\n    super(lng, lat);\n  }\n\n  setToNull(): void {\n    this.lng = 0;\n    this.lat = 0;\n  }\n}","interface ConfigInterface {\n  accessToken: string,\n}\n\nconst config: ConfigInterface = {\n  accessToken: 'Not defined yet.',\n}\n\nexport { config };","import * as maplibre from 'maplibre-gl';\nimport { StyleSpecification } from 'maplibre-gl';\nimport { config } from './config';\n\nexport const maptilerStyles = {\n  'basic': 'https://api.maptiler.com/maps/basic-v2/style.json',\n  'bright': 'https://api.maptiler.com/maps/bright/style.json',\n  'openstreetmap': 'https://api.maptiler.com/maps/openstreetmap/style.json',\n  'outdoor': 'https://api.maptiler.com/maps/outdoor/style.json',\n  'pastel': 'https://api.maptiler.com/maps/pastel/style.json',\n  'satellite Hybrid': 'https://api.maptiler.com/maps/hybrid/style.json',\n  'streets': 'https://api.maptiler.com/maps/streets/style.json',\n  'toner': 'https://api.maptiler.com/maps/toner/style.json',\n  'topo': 'https://api.maptiler.com/maps/topo/style.json',\n  'topographique': 'https://api.maptiler.com/maps/topographique/style.json',\n  'voyager': 'https://api.maptiler.com/maps/voyager/style.json',\n  'winter': 'https://api.maptiler.com/maps/winter/style.json',\n}\n\n\nexport default class  Map extends maplibre.Map {\n  constructor(options: maplibre.MapOptions) { \n\n    console.log('hello'); \n    \n    \n    // the style, possibly a shorthand\n    let style = (options.style as string).trim().toLowerCase()\n\n    // replacing a shorthand style by its extanded URL\n    if (style in maptilerStyles) {\n      style = maptilerStyles[style];\n    }\n    \n    // appending the token if necessary\n    if (!style.includes('key=')) {\n      style = `${style}?key=${config.accessToken}`\n    }\n\n    // calling the map constructor with full length style\n    super({...options, style});\n  }\n}"],"names":[],"mappings":";;;AAEsB,MAAA,MAAA,SAAe,SAAS,MAAO,CAAA;AAAA,EACnD,WAAA,CAAY,KAAa,GAAa,EAAA;AACpC,IAAA,KAAA,CAAM,KAAK,GAAG,CAAA,CAAA;AAAA,GAChB;AAAA,EAEA,SAAkB,GAAA;AAChB,IAAA,IAAA,CAAK,GAAM,GAAA,CAAA,CAAA;AACX,IAAA,IAAA,CAAK,GAAM,GAAA,CAAA,CAAA;AAAA,GACb;AACF;;ACPA,MAAM,MAA0B,GAAA;AAAA,EAC9B,WAAa,EAAA,kBAAA;AACf;;;;;;;;;;;;;;;;;;;;;ACFO,MAAM,cAAiB,GAAA;AAAA,EAC5B,OAAS,EAAA,mDAAA;AAAA,EACT,QAAU,EAAA,iDAAA;AAAA,EACV,eAAiB,EAAA,wDAAA;AAAA,EACjB,SAAW,EAAA,kDAAA;AAAA,EACX,QAAU,EAAA,iDAAA;AAAA,EACV,kBAAoB,EAAA,iDAAA;AAAA,EACpB,SAAW,EAAA,kDAAA;AAAA,EACX,OAAS,EAAA,gDAAA;AAAA,EACT,MAAQ,EAAA,+CAAA;AAAA,EACR,eAAiB,EAAA,wDAAA;AAAA,EACjB,SAAW,EAAA,kDAAA;AAAA,EACX,QAAU,EAAA,iDAAA;AACZ,CAAA,CAAA;AAGsB,MAAA,GAAA,SAAY,SAAS,GAAI,CAAA;AAAA,EAC7C,YAAY,OAA8B,EAAA;AAExC,IAAA,OAAA,CAAQ,IAAI,OAAO,CAAA,CAAA;AAInB,IAAA,IAAI,KAAS,GAAA,OAAA,CAAQ,KAAiB,CAAA,IAAA,GAAO,WAAY,EAAA,CAAA;AAGzD,IAAA,IAAI,SAAS,cAAgB,EAAA;AAC3B,MAAA,KAAA,GAAQ,cAAe,CAAA,KAAA,CAAA,CAAA;AAAA,KACzB;AAGA,IAAA,IAAI,CAAC,KAAA,CAAM,QAAS,CAAA,MAAM,CAAG,EAAA;AAC3B,MAAQ,KAAA,GAAA,CAAA,EAAG,aAAa,MAAO,CAAA,WAAA,CAAA,CAAA,CAAA;AAAA,KACjC;AAGA,IAAA,KAAA,CAAM,aAAI,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,CAAA,EAAJ,EAAa,KAAA,EAAM,CAAA,CAAA,CAAA;AAAA,GAC3B;AACF;;;;"}