{"version":3,"file":"maptiler.mjs","sources":["../src/LngLat.ts","../src/config.ts","../src/defaults.ts","../src/LogoControl.ts","../src/tools.ts","../src/Map.ts"],"sourcesContent":["import * as maplibre from 'maplibre-gl'\n\nexport default class  LngLat extends maplibre.LngLat {\n  constructor(lng: number, lat: number) {\n    super(lng, lat);\n  }\n\n  setToNull(): void {\n    this.lng = 0;\n    this.lat = 0;\n  }\n}","interface ConfigInterface {\n  apiToken: string,\n  verbose: boolean,\n}\n\nconst config: ConfigInterface = {\n  apiToken: 'Not defined yet.',\n  verbose: false,\n}\n\nexport { config };","\n/**\n * Some default settings for the SDK\n */\nconst defaults = {\n  // When a Map is instanciated without a 'style', then this one is the default\n  mapStyle: 'streets',\n  maptilerLogoURL: 'https://api.maptiler.com/resources/logo.svg',\n  maptilerURL: 'https://www.maptiler.com/',\n};\n\nexport default defaults;","import * as maplibre from 'maplibre-gl'\nimport defaults from './defaults';\nimport Map from './Map'\n\ntype LogoOptions = maplibre.LogoOptions & {\n  logoURL?: string,\n  linkURL?: string,\n}\n\n/**\n * This LogoControl extends the MapLibre LogoControl but instead can use any image URL and\n * any link URL. By default this is using MapTiler logo and URL.\n */\nexport default class LogoControl extends maplibre.LogoControl {\n  private logoURL:string = '';\n  private linkURL:string = '';\n  \n  constructor(options: LogoOptions = {}) {\n    super(options);\n\n    this.logoURL = options.logoURL ?? defaults.maptilerLogoURL;\n    this.linkURL = options.linkURL ?? defaults.maptilerURL;    \n  }\n\n  onAdd(map: Map) {\n    this._map = map;\n    this._compact = this.options && this.options.compact;\n    this._container = window.document.createElement('div');\n    this._container.className = 'maplibregl-ctrl';\n    const anchor = window.document.createElement('a');\n    anchor.style.backgroundRepeat = 'no-repeat';\n    anchor.style.cursor = 'pointer';\n    anchor.style.display = 'block';\n    anchor.style.height = '23px';\n    anchor.style.margin = '0 0 -4px -4px';\n    anchor.style.overflow = 'hidden';\n    anchor.style.width = '88px';\n    anchor.style.backgroundImage = `url(${this.logoURL})`;\n    anchor.style.backgroundSize = '100px 30px';\n    anchor.style.width = '100px';\n    anchor.style.height = '30px';\n\n    anchor.target = '_blank';\n    anchor.rel = 'noopener nofollow';\n    anchor.href = this.linkURL;\n    anchor.setAttribute('aria-label', this._map._getUIString('LogoControl.Title'));\n    anchor.setAttribute('rel', 'noopener nofollow');\n    this._container.appendChild(anchor);\n    this._container.style.display = 'block';\n\n    this._map.on('resize', this._updateCompact);\n    this._updateCompact();\n\n    return this._container;\n  }\n}","import { config } from \"./config\";\n\n/**\n * Prints on console only if 'verbose' mode from the config is set to true\n * @param args \n */\nexport function vlog(...args: any[]) {\n  if (config.verbose) {\n    console.log(...arguments);\n  }\n}\n\n\n/**\n * Expand the map style provided as argument of the Map constructor\n * @param style \n * @returns \n */\nexport function expandMapStyle(style): string {\n  const trimmed = style.trim();\n\n  // The style was possibly already given as expanded URL\n  if (trimmed.startsWith(\"http://\") || trimmed.startsWith(\"https://\")) {\n    return trimmed;\n  }\n\n  // testing if the style provided is of form \"maptiler://some-style\"\n  const maptilerDomainRegex = /^maptiler:\\/\\/(.*)/;\n  const match = maptilerDomainRegex.exec(trimmed);\n  \n  if (match) {\n    return `https://api.maptiler.com/maps/${match[1]}/style.json`\n  } \n\n  // The style could also possibly just be the name of the style without any URI style\n  return `https://api.maptiler.com/maps/${trimmed}/style.json`\n}","import * as maplibre from 'maplibre-gl';\nimport { config } from './config';\nimport defaults from './defaults';\nimport LogoControl from './LogoControl';\nimport { expandMapStyle, vlog } from './tools';\n\n\ntype MapOptions = Omit<maplibre.MapOptions, \"style\"> & Omit<maplibre.MapOptions, \"maplibreLogo\"> & {\n  style?: string,\n  maptilerLogo?: boolean,\n}\n\n\n/**\n * Map constructor\n */\nexport default class  Map extends maplibre.Map {\n  private attributionMustDisplay: boolean = false;\n  private attibutionLogoUrl: string = '';\n\n  constructor(options: MapOptions) { \n    let style = expandMapStyle(defaults.mapStyle);\n\n    if (\"style\" in options) {\n      style = expandMapStyle(options.style as string);\n    } else {\n      vlog(`Map style not provided, backing up to ${defaults.mapStyle}`);\n    }\n\n    // appending the token if necessary\n    if (!style.includes('key=')) {\n      style = `${style}?key=${config.apiToken}`\n    }\n\n    // calling the map constructor with full length style\n    super({...options, style, maplibreLogo: false });\n\n\n    this.once(\"load\", async () => {\n      let tileJsonURL = null;\n      try {\n        tileJsonURL = (this.getSource(\"openmaptiles\") as maplibre.VectorTileSource).url;\n      } catch(e) {\n        return;\n      }\n\n      const tileJsonRes = await fetch(tileJsonURL);\n      const tileJsonContent = await tileJsonRes.json();\n\n      // The attribution and logo must show when required\n      if ((\"logo\" in tileJsonContent && tileJsonContent.logo)) {\n        this.attributionMustDisplay = true;\n        this.attibutionLogoUrl = tileJsonContent.logo;\n        const logoURL: string = tileJsonContent.logo;\n\n        this.addControl(new LogoControl({logoURL}), options.logoPosition);\n\n        if (!options.attributionControl) {\n          this.addControl(new maplibre.AttributionControl())\n        }\n      } else if (options.maptilerLogo) {\n        this.addControl(new LogoControl(), options.logoPosition);\n      }\n    })\n  }\n\n}"],"names":[],"mappings":"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"}