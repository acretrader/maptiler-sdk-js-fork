import*as u from"maplibre-gl";export*from"maplibre-gl";const c={apiToken:"Not defined yet.",verbose:!1},p={mapStyle:"streets",maptilerLogoURL:"https://api.maptiler.com/resources/logo.svg",maptilerURL:"https://www.maptiler.com/",maptilerApiURL:"https://api.maptiler.com/"};class m extends u.LogoControl{constructor(e={}){var t,r;super(e),this.logoURL="",this.linkURL="",this.logoURL=(t=e.logoURL)!=null?t:p.maptilerLogoURL,this.linkURL=(r=e.linkURL)!=null?r:p.maptilerURL}onAdd(e){this._map=e,this._compact=this.options&&this.options.compact,this._container=window.document.createElement("div"),this._container.className="maplibregl-ctrl";const t=window.document.createElement("a");return t.style.backgroundRepeat="no-repeat",t.style.cursor="pointer",t.style.display="block",t.style.height="23px",t.style.margin="0 0 -4px -4px",t.style.overflow="hidden",t.style.width="88px",t.style.backgroundImage=`url(${this.logoURL})`,t.style.backgroundSize="100px 30px",t.style.width="100px",t.style.height="30px",t.target="_blank",t.rel="noopener nofollow",t.href=this.linkURL,t.setAttribute("aria-label",this._map._getUIString("LogoControl.Title")),t.setAttribute("rel","noopener nofollow"),this._container.appendChild(t),this._container.style.display="block",this._map.on("resize",this._updateCompact),this._updateCompact(),this._container}}function x(...o){c.verbose&&console.log(...arguments)}function g(o){const e=o.trim();if(e.startsWith("http://")||e.startsWith("https://"))return e;const t=/^maptiler:\/\/(.*)/.exec(e);return t?`https://api.maptiler.com/maps/${t[1]}/style.json`:`https://api.maptiler.com/maps/${e}/style.json`}var f=Object.defineProperty,v=Object.defineProperties,w=Object.getOwnPropertyDescriptors,y=Object.getOwnPropertySymbols,L=Object.prototype.hasOwnProperty,U=Object.prototype.propertyIsEnumerable,d=(o,e,t)=>e in o?f(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t,R=(o,e)=>{for(var t in e||(e={}))L.call(e,t)&&d(o,t,e[t]);if(y)for(var t of y(e))U.call(e,t)&&d(o,t,e[t]);return o},k=(o,e)=>v(o,w(e)),P=(o,e,t)=>new Promise((r,i)=>{var s=n=>{try{a(t.next(n))}catch(l){i(l)}},h=n=>{try{a(t.throw(n))}catch(l){i(l)}},a=n=>n.done?r(n.value):Promise.resolve(n.value).then(s,h);a((t=t.apply(o,e)).next())});class _ extends u.Map{constructor(e){let t=g(p.mapStyle);"style"in e?t=g(e.style):x(`Map style not provided, backing up to ${p.mapStyle}`),t.includes("key=")||(t=`${t}?key=${c.apiToken}`),super(k(R({},e),{style:t,maplibreLogo:!1})),this.attributionMustDisplay=!1,this.attibutionLogoUrl="",this.once("load",()=>P(this,null,function*(){let r=null;try{r=this.getSource("openmaptiles").url}catch{return}const i=yield(yield fetch(r)).json();if("logo"in i&&i.logo){this.attributionMustDisplay=!0,this.attibutionLogoUrl=i.logo;const s=i.logo;this.addControl(new m({logoURL:s}),e.logoPosition),e.attributionControl||this.addControl(new u.AttributionControl)}else e.maptilerLogo&&this.addControl(new m,e.logoPosition)}))}}var b=(o,e,t)=>new Promise((r,i)=>{var s=n=>{try{a(t.next(n))}catch(l){i(l)}},h=n=>{try{a(t.throw(n))}catch(l){i(l)}},a=n=>n.done?r(n.value):Promise.resolve(n.value).then(s,h);a((t=t.apply(o,e)).next())});function j(o){return b(this,arguments,function*(e,t={}){const r=new URL(`geocoding/${encodeURIComponent(e)}`,p.maptilerApiURL);if(r.searchParams.set("key",c.apiToken),"bbox"in t&&r.searchParams.set("bbox",[t.bbox.southWest.lng,t.bbox.southWest.lat,t.bbox.northEast.lng,t.bbox.northEast.lat].join(",")),"proximity"in t&&r.searchParams.set("proximity",[t.proximity.lng,t.proximity.lat].join(",")),"language"in t){const s=(Array.isArray(t.language)?t.language:[t.language]).join(",");r.searchParams.set("language",s)}const i=r.toString();console.log(i)})}function C(){return b(this,null,function*(){console.log("to implement...")})}const O={forward:j,reverse:C};export{_ as Map,c as config,O as geocoder};
